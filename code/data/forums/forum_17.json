{"title": "Stupid Nix Tricks: SSH Multiplexing - Networking - 0x00sec - The Home of the Hacker", "users": ["http://0x00sec.org/u/fraq", "http://0x00sec.org/u/pry0cc", "http://0x00sec.org/u/fraq", "http://0x00sec.org/u/fraq", "http://0x00sec.org/u/pry0cc", "http://0x00sec.org/u/fraq", "http://0x00sec.org/u/pry0cc", "http://0x00sec.org/u/fraq", "http://0x00sec.org/u/maderas", "http://0x00sec.org/u/fraq", "http://0x00sec.org/u/maderas", "http://0x00sec.org/u/fraq"], "data": [{"author": "fraq", "speak": "At this point, it should basically be \u00e2\u20ac\u0153Stupid SSH tricks\u00e2\u201e\u00a2\u00e2\u20ac\ufffd, but whatever.Prerequisites:  Basic understanding of *nix and SSHScenarioYou have a server behind a firewalled network and you need to connect. You could just do something like ssh first-server and from there ssh internal-server. Not too bad, right?What if there\u00e2\u20ac\u2122s a whole subnet of servers that you might wanna reach? What if you don\u00e2\u20ac\u2122t wanna SSH twice? What if you\u00e2\u20ac\u2122re using something that wants to execute from your local machine but can\u00e2\u20ac\u2122t really handle the manual two step SSH jump (such as Ansible)This is where SSH Multiplexing comes in very handySolution, part 1: Pivot boxAs you probably expected by now, we\u00e2\u20ac\u2122re going to be digging into our ssh config file, so go ahead and pop an editor open to ~/.ssh/configThe first thing we want to do is setup our \u00e2\u20ac\u0153gateway\u00e2\u20ac\ufffd or \u00e2\u20ac\u0153bastion\u00e2\u20ac\ufffd or \u00e2\u20ac\u0153jump\u00e2\u20ac\ufffd host. Whatever you want to call it. Doesn\u00e2\u20ac\u2122t matter to me. Here\u00e2\u20ac\u2122s an excerpt of mine with a breakdown of each line in the confighost jump  User fraq  Hostname foo.bar.baz  ControlMaster auto  ControlPath ~/.ssh/proxy-%r@%h:%p  ControlPersist 5mhost jump defines a friendly name in SSH for your machine. Note that this isn\u00e2\u20ac\u2122t in /etc/hosts, so you can\u00e2\u20ac\u2122t ping jump, but you can ssh jump. When you do use ssh jump, ssh opens up the config file, looks for a host entry that matches, and then uses that config to build the connection. Nothing we haven\u00e2\u20ac\u2122t covered already in previous chapters.User fraq is the username we use to connect to jumpHostname foo.bar.baz means that we connect to a server called foo.bar.baz in DNS. This can also be an IP address.These next three are the ones you need for multiplexing:ControlMaster auto tells the ssh connection that you want to listen for control connections (used for multiplexing)ControlPath tells ssh where to put the control socket for the connections and how to format the file names. Per the OpenSSH cookbook:The combination %r,  %h and %p stand for the remote user name, the remote host and the remote host\u00e2\u20ac\u2122s port. The control sockets should be given unique names.ControlPersist tells ssh how long to leave the master open.Solution, part 2: Target boxNow that your jump host is setup to accept multiplexed SSH connections, it\u00e2\u20ac\u2122s time to tell the SSH how to connect to your target box through the jump box.Host target    ProxyCommand ssh -W %h:%p jump    User fraq    Hostname 10.10.10.10As you can see, it looks very similar to a standard config file, except for the ProxyCommand option. This tells the ssh connection to execute that command first as a prerequisite for connecting to the target machine. In our case, we\u00e2\u20ac\u2122re saying that we want to ssh -W through the machine known to ssh as jump.ConclusionWith this in place, you can now use jump as a pivot to get into internal networks that it can access but you cannot, all without having to ssh twice manually. This means scripts or tools that invoke ssh can be used locally on your machine as well.And yes, this can be chained basically indefinitely, so you can create some pretty long and crazy proxy connections.Also, I very intentionally skipped over the in-depth explanation of ssh -W and the older ssh nc implementation. The whole purpose of this post was just to setup ssh multiplexing.Referenceshttps://en.wikibooks.org/wiki/OpenSSH/Cookbook/Multiplexing"}, {"author": "pry0cc", "speak": "This is cool and all. But I think you\u00e2\u20ac\u2122re complicating this massively.Here is an example of a jump box I use in my ssh config.Host myhost    Hostname 10.10.10.10    Port 4040     User pry0cc    ProxyJump pry@jumpbox.comSimply putting a host inside ProxyJump does the same thing."}, {"author": "fraq", "speak": "\u00e2\u20ac\u0153Complicating\u00e2\u20ac\ufffd all depends on your use case.I intentionally omitted the CLI version of this, but as you\u00e2\u20ac\u2122re probably aware, anything you do on the CLI can be done in the ssh config and vice versa. For me, I always ssh in certain boxes via jump hosts, so I want to remove the -J whatevermiddlehost from my command and just ssh foo.Beyond that, there\u00e2\u20ac\u2122s a very good reason to setup and use this via the config file: SSH config files can accept regex! If you want to execute a command against a whole subnet (ie, Ansible plays) then you can setup a host entry like *.mydomain or 10.10.*, so in one fell swoop you setup proxycommands for a whole bunch of servers."}, {"author": "fraq", "speak": "so, ssh -J is valid and good and useful if you\u00e2\u20ac\u2122re doing a one-off. As you know I always recommend that if you do something twice, script/automate/remove the manual interaction."}, {"author": "pry0cc", "speak": "Well, that code snippet ^ is an ssh config file. Not a command line switch."}, {"author": "fraq", "speak": "It should also be noted that ProxyCommand and ProxyJump are not the same. ProxyCommand is present on most but not all older SSH versions and allows for arbitrary commands attached to SSH (like nc), whereas ProxyJump is shorthand for sshing through multiple machines."}, {"author": "pry0cc", "speak": "Isn\u00e2\u20ac\u2122t that what you want to achieve? Use a machine to connect through? Or am I mistaken?"}, {"author": "fraq", "speak": "This is a basic example of connecting through machines, yeah. If you wanna use this to do additional fun stuff, that\u00e2\u20ac\u2122s up to you."}, {"author": "maderas", "speak": "Your \u00e2\u20ac\u0153Stupid Nix Tricks\u00e2\u20ac\ufffd have become a favorite of mine fraq\u00e2\u20ac\u00a6thank you.Also, I understand and appreciate pry0cc\u00e2\u20ac\u2122s contribution to this post.It should be noted that where exploitation is concerned, there could be any number of variables that could force improvisation of a concept or skill.Stupid snags happen all the time on engagements, and sometimes you don\u00e2\u20ac\u2122t have time to fully appreciate the cause of a snag until you are drafting your report (or even later when the client\u00e2\u20ac\u2122s IT department let you in  on what could have occurred); you just keep shifting the methods by which you\u00e2\u20ac\u2122d achieve your next step.Thus, I appreciate fraq\u00e2\u20ac\u2122s introduction of this concept and both your and pry0cc\u00e2\u20ac\u2122s methods of execution.I also appreciate the measures by which any work here on the Big0 is open to review and fair, polite criticism and discourse\u00e2\u20ac\u00a6so thank you both for being an example of this as well.There are no sacred cows in this community, only cows and BBQ."}, {"author": "fraq", "speak": "maderas:There are no sacred cows in this community, only cows and BBQ.I\u00e2\u20ac\u2122m gonna have to remember that"}, {"author": "maderas", "speak": "fraq-I am glad you enjoyed the quip brother; it was in no way an equivalent exchange for the knowledge you (and pry0cc) shared.It was a spontaneous flourish on my part; as well as being an apex skill of my trade, Nix Administration reminds of me of the older generations of Unix Administrators (far too many are retiring or being pushed into retirement ) who  projected a tangible  aura of arcane, strange power.I was managed/mentored by one grey beard who got into Systems Administration of huge industrial/energy sector enterprise environments to \u00e2\u20ac\u0153ease into retirement\u00e2\u20ac\ufffd .His career had started as a programmer in the 1960\u00e2\u20ac\u2122s: he designed and  programmed microprocessors for submarines .The company provided no tools or resources other then the microprocessors themselves (back then software bundling as a service was still going strong thanks to companies likeIBM).He had to program not just the microprocessors, but also almost all of his tools\u00e2\u20ac\u00a6mostly in Haskell\u00e2\u20ac\u00a6I think your post and the back and forth with pyr0cc (which those Unix sorcerers were also prone to) reminded me of those times.I think my mind got weird  with those words  as I realized that this community is building  the future facsimiles of those mages."}, {"author": "fraq", "speak": "This topic was automatically closed after 30 days. New replies are no longer allowed."}]}