{"user": "_py", "history": ["Nice write-up @exploit! For those who don\u2019t quite get the theory behind that technique, I\u2019d highly recommend reading the reference links. TL;DR - When a signal occurs, the kernel \u201cpauses\u201d the process\u2019s execution in order to jump to a signal handler routine. In order to safely resume the execution &hellip;", "Dammit! I was thinking of making a post on libpcap sniffing as well but you were faster xD Fantastic article once again @0x00pf, you explained it better than I would. Some notes: For the people who didn\u2019t know, Promiscuous mode means to sniff all traffic on the wire. On the other side, during no&hellip;", "A few hundred for now:", "Hello folks! I hope you\u2019re doing great! This is my first time I ever create a reversing engineering challenge so I\u2019m hoping there won\u2019t be any issue such as unintended solutions/bugs. ###Difficulty A big part of Reverse Engineering has to do with observation. That being said, depending on how sha&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "A few hundred for now:", "A few hundred for now:", "", "Hi A while ago I did a presentation on reverse engineering for a group at a local uni. I thought the slides and binaries I used could be useful, so I\u2019m posting it here. I\u2019d like to point out that many of the binaries I used are not mine, many came from skidophrenia which was hosted on ctfd.io by @&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Time to step up the game. Keep in mind there is more than one way to solve it. Good luck. RulesFeel free to pwn the binary on Ubuntu 16.04 or 17.04. Extra credits if you pwn it on 17.04. Don\u2019t ask me for hints. Hints will only be given 1 month after the challenge\u2019s release as long as there a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Keep in mind they are called \u201cpwnables\u201d for a reason  malloc and free were purposely used because their internals are more known and thus kinda \u201ceasier\u201d to exploit.", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Great post @0x00pf! Just an fyi/clarification: Object code is also known as relocatable code. The reason for that is because many functions / variables will probably not be known to your executable until runtime (i.e printf() which is defined in libc, which is a shared object). Thus, the object co&hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "Nice control over your ELF structures @ricksanchez, gj", "Worked on a solution using LIEF  https://github.com/cedriczirtacic/stuff/tree/master/CTFs/0x00sec/BabyELF", "LIEF is awesome and does wonders! gj", "I\u2019m a bit sad that I didn\u2019t found an alternative solution, but whatever. Was fun  echo -ne \u201c\\x01\u201d | dd of=babyelf_revenge seek=781 bs=1 count=1 conv=notrunc with the \u201cpassword\u201d of \u201ckek\u201d.", "If we check the .dynsym sections again in readelf we can see that strcmp@GLIBC_2.0 is actually there but the .rel.plt section looks a bit cranky. We gotta fix that first  puts Info field with the correct value. In our case there should be an Info 00000107 instead of the 00000407  Relocation sectio&hellip;", "Nice control over your ELF structures @ricksanchez, gj", "What fitting challenges  \u2026 This one is about patching the right index for the string table in the st_name field in the .dynsym section for the second puts call. When looking at the assembly code the second puts looks more like an intended strcmp with the loading of \u2018kek\u2019 in the register  right bef&hellip;", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "Thank you for the feedback! I figured code patching has already been quite overused in crackmes so why not add a twist that requires a different kind of binary mastery  Good job on solving it!", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "Thank you for the feedback! I figured code patching has already been quite overused in crackmes so why not add a twist that requires a different kind of binary mastery  Good job on solving it!", "Nice Crackme, I great way of learning while playing with the ELF format  0804a00c  00000107 R_386_JUMP_SLOT   00000000   strcmp@GLIBC_2.0", "Thank you for the feedback! I figured code patching has already been quite overused in crackmes so why not add a twist that requires a different kind of binary mastery  Good job on solving it!", "The ELF wizard strikes back!  Indeed the intended patch is 2 bits but I thought I\u2019d be really messing with someone\u2019s creativity/mind if I were to be that precise. Clean and elegant solution as always. I give up on trying to trick you with ELF shenanigans", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "Thanks for the challenge mate. Pretty cool. I believe it is actually a 2 bits patch . echo -ne \u201c\\x01\u201d | dd of=test1 seek=$((0x308 + 0x5)) bs=1 count=1 conv=notrunc I believe I just get home earlier than @Leeky", "The ELF wizard strikes back!  Indeed the intended patch is 2 bits but I thought I\u2019d be really messing with someone\u2019s creativity/mind if I were to be that precise. Clean and elegant solution as always. I give up on trying to trick you with ELF shenanigans", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "I recently began reading up on the ELF format thanks to @ricksanchez\u2019s article. This might be a fun exercise", "Don\u2019t confuse difficulty with skills. Anybody who has an in-depth knowledge of the ELF can solve it in no time.", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "Not bad at all  The intended patch required ELF mastery, but a patch is a patch. Feel free to look through the spoiler tags or try a lil\u2019 harder", "I see, glad to see that I haven\u2019t missed something obvious  BTW, thanks for the challenge mate. I love the smell of .dynsym in the morning", "I\u2019m not sure if this was the intended way. Was fun though  echo -ne \u201c\\x65\u201d | dd of=babyelf seek=4152 bs=1 count=1 conv=notrunc", "Not bad at all  The intended patch required ELF mastery, but a patch is a patch. Feel free to look through the spoiler tags or try a lil\u2019 harder", "I see, glad to see that I haven\u2019t missed something obvious  BTW, thanks for the challenge mate. I love the smell of .dynsym in the morning", "Oopsie! I had made a previous demo whose strings in the string table differed in distance so little that required 4-bit patching. Updated the description  Congrats on patching  .dynsym like a boss", "I\u2019m curious about the 4 bits patch. This is a basic 1 byte patch. Hope to get some time to look for the 4bits solution echo -ne \u201c\\x26\u201d | dd of=test1 seek=$((0x2b8 + 0x78)) bs=1 count=1 conv=notrunc", "Oopsie! I had made a previous demo whose strings in the string table differed in distance so little that required 4-bit patching. Updated the description  Congrats on patching  .dynsym like a boss", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "The link below is a website that includes exploit exercises. Just had a look at it and it seems interesting. I hope you will like it. https://exploit-exercises.com/", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "", "There\u2019s an ARM legend staying quiet in between us. I summon you, @Leeky.", "@_py   I\u2019m not that good with ARM actually. @Wunkolo seems to know a lot more than me. (I can also really recommend GPATEK and Tonc for learning ARM as the GBA kinda forces you to use normal ARM and THUMBS as the different memory regions have different IO sizes, I\u2019ve just experimented with it a li&hellip;", "There\u2019s an ARM legend staying quiet in between us. I summon you, @Leeky.", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "That\u2019s because exploit dev is an art", "", "", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "We Need Hackers Now More Than EverI\u201cYes, I am a criminal. My crime is that of curiosity.\u201d In the years since The Hacker Manifesto was first typed out, much of the internet has changed. It has grown in both size and scope. New protocols have been invented. The web was born. It is altogether diffe&hellip;", "PrefaceHey there! I\u2019m finally ready to present you the third installment of the series exploit mitigation techniques. The last two times we talked about Data Execution Prevention and Stack Canaries Today I want to talk about Address Space Layout Randomization or ASLR in short. Format wise the a&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "For context, @Leeky was the highest scoring member on our CTF. He is probably the best pwner on this forum (excluding @exploit, @_py, @dtm  + @0x00pf) since they all were involved in CTF development.", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "That\u2019s. Mah. Boy!", "So many of us here are looking for work or interviewing for jobs. Others of us have plenty of experience interviewing or being interviewed. Let\u2019s put those skills together and make our community better! I\u2019m going to lead from the front here by sharing a link where you can subscribe to my calendar a&hellip;", "That\u2019s. Mah. Boy!", "In the name of Allah, the most beneficent, the most merciful. Hello everyone, i\u2019ll be writing how it was expected for the tasks I made to be solved.  I finally found some free time, sorry for the late post. So, this article will be splitted to two main parts: I. babyheap II. left I. babyheap&hellip;", "That\u2019s. Mah. Boy!", "Community Assigned Level:NewbieWannabeHackerWizardGuru0voters Show resultsThere won\u2019t be anything groundbreaking in here, and a lot of the content will be sourced from others (properly attributed, mind you). However, I am going to try to bring a different perspective to the t&hellip;", "That\u2019s. Mah. Boy!", "That\u2019s. Mah. Boy!", "Got &#39;em.  [image]", "Time to step up the game. Keep in mind there is more than one way to solve it. Good luck. RulesFeel free to pwn the binary on Ubuntu 16.04 or 17.04. Extra credits if you pwn it on 17.04. Don\u2019t ask me for hints. Hints will only be given 1 month after the challenge\u2019s release as long as there a&hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "That\u2019s what you get for making a binary so user-dependent. ###Diffuclty 4/10 ###Objective Get a shell. ###Rules ASLR on. No libc this time, it\u2019s statically linked, thus its size. Full exploit + demo (i.e asciinema) are accepted as valid solutions. Just a screenshot of the shell does&hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "This was an absolutely amazing example of catching malware in the wild and reversing it. However, I\u2019d like to address what i\u2019m seeing in the comments: Let\u2019s discuss the work that @lkw and friends performed here and not use this as a support thread to ask for help with the malware you discovered. Ta&hellip;", "Freestyle February: A 0x00sec Article ContestHello 0x00ers! The 0x00sec Staff is happy to announce our first annual Freestyle February! Here\u2019s how it works: Take up until the last day of February to research something technical, something from which the 0x00sec community might benefit. Then, po&hellip;", "", "Time to step up the game. Keep in mind there is more than one way to solve it. Good luck. RulesFeel free to pwn the binary on Ubuntu 16.04 or 17.04. Extra credits if you pwn it on 17.04. Don\u2019t ask me for hints. Hints will only be given 1 month after the challenge\u2019s release as long as there a&hellip;", "I don\u2019t get it. Why would I create and post a pwnable if I haven\u2019t made sure it\u2019s solvable?", "Time to step up the game. Keep in mind there is more than one way to solve it. Good luck. RulesFeel free to pwn the binary on Ubuntu 16.04 or 17.04. Extra credits if you pwn it on 17.04. Don\u2019t ask me for hints. Hints will only be given 1 month after the challenge\u2019s release as long as there a&hellip;", "There will be a time when I finally pick up heap shenanigans and I will do all those challenges @_py! Promised", "Time to step up the game. Keep in mind there is more than one way to solve it. Good luck. RulesFeel free to pwn the binary on Ubuntu 16.04 or 17.04. Extra credits if you pwn it on 17.04. Don\u2019t ask me for hints. Hints will only be given 1 month after the challenge\u2019s release as long as there a&hellip;", "There will be a time when I finally pick up heap shenanigans and I will do all those challenges @_py! Promised", "I can pm you my PoC if you\u2019re in such doubt.", "If i\u2019m not mistaken, I believe @0x00pf did that at one point in the past 2 yrs.", "I don\u2019t get it. Why would I create and post a pwnable if I haven\u2019t made sure it\u2019s solvable?", "Time to step up the game. Keep in mind there is more than one way to solve it. Good luck. RulesFeel free to pwn the binary on Ubuntu 16.04 or 17.04. Extra credits if you pwn it on 17.04. Don\u2019t ask me for hints. Hints will only be given 1 month after the challenge\u2019s release as long as there a&hellip;", "Time to step up the game. Keep in mind there is more than one way to solve it. Good luck. RulesFeel free to pwn the binary on Ubuntu 16.04 or 17.04. Extra credits if you pwn it on 17.04. Don\u2019t ask me for hints. Hints will only be given 1 month after the challenge\u2019s release as long as there a&hellip;", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "", "PrefaceHey there! After quite some time the second part will be finally published  ! Sorry for the delay, real life can be overwhelming ;)\u2026 Last time I have introduced this series by covering Data Execution Prevention (DEP). Today we\u2019re dealing with the next big technique. As the title already&hellip;", "PrefaceHey there! After quite some time the second part will be finally published  ! Sorry for the delay, real life can be overwhelming ;)\u2026 Last time I have introduced this series by covering Data Execution Prevention (DEP). Today we\u2019re dealing with the next big technique. As the title already&hellip;", "", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "", "", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "IntroductionHello folks, I hope you\u2019re doing great! Today\u2019s topic will be once again heap exploitation related. In fact, we\u2019ll be going over the recent updates of glibc\u2019s heap allocator, (pt)malloc, which I\u2019ve researched/reversed lately and decided to present them to you since there is barely any i&hellip;", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "This topic was automatically closed after 30 days. New replies are no longer allowed.", "Dude! Second time where I\u2019m about to write up a paper on a certain topic and you wrote it sooner xD Either way, great explanation as always, ptrace is really powerful. Maybe we can collaborate on a similar topic in the future since our ideas seem to be alike.", "", "I\u2019m glad you gave 0 fucks about the 2 comments above.", "", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Let\u2019s step up the game. ###Description Note down your dreams in your diary. Who knows, dreams come true and you might get a shell! ###Rules ASLR on.Make sure your malloc\u2019s version is the latest. I know its mitigations so don\u2019t try to fool me.If you\u2019re getting crashes, consult this.Only a d&hellip;", "@pry0cc @oaktree: I believe this post needs to resume on IRC at this point.", "", "", "", "", "", "", "", "", "", "", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "", "Here\u2019s some feedback: ELF isn\u2019t a format only for executable files. There are also shared libraries and object files. Quoting every section of the book regarding ELF shows me that either you don\u2019t understand the material in depth, or you didn\u2019t bother trying to simplify the terms. Some drawing&hellip;", "", "Literally the 1st link that pops using the search bar for \u201carm exploitation\u201d:", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "Literally the 1st link that pops using the search bar for \u201carm exploitation\u201d:", "", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "", "", "", "", "", "", "", "", "There was the following menu as I described: Welcome to your TeamManager (TM)!0.- Exit1.- Add player2.- Remove player3.- Select player4.- Edit player5.- Show player6.- Show teamYour choice:When you enter the choice number, atoi is used behind the scenes to convert your input into an actua&hellip;", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "", "", "", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "", "As long as you have access to the binary, you can do the aforementioned. If you\u2019re talking about blind exploitation (blind ROP, blind format string attack), you just gotta leak multiple times.", "Hi @cmderpt, Assuming you\u2019ve understood the theory behind malloc (main arena, bins etc), it\u2019s not hard to understand why I did it. It\u2019s known that there is a UAF vulnerability and I abuse that to leak libc\u2019s base address. When a chunk (either small or large chunk) is free\u2019d, it\u2019s placed in a doubly&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "As long as you have access to the binary, you can do the aforementioned. If you\u2019re talking about blind exploitation (blind ROP, blind format string attack), you just gotta leak multiple times.", "Thanks for your explain but I still have an another issue. How to know 0x7ffff7a12000 (base address of libc) if I can\u2019t do anything (e.g debug, ld,\u2026 ) except connecting to socket", "Hi @cmderpt, Assuming you\u2019ve understood the theory behind malloc (main arena, bins etc), it\u2019s not hard to understand why I did it. It\u2019s known that there is a UAF vulnerability and I abuse that to leak libc\u2019s base address. When a chunk (either small or large chunk) is free\u2019d, it\u2019s placed in a doubly&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "", "Hi 0x00\u2019ers, and all those that took part in 0x00ctf 2017! First off, we want to thank all of our challenge creators, admins, and participants. CTFs are a great opportunity for us as a community to sharpen our skills, challenge ourselves and each other with new problems, and meet new people who sha&hellip;", "Hi 0x00\u2019ers, and all those that took part in 0x00ctf 2017! First off, we want to thank all of our challenge creators, admins, and participants. CTFs are a great opportunity for us as a community to sharpen our skills, challenge ourselves and each other with new problems, and meet new people who sha&hellip;", "Hi @cmderpt, Assuming you\u2019ve understood the theory behind malloc (main arena, bins etc), it\u2019s not hard to understand why I did it. It\u2019s known that there is a UAF vulnerability and I abuse that to leak libc\u2019s base address. When a chunk (either small or large chunk) is free\u2019d, it\u2019s placed in a doubly&hellip;", "Hi @password, The challenges themselves along with their corresponding write-ups will be posted publicly by the authors. The participants are more than welcome to make write-ups as well! More details coming soon! We hope you enjoyed our CTF and keep up the grinding!", "Hi @password, The challenges themselves along with their corresponding write-ups will be posted publicly by the authors. The participants are more than welcome to make write-ups as well! More details coming soon! We hope you enjoyed our CTF and keep up the grinding!", "Hi @cmderpt, Assuming you\u2019ve understood the theory behind malloc (main arena, bins etc), it\u2019s not hard to understand why I did it. It\u2019s known that there is a UAF vulnerability and I abuse that to leak libc\u2019s base address. When a chunk (either small or large chunk) is free\u2019d, it\u2019s placed in a doubly&hellip;", "Hi @cmderpt, Assuming you\u2019ve understood the theory behind malloc (main arena, bins etc), it\u2019s not hard to understand why I did it. It\u2019s known that there is a UAF vulnerability and I abuse that to leak libc\u2019s base address. When a chunk (either small or large chunk) is free\u2019d, it\u2019s placed in a doubly&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Hi @_py, I\u2019m a newbie so can you explain why do you have a expression I don\u2019t understand where is 0x3c17b8 come from? Thank you ^^", "Another one: http://www.pentest.guru/index.php/2016/01/28/best-books-tutorials-and-courses-to-learn-about-exploit-development/", "Abso-fucking-lutely!", "Abso-fucking-lutely!", "Abso-fucking-lutely!", "", "", "PrefaceWelcome to a new series about GNU/Linux exploit mitigation techniques. We always had these awesome pwn and how2exploit articles. I wanna shift the focus to the bypassed techniques to create a series about  currently deployed approaches. Afterwards I\u2019d like to focus on their limitations wi&hellip;", "PrefaceWelcome to a new series about GNU/Linux exploit mitigation techniques. We always had these awesome pwn and how2exploit articles. I wanna shift the focus to the bypassed techniques to create a series about  currently deployed approaches. Afterwards I\u2019d like to focus on their limitations wi&hellip;", "", "Either something is up with your system, or what\u2019s more likely is that there is more than one occurrence of /bin/sh and strings outputs the latter offset for some weird reason (?). PoC (x86_64 but doesn\u2019t matter): &gt;&gt; strings -a -t x /lib/x86_64-linux-gnu/libc.so.6 | grep &quot;/bin/sh&quot;18cd17 /bin/sh&hellip;", "Either something is up with your system, or what\u2019s more likely is that there is more than one occurrence of /bin/sh and strings outputs the latter offset for some weird reason (?). PoC (x86_64 but doesn\u2019t matter): &gt;&gt; strings -a -t x /lib/x86_64-linux-gnu/libc.so.6 | grep &quot;/bin/sh&quot;18cd17 /bin/sh&hellip;", "", "First of all, it\u2019s 2017, let me introduce you to pwntools! There is no need to hardcode your exploit in an one-liner. I\u2019m away currently, but from a really quick look it looks like once you overflow the buffer up until the return address, you\u2019ve entered system\u2019s address, which is correct and then y&hellip;", "Either something is up with your system, or what\u2019s more likely is that there is more than one occurrence of /bin/sh and strings outputs the latter offset for some weird reason (?). PoC (x86_64 but doesn\u2019t matter): &gt;&gt; strings -a -t x /lib/x86_64-linux-gnu/libc.so.6 | grep &quot;/bin/sh&quot;18cd17 /bin/sh&hellip;", "You should pass the pointer to /bin/sh. How are you calculating sh\u2019s address on the stack? If you\u2019re using gdb to find that out, then that\u2019s your mistake. The stack alignment/padding inside and outside of gdb is different (environment variables etc). That being said, you can either use pwntools as I&hellip;", "First of all, it\u2019s 2017, let me introduce you to pwntools! There is no need to hardcode your exploit in an one-liner. I\u2019m away currently, but from a really quick look it looks like once you overflow the buffer up until the return address, you\u2019ve entered system\u2019s address, which is correct and then y&hellip;", "Hi @_py, Just for anyone that is following the thread. There is one single &quot;/bin/sh&quot; on my libc, otherwise, strings should had shown all of them. What you said is perfectly fine and my system is OK ;). It was may bad that I assume you were using the output of ldd as libc_base (that is what didn\u2019t &hellip;", "Hi @_py, Just for anyone that is following the thread. There is one single &quot;/bin/sh&quot; on my libc, otherwise, strings should had shown all of them. What you said is perfectly fine and my system is OK ;). It was may bad that I assume you were using the output of ldd as libc_base (that is what didn\u2019t &hellip;", "Either something is up with your system, or what\u2019s more likely is that there is more than one occurrence of /bin/sh and strings outputs the latter offset for some weird reason (?). PoC (x86_64 but doesn\u2019t matter): &gt;&gt; strings -a -t x /lib/x86_64-linux-gnu/libc.so.6 | grep &quot;/bin/sh&quot;18cd17 /bin/sh&hellip;", "Hi @WhiteCollar The system function actually executes /bin/sh -c command (see the man page). An sh: 1 something means that you have successfully called system but with the wrong parameter. Whatever follows the sh: 1 is what you have tried to execute\u2026 that may be non-printable garbage. Said that, a&hellip;", "I said libc base. You can\u2019t just take whatever entry, you need to take the 1st one.", "When finding libc_base, I typed in vmmap libc into GDB after running the program and breaking on main and there were a few entries so i just took one of them and added the address to the offset of \u201c/bin/sh\u201d to obtain an address for \u201c/bin/sh\u201d in libc. I\u2019m still unable to get the exploit working. Af&hellip;", "You should pass the pointer to /bin/sh. How are you calculating sh\u2019s address on the stack? If you\u2019re using gdb to find that out, then that\u2019s your mistake. The stack alignment/padding inside and outside of gdb is different (environment variables etc). That being said, you can either use pwntools as I&hellip;", "You should pass the pointer to /bin/sh. How are you calculating sh\u2019s address on the stack? If you\u2019re using gdb to find that out, then that\u2019s your mistake. The stack alignment/padding inside and outside of gdb is different (environment variables etc). That being said, you can either use pwntools as I&hellip;", "You should pass the pointer to /bin/sh. How are you calculating sh\u2019s address on the stack? If you\u2019re using gdb to find that out, then that\u2019s your mistake. The stack alignment/padding inside and outside of gdb is different (environment variables etc). That being said, you can either use pwntools as I&hellip;", "First of all, it\u2019s 2017, let me introduce you to pwntools! There is no need to hardcode your exploit in an one-liner. I\u2019m away currently, but from a really quick look it looks like once you overflow the buffer up until the return address, you\u2019ve entered system\u2019s address, which is correct and then y&hellip;", "0xffffd144 is pointer to \u201c/bin/sh\u201d if you look at my second last image. 0xf7e2e7f0 is the address of exit() which is the function I want to return to after system() but like you said its irrelevant. Wait do I pass a pointer to \u201c/bin/sh\u201d or the actual \u201c/bin/sh\u201d?", "First of all, it\u2019s 2017, let me introduce you to pwntools! There is no need to hardcode your exploit in an one-liner. I\u2019m away currently, but from a really quick look it looks like once you overflow the buffer up until the return address, you\u2019ve entered system\u2019s address, which is correct and then y&hellip;", "All right, I\u2019ve taken a few screenshots because I think a picture tells a thousand words. Binary Used (same as example):  [image]Breakpoints set in GDB:  [image]Stack just before RET statement in main():  [image]Contents of buffer:  [image]Exploit used:  [image]Honestly man I\u2019ve been tryi&hellip;", "Bump: https://ctftime.org/event/548 We\u2019re on CTF Time.", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Hi mate, PoC | GTFO  Translation just in case: Show us your exploit and the given binary.", "", "", "Ok thank you, I\u2019ll try harder", "Ok thank you, I\u2019ll try harder", "There are pwnables which have taken me more than 2-3 weeks! This non-stop back and forth between repeated failures will teach you more than if you had solved the challenge within the first day. Just keep at it.", "Helping you wouldn\u2019t help you actually, if you know what I mean. Unless you\u2019re stuck for at least 2-3 weeks then feel free to look at solutions. Here\u2019s another explanation. Have you identified the bug? That lab might require some tiny bruteforcing iirc.", "You mentioned lab4B yet you link to lab6B\u2019s exploit.", "", "All the challenges here are essentially no different than the challenges on official pwnable sites. Checkout MBE by RPISEC for a full course on Binary Exploitation. Once you\u2019re done with that and you\u2019re feeling hardcore, move on to the mighty pwnable.tw. There are multiple resources on pwnable exer&hellip;", "All the challenges here are essentially no different than the challenges on official pwnable sites. Checkout MBE by RPISEC for a full course on Binary Exploitation. Once you\u2019re done with that and you\u2019re feeling hardcore, move on to the mighty pwnable.tw. There are multiple resources on pwnable exer&hellip;", "All the challenges here are essentially no different than the challenges on official pwnable sites. Checkout MBE by RPISEC for a full course on Binary Exploitation. Once you\u2019re done with that and you\u2019re feeling hardcore, move on to the mighty pwnable.tw. There are multiple resources on pwnable exer&hellip;", "All the challenges here are essentially no different than the challenges on official pwnable sites. Checkout MBE by RPISEC for a full course on Binary Exploitation. Once you\u2019re done with that and you\u2019re feeling hardcore, move on to the mighty pwnable.tw. There are multiple resources on pwnable exer&hellip;", "All the challenges here are essentially no different than the challenges on official pwnable sites. Checkout MBE by RPISEC for a full course on Binary Exploitation. Once you\u2019re done with that and you\u2019re feeling hardcore, move on to the mighty pwnable.tw. There are multiple resources on pwnable exer&hellip;", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "", "", "There is system ASLR where only libc\u2019s base address is randomized and there\u2019s also full ASLR which randomizes the address space of the binary itself (i.e gadget addresses as you mentioned), aka PIE (google gcc\u2019s -fPIE flag). In @exploit\u2019s case, only libc\u2019s base address was randomized and thus the g&hellip;", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Yes, remove them. Make categorizing great again.", "[1] rbp/ebp is vital for main()\u2019s and any other function\u2019s well being. It works as a boundary between the local variables and the arguments of a function (mostly on 32-bit but function arguments are also pushed on the stack after a certain number of arguments on 64-bit). Actually its usage is so im&hellip;", "Poor choice of words on my part.   Obviously we care what it is, because we push it; I was trying to convey that we don\u2019t care about the literal value for drawing the stack I thought the later section(s) covered this, but I can make it more clear early on. Thanks!", "Poor choice of words on my part.   Obviously we care what it is, because we push it; I was trying to convey that we don\u2019t care about the literal value for drawing the stack I thought the later section(s) covered this, but I can make it more clear early on. Thanks!", "[1] rbp/ebp is vital for main()\u2019s and any other function\u2019s well being. It works as a boundary between the local variables and the arguments of a function (mostly on 32-bit but function arguments are also pushed on the stack after a certain number of arguments on 64-bit). Actually its usage is so im&hellip;", "", "Google is your friend. Hint: 64-bit binary", "[1] rbp/ebp is vital for main()\u2019s and any other function\u2019s well being. It works as a boundary between the local variables and the arguments of a function (mostly on 32-bit but function arguments are also pushed on the stack after a certain number of arguments on 64-bit). Actually its usage is so im&hellip;", "#0x00ctf 2017Hello fellow nullers and lurkers alike, today we are very pleased to announce the biggest 0x00sec CTF of 2017! 0x00ctf will have challenges focussed mainly on Pwning and Reverse Engineering. timedatectl&gt;&gt; 12:30pm December 15th 2017 UTC-50x00ctf will begin at 12:30 pm US Eastern tim&hellip;", "There is system ASLR where only libc\u2019s base address is randomized and there\u2019s also full ASLR which randomizes the address space of the binary itself (i.e gadget addresses as you mentioned), aka PIE (google gcc\u2019s -fPIE flag). In @exploit\u2019s case, only libc\u2019s base address was randomized and thus the g&hellip;", "There is system ASLR where only libc\u2019s base address is randomized and there\u2019s also full ASLR which randomizes the address space of the binary itself (i.e gadget addresses as you mentioned), aka PIE (google gcc\u2019s -fPIE flag). In @exploit\u2019s case, only libc\u2019s base address was randomized and thus the g&hellip;", "Yes, remove them. Make categorizing great again.", "Should we make this a poll? And public?", "Yes, remove them. Make categorizing great again.", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "Yes, remove them. Make categorizing great again.", "It\u2019s fully documented in my updated version, but thanks for the note.", "", "It\u2019s fully documented in my updated version, but thanks for the note.", "thanks for the post actually it\u2019s the offset of relocation entry for \u201cputs\u201d function in the relocation array for \u201cPLT\u201d  , as shown form running \u201creadelf -r obj\u201d , the relocation entry for \u201cputs\u201d , is at offset 0x0 form the beginning of .rel.plt section. again thanks for the post and ur effort try&hellip;", "It\u2019s fully documented in my updated version, but thanks for the note.", "thanks for the post actually it\u2019s the offset of relocation entry for \u201cputs\u201d function in the relocation array for \u201cPLT\u201d  , as shown form running \u201creadelf -r obj\u201d , the relocation entry for \u201cputs\u201d , is at offset 0x0 form the beginning of .rel.plt section. again thanks for the post and ur effort try&hellip;", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "Continuing the discussion from [KEYGEN] Look Inside: Please be aware that, in case you are trying to solve the KEYGEN Look Inside, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading. You have been warned PATCHME[spoiler] T&hellip;", "Hello nullers, Retr1 here. I have a suggestion today for the admins (@pry0cc, @oaktree, @IoTh1nkN0t, @_py, @fraq). Thread closingAs a matter of fact, our staff team has decided to discourage necrobumping. And rightfully so, don\u2019t get me wrong. However, I believe that closing the specific thread is&hellip;", "", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "", "Thank you for the feedback! That depends entirely on how \u201cheavy\u201d the topic I\u2019m trying to share is. This particular concept for instance is by far the most technical write-up I\u2019ve written so far. I\u2019d say it took me about 2-3 weeks of continuous research/reading and then about 4-5 days to create a p&hellip;", "", "", "", "", "So are there any alternative ways to accomplish the task knowing that I will be secure?", "I believe that\u2019s exactly what I said above.", "Regards, but some of them can harm the hard drive even you run them on VM, like WannaCry [ just as a mention ]", "Virtual machines are isolated/separate entities. The host OS should (in theory) be untouched. There are cases however where exploits/malware can achieve entire VM escapes but that\u2019s another story.", "I\u2019m familiar with using Ubuntu in VMWare. However, what I meant to ask was that as the virtual machine does access the hard disk for showing me the drives, wouldn\u2019t the original OS installed be infected if i infect the OS in VMWare? I apologize if the question sounds dumb, I\u2019m just getting to know t&hellip;", "It\u2019s called virtual machines, google it.", "", "", "Thank you for the feedback! That depends entirely on how \u201cheavy\u201d the topic I\u2019m trying to share is. This particular concept for instance is by far the most technical write-up I\u2019ve written so far. I\u2019d say it took me about 2-3 weeks of continuous research/reading and then about 4-5 days to create a p&hellip;", "Thank you for the feedback! That depends entirely on how \u201cheavy\u201d the topic I\u2019m trying to share is. This particular concept for instance is by far the most technical write-up I\u2019ve written so far. I\u2019d say it took me about 2-3 weeks of continuous research/reading and then about 4-5 days to create a p&hellip;", "How much time you take to upload this information here ur awesome bro but I can\u2019t understand any thing as I am beginner but it looks super cool what u did", "Thank you for the feedback! That depends entirely on how \u201cheavy\u201d the topic I\u2019m trying to share is. This particular concept for instance is by far the most technical write-up I\u2019ve written so far. I\u2019d say it took me about 2-3 weeks of continuous research/reading and then about 4-5 days to create a p&hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Wanted to have a little refresher on shells in C and I\u2019d like to make some notes in case someone didn\u2019t fully understand why the shell works. When execv was called: The caller\u2019s memory image was overwritten by the new one. The file table stayed in place. Meaning, open file descriptors are pre&hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Thank you for great tutorial  I didn\u2019t know well about heap Null poison attack . thanks to you  I feel like I\u2019m getting know about it  Thank you again, _py~", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "", "", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "", "", "I\u2019m looking at this like @_py does as well. These nifty little tricks and knowledge bombs  for certain tools, or other methods to automate things are good to know. So getting a digest of what you can do every now and would really be appreciated !", "Believe it or not my lack of knowledge on the topics you\u2019re good at actually slows down my pwning process a ton. Your posts would be much appreciated by the community. Proper workflow is key to productivity and you definitely know about that.", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Believe it or not my lack of knowledge on the topics you\u2019re good at actually slows down my pwning process a ton. Your posts would be much appreciated by the community. Proper workflow is key to productivity and you definitely know about that.", "Believe it or not my lack of knowledge on the topics you\u2019re good at actually slows down my pwning process a ton. Your posts would be much appreciated by the community. Proper workflow is key to productivity and you definitely know about that.", "I do a lot of things in Linux that would make baby Jesus cry, so I figure I\u2019ll just document them here when I notice I\u2019m doing them. There are a lot of other secops things I do that I\u2019d love to share here, but they\u2019re not useful for most folks in the forum and only a few people would find them inte&hellip;", "#What\u2019s this about? Hello everyone, I\u2019m Noswis. You might have already met me on IRC but this my first real post here! In this post I want to show you how I made a key-generator for a puzzle that @0x00pf created. I learned a lot from the puzzle that I\u2019d like to share with you and I hope you will le&hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Thanks for the challenge ! here\u2019s my solution : [spoiler]readelf gives me the 66 for the start of header  but 64 for the size of $readelf -h chall[...]D\u00e9but des en-t\u00eates de programme :  66 (octets dans le fichier)[...]Taille de cet en-t\u00eate:             64 (octets) because the length of the &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Why do you do this, fraq?Occasionally I\u2019ll encounter myself doing something in Linux I don\u2019t do very often and I know other people aren\u2019t doing much as well. When that happens, I try to document the stupid, quirky things I did. Maybe for posterity, maybe because I need a life, I dunno. What is the&hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "base64 -d thebelow | gunzip &gt; challH4sICAvqr1kAA2V4aXQAq3f1cWNiZGSAASYGOwYQr4HBAcx3goo3IJQAZSyAahwYWIGqQcKsDMjAAYXuhPI64fIKKKoN/++wAVL8qGZgB8xA2xrg5kMAyH4Who//0dUKgDGmem6oeCdDAoq4OA5xOaj4BDRxhtSKzBK9vMTiXIb4+KTi4vjiksSiEob41JTEkkQglZfCwKBXXJlbkpgEpEuKIHQGjFWSWlFChI8JA2kGSBiwQfkw/zZA+Zxo6gXQ+IIM&hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "@_py The link to binary is not available any more  Can we still play with it ?", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "If you want to know why this happens and learn from it so it never happens again, fire up gdb. Obviously your shellcode is your issue. Go all the way up to the point where it returns and then look at the instructions step by step. Once you figure out what\u2019s up, let others know what was the issue so&hellip;", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "NULL Pointer dereferenceIn the name of Allah, the most beneficent, the most merciful. Hello everyone to a boring article once again. I\u2019ve found a bit of freetime, so i decided to write this article, it isn\u2019t really well done, but i hope you guys like it and learn much !Kernel Exploitation ?&hellip;", "Have you ever used the search bar? There are multiple articles on Stack Overflows / Buffer Overflows. Smashing the stack is the most covered exploitation topic.", "Let\u2019s step up the game. ###Description Note down your dreams in your diary. Who knows, dreams come true and you might get a shell! ###Rules ASLR on.Make sure your malloc\u2019s version is the latest. I know its mitigations so don\u2019t try to fool me.If you\u2019re getting crashes, consult this.Only a d&hellip;", "Congrats you pwning beast! First blood as always  +1 for pwning it (slightly) differently than I did", "Congrats you pwning beast! First blood as always  +1 for pwning it (slightly) differently than I did", "Congrats you pwning beast! First blood as always  +1 for pwning it (slightly) differently than I did", "[spoiler][image] [/spoiler] Got it!", "Let\u2019s step up the game. ###Description Note down your dreams in your diary. Who knows, dreams come true and you might get a shell! ###Rules ASLR on.Make sure your malloc\u2019s version is the latest. I know its mitigations so don\u2019t try to fool me.If you\u2019re getting crashes, consult this.Only a d&hellip;", "I\u2019ll check it soon!", "Let\u2019s step up the game. ###Description Note down your dreams in your diary. Who knows, dreams come true and you might get a shell! ###Rules ASLR on.Make sure your malloc\u2019s version is the latest. I know its mitigations so don\u2019t try to fool me.If you\u2019re getting crashes, consult this.Only a d&hellip;", "Tags: binarychallengepwningexploitationlinux", "@Suser tasked me with helping him pwn the way to your heart. I need those intimate details.", "@Suser tasked me with helping him pwn the way to your heart. I need those intimate details.", "Clickbait title, came here looking for py\u2019s actual dream diary, all i got was a pwnable binary. 10/10 would get trolled again.", "Tags: binarychallengepwningexploitationlinux", "Let\u2019s step up the game. ###Description Note down your dreams in your diary. Who knows, dreams come true and you might get a shell! ###Rules ASLR on.Make sure your malloc\u2019s version is the latest. I know its mitigations so don\u2019t try to fool me.If you\u2019re getting crashes, consult this.Only a d&hellip;", "Let\u2019s step up the game. ###Description Note down your dreams in your diary. Who knows, dreams come true and you might get a shell! ###Rules ASLR on.Make sure your malloc\u2019s version is the latest. I know its mitigations so don\u2019t try to fool me.If you\u2019re getting crashes, consult this.Only a d&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Tic-Tac-Go! A Tic-Tac-Toe solver in GolangI\u2019ve seen quite a bit of community interest in learning Go but not a lot of material around it. As an exercise for myself, I started writing a Tic-Tac-Toe solver in Golang to get the hang of the language. In the following series, I will share with you thing&hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "Some weeks ago I found [this interesting article] (https://blog.gdssecurity.com/labs/2017/9/5/linux-based-inter-process-code-injection-without-ptrace2.html), about injecting code in running processes without using ptrace. The article is very interesting and I recommend you to read it, but what caugh&hellip;", "That\u2019s what you get for making a binary so user-dependent. ###Diffuclty 4/10 ###Objective Get a shell. ###Rules ASLR on. No libc this time, it\u2019s statically linked, thus its size. Full exploit + demo (i.e asciinema) are accepted as valid solutions. Just a screenshot of the shell does&hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "", "", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "awesome mate , thanks !", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "", "Thanks, I had a quick look and it looks great.", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Here", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Here", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Aye, awesome article man!", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Keep in mind they are called \u201cpwnables\u201d for a reason  malloc and free were purposely used because their internals are more known and thus kinda \u201ceasier\u201d to exploit.", "Keep in mind they are called \u201cpwnables\u201d for a reason  malloc and free were purposely used because their internals are more known and thus kinda \u201ceasier\u201d to exploit.", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you\u2019re doing great! CSAW Quals took place the past weekend and @exploit and myself teamed up for some binary exploitation session. He\u2019s actually so good that he pwned a 500 point binary! Interestingly enough, there was a heap exploitation-related pwnable which covered a concept I &hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Glad I could help! Make sure to google/youtube for more write-ups on this challenge because heap exploitation is kinda \u201chybrid\u201d. As in, the approaches can differ and maybe a different technique could be more intuitive to you compared to the one I presented.", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "There was the following menu as I described: Welcome to your TeamManager (TM)!0.- Exit1.- Add player2.- Remove player3.- Select player4.- Edit player5.- Show player6.- Show teamYour choice:When you enter the choice number, atoi is used behind the scenes to convert your input into an actua&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Glad I could help! Make sure to google/youtube for more write-ups on this challenge because heap exploitation is kinda \u201chybrid\u201d. As in, the approaches can differ and maybe a different technique could be more intuitive to you compared to the one I presented.", "This write-up is brilliant!!!. Congrats mate! My only comment is that I got a bit confused towards the end when you say that you can run system overwriting atoi&#39;s GOT entry. I had to download the code and take a look to understand why you have selected that function  . While reading the text it sou&hellip;", "There was the following menu as I described: Welcome to your TeamManager (TM)!0.- Exit1.- Add player2.- Remove player3.- Select player4.- Edit player5.- Show player6.- Show teamYour choice:When you enter the choice number, atoi is used behind the scenes to convert your input into an actua&hellip;", "I only half understand this, but I wish I could like it twice.", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Woops, I messed up the markdown format that\u2019s why  It\u2019s now fixed! All of you please do check out the resources I mentioned. I don\u2019t want to take their glory. The folks did an amazing job! Much appreciated man!", "Woops, I messed up the markdown format that\u2019s why  It\u2019s now fixed! All of you please do check out the resources I mentioned. I don\u2019t want to take their glory. The folks did an amazing job! Much appreciated man!", "The link in the following paragraph is broken: In other words, libc keeps track of the allocated chunks by storing their pointers in an array according to their sizes. In reality, each entry is a single / double-linked list which holds a pointer to a different size of chunk. Meaning, the first ent&hellip;", "Woops, I messed up the markdown format that\u2019s why  It\u2019s now fixed! All of you please do check out the resources I mentioned. I don\u2019t want to take their glory. The folks did an amazing job! Much appreciated man!", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "Sup folks! I hope you are all doing great. It\u2019s been a long time since my last CTF write-up. The main reason is because I was trying to master the beast called heap exploitation and I\u2019ve yet to learn a ton about it. To showcase one of the modern ways to pwn a heap-based vulnerable binary, I\u2019ll use a&hellip;", "&gt; PrefaceNote: As always the following is just a digest of all the things I could observe by working on printers myself or facts from stuff I read about recently. Since this thread about the HP printer promo videos caught some attention I will try to shed some light onto the field which was displa&hellip;", "0x00sec GuidelinesCore PrinciplesActions have consequences.You can learn anything from anyone.Ask good questions, not lazy ones.Everybody makes mistakes.Freedom of information is a right.ForumsWhen posting something on the forums, consider these points. Will this be helpful to users othe&hellip;", "In Part I and Part II we manage to reverse the dropper and extract the malware. We have already got the first flag from the malware sample. Now it is time to analyse the sample and get the rest of the flags. The sample we are going to analyse has a moderate complexity and a manual approach as we ha&hellip;", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "For the LuLZ  This is a 17 LoC, multi-architecture virus (works on x86 -32/64bits-, ARM, MIPS, PowerPC,\u2026). It increases the infected binary in less than 350 bytes!!!. Feel the power of Bash! Best language ever for virus development!! #!/bin/bash#AMiINFECTEDfor f in *; do        if [ ! -z `fi&hellip;", "Sure, no problems with that  will try to do more than copying and pasting from my website, should be cool", "Cool. Your post would have much more value if you could explain the whys and hows behind your code. Alhough @0x00pf has already made a write-up on ELF infectors, don\u2019t hesitate on giving us your own view point. Otherwise your post is nothing more than self-advertisement and fortunately or unfortuna&hellip;", "Cool. Your post would have much more value if you could explain the whys and hows behind your code. Alhough @0x00pf has already made a write-up on ELF infectors, don\u2019t hesitate on giving us your own view point. Otherwise your post is nothing more than self-advertisement and fortunately or unfortuna&hellip;", "Cool. Your post would have much more value if you could explain the whys and hows behind your code. Alhough @0x00pf has already made a write-up on ELF infectors, don\u2019t hesitate on giving us your own view point. Otherwise your post is nothing more than self-advertisement and fortunately or unfortuna&hellip;", "No specific reason, I like writing prependers in languages where they don\u2019t exist and I find interesting. Nim got my attention", "Why Nim if I may ask?", "Greetings, 0x00sec! After much discussion, the 0x00sec mods and admins have put together a new program, a Bounty Program. How it WorksThis very post will be a Wiki. Members will be able to add any topic they\u2019d like to see written about on this site. Other members will see the wiki, scroll through,&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "Hey fellas, Small tribute for Mr. Robot fans  Thanks me later  http://www8.hp.com/uk/en/solutions/security/thewolf.html?jumpid=va_346a8z9p1w Best, Nitrax", "That\u2019s 100% not a mindset of a hardware hacker or any hacker for that matter.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "To the people against @Red_Joker\u2019s post: I know for a fact that @Red_Joker thought of your \u201cdiscouraging\u201d feedback (which you have all the rights to give ofc) and yet still posted it. That\u2019s pretty brave considering the fact that this forum has really elite people around. Some people start off on t&hellip;", "To the people against @Red_Joker\u2019s post: I know for a fact that @Red_Joker thought of your \u201cdiscouraging\u201d feedback (which you have all the rights to give ofc) and yet still posted it. That\u2019s pretty brave considering the fact that this forum has really elite people around. Some people start off on t&hellip;", "To the people against @Red_Joker\u2019s post: I know for a fact that @Red_Joker thought of your \u201cdiscouraging\u201d feedback (which you have all the rights to give ofc) and yet still posted it. That\u2019s pretty brave considering the fact that this forum has really elite people around. Some people start off on t&hellip;", "To the people against @Red_Joker\u2019s post: I know for a fact that @Red_Joker thought of your \u201cdiscouraging\u201d feedback (which you have all the rights to give ofc) and yet still posted it. That\u2019s pretty brave considering the fact that this forum has really elite people around. Some people start off on t&hellip;", "To the people against @Red_Joker\u2019s post: I know for a fact that @Red_Joker thought of your \u201cdiscouraging\u201d feedback (which you have all the rights to give ofc) and yet still posted it. That\u2019s pretty brave considering the fact that this forum has really elite people around. Some people start off on t&hellip;", "To the people against @Red_Joker\u2019s post: I know for a fact that @Red_Joker thought of your \u201cdiscouraging\u201d feedback (which you have all the rights to give ofc) and yet still posted it. That\u2019s pretty brave considering the fact that this forum has really elite people around. Some people start off on t&hellip;", "First of all I kinda \u201cdisagree\u201d with all of you making a debate of principles out of this under @Red_Joker\u2019s post. This is an important thing to note. If you feel superior and don\u2019t learn anything by briefly reading over an article then skip it.If you learn something or the topic was extra ordi&hellip;", "To the people against @Red_Joker\u2019s post: I know for a fact that @Red_Joker thought of your \u201cdiscouraging\u201d feedback (which you have all the rights to give ofc) and yet still posted it. That\u2019s pretty brave considering the fact that this forum has really elite people around. Some people start off on t&hellip;", "PrefaceYo! It\u2019s been a long time since I last posted anything here. Life kept me more than busy, but now I\u2019ve got a little more time on my hands. I decided to do a write up on the following binary, because it taught me some new things, compared to the easy reversemes I did before. Furthermore &hellip;", "From top to bottom (my opinion): Computer ArchitectureCMemory OrganizationAssemblyReverse EngineeringBinary Exploitation", "PrefaceYo! It\u2019s been a long time since I last posted anything here. Life kept me more than busy, but now I\u2019ve got a little more time on my hands. I decided to do a write up on the following binary, because it taught me some new things, compared to the easy reversemes I did before. Furthermore &hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "Thank you for the feedback! I can relate to you since it took me a while to grasp such a technical concept but after a while it all makes sense and I\u2019m glad it did for you as well. As for your suggestion, I see your point. But, there\u2019s a reason I did not analyze at that part the sentence you sugges&hellip;", "That\u2019s what you get for making a binary so user-dependent. ###Diffuclty 4/10 ###Objective Get a shell. ###Rules ASLR on. No libc this time, it\u2019s statically linked, thus its size. Full exploit + demo (i.e asciinema) are accepted as valid solutions. Just a screenshot of the shell does&hellip;", "Hi ! I finally made the challenge to try this myself. I wanted to try the pivot p = process(&quot;./jumpy&quot;)p.recvuntil(&quot;:&quot;)p.sendline(&quot;/bin/bash&quot;)def read(index):    p.recvuntil(&quot;&gt;&quot;)    p.sendline(&quot;1&quot;)    p.recvuntil(&quot;:&quot;)    p.sendline(str(index))    p.recvuntil(&quot;= &quot;)    return int(p.recvli&hellip;", "I am particularly excited for the special guests. I think this show has the full potential to be very popular. It could grow even quicker than the forum itself!", "I am particularly excited for the special guests. I think this show has the full potential to be very popular. It could grow even quicker than the forum itself!", "Massive thank you to the aforementioned hosts (yes, even @Suser) for taking the time to create these podcasts. They always strive to keep them entertaining, educational, fun and professional. Keep it up folks!", "For a few weeks now we have been watching the production of https://wacksec.com get better and better. We have seen multiple community members work hard into making this show great as well as informing the community and ordinary people of news and topics in infosec. Over the past few weeks, we have&hellip;", "Massive thank you to the aforementioned hosts (yes, even @Suser) for taking the time to create these podcasts. They always strive to keep them entertaining, educational, fun and professional. Keep it up folks!", "Dude! Second time where I\u2019m about to write up a paper on a certain topic and you wrote it sooner xD Either way, great explanation as always, ptrace is really powerful. Maybe we can collaborate on a similar topic in the future since our ideas seem to be alike.", "Good One I really liked this challenge  and this the way i solved it ! from libformatstr import *import socketfrom pwn import *import telnetlibc = socket.socket(socket.AF_INET,socket.SOCK_STREAM)c.connect((&quot;127.0.0.1&quot;,1234))def recvuntil(sock,delim) :   data = &quot;&quot;    while not data.ends&hellip;", "That\u2019s what you get for making a binary so user-dependent. ###Diffuclty 4/10 ###Objective Get a shell. ###Rules ASLR on. No libc this time, it\u2019s statically linked, thus its size. Full exploit + demo (i.e asciinema) are accepted as valid solutions. Just a screenshot of the shell does&hellip;", "Here\u2019s some feedback: ELF isn\u2019t a format only for executable files. There are also shared libraries and object files. Quoting every section of the book regarding ELF shows me that either you don\u2019t understand the material in depth, or you didn\u2019t bother trying to simplify the terms. Some drawing&hellip;", "okay Thanks dude   (y)", "I\u2019ve no idea why the link stopped working. Sorry for the inconvenience, the link is now updated.", "I\u2019ve no idea why the link stopped working. Sorry for the inconvenience, the link is now updated.", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "Done  , Good challenge      from pwn import *    r = process(&#39;./echoflow&#39;)    raw_input(&quot;++&quot;)    stackgot = 0x0804a01c    main = 0x80485dd    readgot = 0x0804a010    sysoff =0x3ab30    libc_start = 0x18180    binshoff = 0x15cdc8    pld = p32(stackgot)+&quot;%23$s&quot; + &quot; %39$X&quot;    r.&hellip;", "Hi @neolex,  so: The purpose of the challenge was to teach you the concept of stack pivoting. Unfortunately no one solved it the intended way, so they practically learnt nothing new. As for my PoC now (which was the intended way): The binary has an out-of-bound read (both positive and negative in&hellip;", "@neolex Regarding my exploit, here\u2019s an explanation of the whole chain! chain = [pop_pop_ret, 0, 0, mov_eax_edx, pop_edx, 0x426, add_eax_edx, pop_pop_ret, 0, 0, xchg_eax_edx, mov_ebx_edx, pop_eax, 0, mov_ecx_eax, pop_eax, 11, pop_edx, 0, int_0x80]So, i&hellip;", "Hi @neolex,  so: The purpose of the challenge was to teach you the concept of stack pivoting. Unfortunately no one solved it the intended way, so they practically learnt nothing new. As for my PoC now (which was the intended way): The binary has an out-of-bound read (both positive and negative in&hellip;", "Hi @neolex,  so: The purpose of the challenge was to teach you the concept of stack pivoting. Unfortunately no one solved it the intended way, so they practically learnt nothing new. As for my PoC now (which was the intended way): The binary has an out-of-bound read (both positive and negative in&hellip;", "I really tried this challenge but I didn\u2019t manage to send the string to execve to spawn a shell  And I don\u2019t really understand your POCs \u2026  In @exploit\u2019s POC  i don\u2019t understand how the /bin/dash is passed to execve and I don\u2019t know what is the 0x426 \u2026  In @_py\u2019s POC  The pivot in -9 have for p&hellip;", "Cool post @oaktree! Disclaimer: I have respect towards all kinds of programmers. I don\u2019t consider myself anywhere close to a professional programmer. I will just give my personal opinion through my interactions with other programmers and my personal experience since I\u2019ve played around with both typ&hellip;", "I was expecting a much simpler solution from you  I\u2019m surprised you didn\u2019t use the add esp, 0x2c gadget to pivot to the array buffer you controlled. Here\u2019s my(intended) PoC: from pwn import *def enter_name(name):p.recvuntil(&#39;name: &#39;)p.sendline(name)return def store(idx, val):p.recv&hellip;", "I was expecting a much simpler solution from you  I\u2019m surprised you didn\u2019t use the add esp, 0x2c gadget to pivot to the array buffer you controlled. Here\u2019s my(intended) PoC: from pwn import *def enter_name(name):p.recvuntil(&#39;name: &#39;)p.sendline(name)return def store(idx, val):p.recv&hellip;", "[spoiler]- Oh my god, i didn\u2019t use the outofbound read ! Sorry, that was a big mistake, it was the problem ; -;\u2026I builded the whole chain to find and calculate name address :\u2019([/spoiler]That was a fail\u2026 xddd", "[spoiler]- Oh my god, i didn\u2019t use the outofbound read ! Sorry, that was a big mistake, it was the problem ; -;\u2026I builded the whole chain to find and calculate name address :\u2019([/spoiler]That was a fail\u2026 xddd", "I was expecting a much simpler solution from you  I\u2019m surprised you didn\u2019t use the add esp, 0x2c gadget to pivot to the array buffer you controlled. Here\u2019s my(intended) PoC: from pwn import *def enter_name(name):p.recvuntil(&#39;name: &#39;)p.sendline(name)return def store(idx, val):p.recv&hellip;", "I was expecting a much simpler solution from you  I\u2019m surprised you didn\u2019t use the add esp, 0x2c gadget to pivot to the array buffer you controlled. Here\u2019s my(intended) PoC: from pwn import *def enter_name(name):p.recvuntil(&#39;name: &#39;)p.sendline(name)return def store(idx, val):p.recv&hellip;", "From top to bottom (my opinion): Computer ArchitectureCMemory OrganizationAssemblyReverse EngineeringBinary Exploitation", "The way i did it is more complicated but guaranteed\u2026 I also did it in another classic way, which is passing the register values to a pointer and incrementing\u2026 But i prefered this one, cause it\u2019s more creative I\u2019ll share it then: #!/usr/bin/pythonfrom pwn import *c = process(&quot;./jumpy&quot;)sa&hellip;", "From top to bottom (my opinion): Computer ArchitectureCMemory OrganizationAssemblyReverse EngineeringBinary Exploitation", "That\u2019s what you get for making a binary so user-dependent. ###Diffuclty 4/10 ###Objective Get a shell. ###Rules ASLR on. No libc this time, it\u2019s statically linked, thus its size. Full exploit + demo (i.e asciinema) are accepted as valid solutions. Just a screenshot of the shell does&hellip;", "great challenge again. i managed to get shell but somehow my solution aren\u2019t always reliable. sometimes it will SIGSEGV. perhaps someone could give me some pointers  anyway here\u2019s my poc EDIT: the poc has been updated to a more reliable version. the culprit of the segmentation fault is because the&hellip;", "The exploit is a bit rusty/lucky, try making it more hybrid/reliable. This pwnable teaches a new concept. Here are some pointers: You don\u2019t need a shellcode. It could be done way simpler. You found the trick, being index -9. Use that to call execve. Google \u201cstack pivoting\u201d", "That\u2019s what you get for making a binary so user-dependent. ###Diffuclty 4/10 ###Objective Get a shell. ###Rules ASLR on. No libc this time, it\u2019s statically linked, thus its size. Full exploit + demo (i.e asciinema) are accepted as valid solutions. Just a screenshot of the shell does&hellip;", "That\u2019s what you get for making a binary so user-dependent. ###Diffuclty 4/10 ###Objective Get a shell. ###Rules ASLR on. No libc this time, it\u2019s statically linked, thus its size. Full exploit + demo (i.e asciinema) are accepted as valid solutions. Just a screenshot of the shell does&hellip;", "great! since i\u2019m fairly new in this, i learnt a lot from your pwnables", "There you go! You nailed it folks!  Here\u2019s my PoC for the sake of exploit variety: from pwn import *fgets_got = 0x804a018counter   = 0x804a03cdef echo(payload):p.recvuntil(&#39;back!\\n&#39;)p.sendline(payload)return def ovflow(payload):p.recvuntil(&#39;can!\\n&#39;)p.sendline(payload)retur&hellip;", "There you go! You nailed it folks!  Here\u2019s my PoC for the sake of exploit variety: from pwn import *fgets_got = 0x804a018counter   = 0x804a03cdef echo(payload):p.recvuntil(&#39;back!\\n&#39;)p.sendline(payload)return def ovflow(payload):p.recvuntil(&#39;can!\\n&#39;)p.sendline(payload)retur&hellip;", "Yoooo, I just came back home!  About the binary, it was better than the last one, I followed the rules and I ended up solving it the intended way ! Sorry for the late reply, i\u2019ll share my POC: #!/usr/bin/pythonfrom pwn import *# LOCAL DIFFsh_diff = 0x15cc28sys_diff = 0x3a840exit_diff = 0x8&hellip;", "i thought about leaking canary using the intended method, but since i can use fsb why bother  anyway here\u2019s another poc from pwn import *context(arch=&#39;i386&#39;, os=&#39;linux&#39;)# use libc-database to find offset# ubuntu-xenial-i386-libc6 (id libc6_2.23-0ubuntu7_i386)offset_printf = 0x00049670offset&hellip;", "There you go! You nailed it folks!  Here\u2019s my PoC for the sake of exploit variety: from pwn import *fgets_got = 0x804a018counter   = 0x804a03cdef echo(payload):p.recvuntil(&#39;back!\\n&#39;)p.sendline(payload)return def ovflow(payload):p.recvuntil(&#39;can!\\n&#39;)p.sendline(payload)retur&hellip;", "Damn, I didn\u2019t think of banning capital \u2018x\u2019  The intended way to leak the canary was via the read() function. Try leaking it via that, it will require a bit of more creativity. Congrats either way!", "NOTE: Don\u2019t use the fsb to leak the canary (though it\u2019s fair game). Be more creative!", "Damn, I didn\u2019t think of banning capital \u2018x\u2019  The intended way to leak the canary was via the read() function. Try leaking it via that, it will require a bit of more creativity. Congrats either way!", "@exploit Let the rest feel the taste of first blood for once  Just kidding, great job man!  Any feedback? Was it a bit tougher/trickier than the previous one? Feel free to share your PoC exploit inside the spoiler tags so those who were stuck can benefit from it. I\u2019ll post mine in a couple of days&hellip;", "NOTE: Don\u2019t use the fsb to leak the canary (though it\u2019s fair game). Be more creative!", "thanks @_py for the challenge. here\u2019s my poc from pwn import *context(arch=&#39;i386&#39;, os=&#39;linux&#39;)# use libc-database to find offset# ubuntu-xenial-i386-libc6 (id libc6_2.23-0ubuntu7_i386)offset_printf = 0x00049670offset_system = 0x0003ada0offset_str_bin_sh = 0x15b9ab# open the processr = pr&hellip;", "Damn, I didn\u2019t think of banning capital \u2018x\u2019  The intended way to leak the canary was via the read() function. Try leaking it via that, it will require a bit of more creativity. Congrats either way!", "thanks @_py for the challenge. here\u2019s my poc from pwn import *context(arch=&#39;i386&#39;, os=&#39;linux&#39;)# use libc-database to find offset# ubuntu-xenial-i386-libc6 (id libc6_2.23-0ubuntu7_i386)offset_printf = 0x00049670offset_system = 0x0003ada0offset_str_bin_sh = 0x15b9ab# open the processr = pr&hellip;", "Folks, the \u201cdebate\u201d was focused (or at least that\u2019s how it started) on the depth that is covered by the aforementioned 2 types in terms of CS fundamentals, not how useful they are. Obviously their use cases vary and a good programmer knows when to use what. Comparing them with each other just makes &hellip;", "Cool post @oaktree! Disclaimer: I have respect towards all kinds of programmers. I don\u2019t consider myself anywhere close to a professional programmer. I will just give my personal opinion through my interactions with other programmers and my personal experience since I\u2019ve played around with both typ&hellip;", "@_py Yeah I get that, just usually makes people a lot calmer around files. Especially on security / hacking forums.", "@exploit Let the rest feel the taste of first blood for once  Just kidding, great job man!  Any feedback? Was it a bit tougher/trickier than the previous one? Feel free to share your PoC exploit inside the spoiler tags so those who were stuck can benefit from it. I\u2019ll post mine in a couple of days&hellip;", "Oh yeah, i\u2019ll sure take a small look at the binary today !", "Done, good challenge  !", "Cool post @oaktree! Disclaimer: I have respect towards all kinds of programmers. I don\u2019t consider myself anywhere close to a professional programmer. I will just give my personal opinion through my interactions with other programmers and my personal experience since I\u2019ve played around with both typ&hellip;", "Hi. ###Difficulty 3/10 ###Objective Get a shell. ###Rules ASLR on. Since no libc is provided, all you have to do is pwn the binary locally. GOT overwrite is off the map. Using it for code redirection will lead to disqualification. Full exploit + demo (i.e asciinema) are accepted &hellip;", "Hi. ###Difficulty 3/10 ###Objective Get a shell. ###Rules ASLR on. Since no libc is provided, all you have to do is pwn the binary locally. GOT overwrite is off the map. Using it for code redirection will lead to disqualification. Full exploit + demo (i.e asciinema) are accepted &hellip;", "Hi. ###Difficulty 3/10 ###Objective Get a shell. ###Rules ASLR on. Since no libc is provided, all you have to do is pwn the binary locally. GOT overwrite is off the map. Using it for code redirection will lead to disqualification. Full exploit + demo (i.e asciinema) are accepted &hellip;", "I should say that the point of this post was not to say that scripting/interpreted languages are \u201cworse\u201d than compiled/static languages. Rather, I listed a few reasons to add a compiled language to one\u2019s coding repertoire. Absolutely. I never said that you can only learn CS in C or C++\u2026 It\u2019s more&hellip;", "Folks, the \u201cdebate\u201d was focused (or at least that\u2019s how it started) on the depth that is covered by the aforementioned 2 types in terms of CS fundamentals, not how useful they are. Obviously their use cases vary and a good programmer knows when to use what. Comparing them with each other just makes &hellip;", "Folks, the \u201cdebate\u201d was focused (or at least that\u2019s how it started) on the depth that is covered by the aforementioned 2 types in terms of CS fundamentals, not how useful they are. Obviously their use cases vary and a good programmer knows when to use what. Comparing them with each other just makes &hellip;", "I should say that the point of this post was not to say that scripting/interpreted languages are \u201cworse\u201d than compiled/static languages. Rather, I listed a few reasons to add a compiled language to one\u2019s coding repertoire. Absolutely. I never said that you can only learn CS in C or C++\u2026 It\u2019s more&hellip;", "I\u2019ve been programming for about 10 years now and have had a great deal of experience with both compiled languages and scripted languages. While I agree with some of @_py &#39;s points that you SHOULD have a deeper understanding of your scripting language if you truly want to call yourself a programmer, &hellip;", "@Retr1Static It\u2019s called debate, not a battle and it\u2019s really healthy to do that once in a while. Lastly, please don\u2019t remind me of the biggest mistake I\u2019ve ever made in my life. @pry0cc: My first languge was C. Anyway, I agree with your point of view when it comes to scripting and how easy it is &hellip;", "Cool post @oaktree! Disclaimer: I have respect towards all kinds of programmers. I don\u2019t consider myself anywhere close to a professional programmer. I will just give my personal opinion through my interactions with other programmers and my personal experience since I\u2019ve played around with both typ&hellip;", "Ok, so I\u2019ve coded a very basic reverse shell that I\u2019ve now decided to allow any member  to access and view the code, but before I post the code I gotta thank @0x00pf for his awesome tutorial and @Joe_Schmoe for  STELF which inspired me to code this shell. I\u2019m trying to add functionality to my shell,&hellip;", "@Retr1Static It\u2019s called debate, not a battle and it\u2019s really healthy to do that once in a while. Lastly, please don\u2019t remind me of the biggest mistake I\u2019ve ever made in my life. @pry0cc: My first languge was C. Anyway, I agree with your point of view when it comes to scripting and how easy it is &hellip;", "Actually, some people just want to get shit done and for that scripting languages are excellent. Wether it is a good thing to do that or not, I\u2019ll leave up to you to decide (but I assume it\u2019s a horrible mindset). I am not allowed to speak about programming mindsets yet, for I am not proficient in b&hellip;", "Actually, some people just want to get shit done and for that scripting languages are excellent. Wether it is a good thing to do that or not, I\u2019ll leave up to you to decide (but I assume it\u2019s a horrible mindset). I am not allowed to speak about programming mindsets yet, for I am not proficient in b&hellip;", "@Retr1Static It\u2019s called debate, not a battle and it\u2019s really healthy to do that once in a while. Lastly, please don\u2019t remind me of the biggest mistake I\u2019ve ever made in my life. @pry0cc: My first languge was C. Anyway, I agree with your point of view when it comes to scripting and how easy it is &hellip;", "It\u2019s going to be quick cause we already covered this subject thousands of times however, I myself started programming in C and it gave me all I need to know about programming (paradigm, logic, etc) Since, I never struggled on any other languages thanks to those knowledge acquired during my C learni&hellip;", "@Retr1Static It\u2019s called debate, not a battle and it\u2019s really healthy to do that once in a while. Lastly, please don\u2019t remind me of the biggest mistake I\u2019ve ever made in my life. @pry0cc: My first languge was C. Anyway, I agree with your point of view when it comes to scripting and how easy it is &hellip;", "First of all, thanks @oaktree for bringing such debate ! @_py Well, I share the exact same opinion except that I don\u2019t consider a scripter as a programmer. From my point of view, scripting and programming are truly different and you succesfuly pointed out the details which characterize the differen&hellip;", "When looking back how I got \u201ctaught\u201d how to program it was something like this: High school: weird Lego bot -&gt; Pascal -&gt; Java Uni, Starting right from first semester: C,Java,Python Back in high school I like the minimalism of Pascal even when you couldn\u2019t or at least we weren\u2019t doing much with it&hellip;", "He has left the dark side and migrated to the light side. He has seen the light; forever enlightened to build his houses with grains of sand, because he\u2019s a power hungry, mad CS scientist. Just kidding @_py, however, scripting languages do have their place.  I wrote a twitter bot for the 0x00secOff&hellip;", "First of all, thanks @oaktree for bringing such debate ! @_py Well, I share the exact same opinion except that I don\u2019t consider a scripter as a programmer. From my point of view, scripting and programming are truly different and you succesfuly pointed out the details which characterize the differen&hellip;", "Cool post @oaktree! Disclaimer: I have respect towards all kinds of programmers. I don\u2019t consider myself anywhere close to a professional programmer. I will just give my personal opinion through my interactions with other programmers and my personal experience since I\u2019ve played around with both typ&hellip;", "Cool post @oaktree! Disclaimer: I have respect towards all kinds of programmers. I don\u2019t consider myself anywhere close to a professional programmer. I will just give my personal opinion through my interactions with other programmers and my personal experience since I\u2019ve played around with both typ&hellip;", "Why is there a constant battle between programming and scripting languages? Both of them have their advantages and disadvantages. Why battle between the two, when you can harness the power of both? @_py  if you are a C/ASM nazi, then I wonder why your name is \u201cpy\u201d?", "Cool post @oaktree! Disclaimer: I have respect towards all kinds of programmers. I don\u2019t consider myself anywhere close to a professional programmer. I will just give my personal opinion through my interactions with other programmers and my personal experience since I\u2019ve played around with both typ&hellip;", "@Suser thinks I have a good perspective on transitioning from scripting (in my case, Ruby) to programming (in C++). This post deals particularly with Ruby and C++, but some facets are broadly applicable. WhyBefore I list some differences between scripting and programming, I will specify a few rea&hellip;", "Ok, so I\u2019ve coded a very basic reverse shell that I\u2019ve now decided to allow any member  to access and view the code, but before I post the code I gotta thank @0x00pf for his awesome tutorial and @Joe_Schmoe for  STELF which inspired me to code this shell. I\u2019m trying to add functionality to my shell,&hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "", "", "Hi fellas, Let me introduce you my last tool, ORFinder ORFinder claims to be able to find any smtp services, exposed over the internet, vulnerable to open relay attack. Such attack relies on the fact that the sender / receiver addresses are not checked by the underlying mail server, allowing to p&hellip;", "No, but I believe that people from the team we train (and get beers) together made it.", "I referred to the European Finals of the ECSC, which take place in Malaga this year. But your answer to @_py seems to have answered my question", "The ECSC finals will take place in Malaga.", "Yeah, been there but didn\u2019t have the time to do a thing\u2026 I &#39;m a working mule\u2026", "@operatorequals Did you make it to Malaga?", "Yeah we\u2019ve talked with @operatorequals on IRC. My field is more binary-related as you probably know so I\u2019m pretty sure I don\u2019t stand much of a chance. I\u2019ve also noticed @operatorequals at the ECSC quals\u2019 scoreboard this year for our country\u2019s national team. Check out the alias \u201c0sec\u201d @operatorequal&hellip;", "Go and grab your beer, @_py!", "Yeah we\u2019ve talked with @operatorequals on IRC. My field is more binary-related as you probably know so I\u2019m pretty sure I don\u2019t stand much of a chance. I\u2019ve also noticed @operatorequals at the ECSC quals\u2019 scoreboard this year for our country\u2019s national team. Check out the alias \u201c0sec\u201d @operatorequal&hellip;", "I think we talked before with @_py. If I remember correctly he studies really close to my home (like 10 bus stops). He gotta solve the challenge first though, or his beer is on him\u2026", "Go and grab your beer, @_py!", "Running Nmap from Chat with LegobotChatops for hackers! For those of you who saw my shenanigans in IRC earlier, this is the promised post on what I was doing. For those who missed it or don\u2019t hang out in IRC, shame! This is an announcement of a new package I released today, description of how to u&hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "@FFY00 is your guy for SDR, though he hasn\u2019t been active lately.", "Thanks @_py , there\u2019s so much going on right now, exams and such, that I haven\u2019t had the time to be active. @afiskon , the LimeSDR documentation is not fancy at all because the team hadn\u2019t had much time to work on it, but it will get you started and working properly, no worries. If you need more he&hellip;", "Good writing. Also make note of @_py &#39;s comments\u2026 I look forward to the second instalment. I believe you\u2019re missing a free in the PT_INTERP case.", "Here\u2019s some feedback: ELF isn\u2019t a format only for executable files. There are also shared libraries and object files. Quoting every section of the book regarding ELF shows me that either you don\u2019t understand the material in depth, or you didn\u2019t bother trying to simplify the terms. Some drawing&hellip;", "Thanks a lot for the feedback. I will take it under consideration.", "Here\u2019s some feedback: ELF isn\u2019t a format only for executable files. There are also shared libraries and object files. Quoting every section of the book regarding ELF shows me that either you don\u2019t understand the material in depth, or you didn\u2019t bother trying to simplify the terms. Some drawing&hellip;", "Here\u2019s some feedback: ELF isn\u2019t a format only for executable files. There are also shared libraries and object files. Quoting every section of the book regarding ELF shows me that either you don\u2019t understand the material in depth, or you didn\u2019t bother trying to simplify the terms. Some drawing&hellip;", "@FFY00 is your guy for SDR, though he hasn\u2019t been active lately.", "@FFY00 is your guy for SDR, though he hasn\u2019t been active lately.", "This has nothing to do with crackmes. This field is called exploit development. Though you need reverse engineering knowledge, exploit dev steps it up way more because you have to find bugs by reading assembly. That being said, exploit dev is a mindset, but you can learn the basic-beginner metholog&hellip;", "This has nothing to do with crackmes. This field is called exploit development. Though you need reverse engineering knowledge, exploit dev steps it up way more because you have to find bugs by reading assembly. That being said, exploit dev is a mindset, but you can learn the basic-beginner metholog&hellip;", "This has nothing to do with crackmes. This field is called exploit development. Though you need reverse engineering knowledge, exploit dev steps it up way more because you have to find bugs by reading assembly. That being said, exploit dev is a mindset, but you can learn the basic-beginner metholog&hellip;", "@_py are there any tutorials to learn it? I\u2019m really interested in such problems. And also crack me problems\u2026 Does it come under exploit development?", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "Hello folks! I hope you\u2019re doing great! This is my first time I ever create a reversing engineering challenge so I\u2019m hoping there won\u2019t be any issue such as unintended solutions/bugs. ###Difficulty A big part of Reverse Engineering has to do with observation. That being said, depending on how sha&hellip;", "Reverse Engineering and Crackme challengesThis topic is an aggregation of Crackme and reverse engineering challenges developed for 0x00sec. Please discuss the challenges in the thread they were originally posted or on IRC in #challenges This curation is based entirely on my own whim and not a comp&hellip;", "@neolex you\u2019re on fire  I hope you now understood how much more convenient that technique is.", "@mkhdznfq Congrats!  Looks like you do leak bruh", "wow thanks @_py for the note. never knew i could that", "wow thanks @_py for the note. never knew i could that", "Nicely done @neolex!  A small note to both @neolex and @mkhdznfq: I noticed you found a libc address at the 2nd stack offset and used that in order to calculate the libc\u2019s base address. You got lucky. As in, sometimes you may not find a libc address not even at the 200th offset, let alone be able &hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "@neolex you\u2019re on fire  I hope you now understood how much more convenient that technique is.", "Exactly. If you try to leak exit\u2019s address you\u2019ll notice its PLT stub code address. As for printf, it\u2019s wise not to leak its address since it\u2019s placed in weird areas in libc and sometimes you\u2019ll end up with a misaligned libc base, resulting to miscalculations of system\u2019s address.", "Exactly. If you try to leak exit\u2019s address you\u2019ll notice its PLT stub code address. As for printf, it\u2019s wise not to leak its address since it\u2019s placed in weird areas in libc and sometimes you\u2019ll end up with a misaligned libc base, resulting to miscalculations of system\u2019s address.", "@neolex you\u2019re on fire  I hope you now understood how much more convenient that technique is.", "Nicely done @neolex!  A small note to both @neolex and @mkhdznfq: I noticed you found a libc address at the 2nd stack offset and used that in order to calculate the libc\u2019s base address. You got lucky. As in, sometimes you may not find a libc address not even at the 200th offset, let alone be able &hellip;", "Exactly. If you try to leak exit\u2019s address you\u2019ll notice its PLT stub code address. As for printf, it\u2019s wise not to leak its address since it\u2019s placed in weird areas in libc and sometimes you\u2019ll end up with a misaligned libc base, resulting to miscalculations of system\u2019s address.", "Yes @_py thanks, just to be sure : it does\u2019nt work with exit\u2019s or printf\u2019s got address because exit is not called before i try to leak it ? So the address is not resolved ?", "@neolex you\u2019re on fire  I hope you now understood how much more convenient that technique is.", "Thank you for the note @_py , I tried your way to leak and successed, here is my POC : [spoiler][code]#!/usr/bin/env python2 from pwn import * EXIT_GOT = 0x0804980c PUTS_GOT = 0x08049808 PRINTF_GOT = 0x080497fc ENTRY_POINT = 0x8400 PUTS_OFFSET = 0x00062710 SYSTEM_OFFSET = 0x0003c060 _IO_2_1&hellip;", "Thank you for the note @_py , I tried your way to leak and successed, here is my POC : [spoiler][code]#!/usr/bin/env python2 from pwn import * EXIT_GOT = 0x0804980c PUTS_GOT = 0x08049808 PRINTF_GOT = 0x080497fc ENTRY_POINT = 0x8400 PUTS_OFFSET = 0x00062710 SYSTEM_OFFSET = 0x0003c060 _IO_2_1&hellip;", "Thank you for the challenge @_py ! I need to practice a lot with pwn challenge i\u2019m pretty noob at it , but I made it  [spoiler][code]#!/usr/bin/env python2 from pwn import * EXIT_GOT = 0x0804980c PRINTF_GOT = 0x080497fc ENTRY_POINT = 0x8400 SYSTEM_OFFSET = 0x0003c060 _IO_2_1_stdin_offset = 0&hellip;", "Nicely done @neolex!  A small note to both @neolex and @mkhdznfq: I noticed you found a libc address at the 2nd stack offset and used that in order to calculate the libc\u2019s base address. You got lucky. As in, sometimes you may not find a libc address not even at the 200th offset, let alone be able &hellip;", "Thank you for the challenge @_py ! I need to practice a lot with pwn challenge i\u2019m pretty noob at it , but I made it  [spoiler][code]#!/usr/bin/env python2 from pwn import * EXIT_GOT = 0x0804980c PRINTF_GOT = 0x080497fc ENTRY_POINT = 0x8400 SYSTEM_OFFSET = 0x0003c060 _IO_2_1_stdin_offset = 0&hellip;", "@mkhdznfq Congrats!  Looks like you do leak bruh", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "@mkhdznfq Congrats!  Looks like you do leak bruh", "@mkhdznfq Congrats!  Looks like you do leak bruh", "thanks for the challenge  here\u2019s my poc from pwn import *context(arch=&#39;i386&#39;, os=&#39;linux&#39;)# use libc-database to find offset# ubuntu-xenial-i386-libc6 (id libc6_2.23-0ubuntu7_i386)offset__IO_2_1_stdin_ = 0x001b25a0offset_system = 0x0003ada0diff = offset__IO_2_1_stdin_ - offset_system# open&hellip;", "@mkhdznfq Congrats!  Looks like you do leak bruh", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "Suh peeps! Another pwnable challenge! ###Difficulty Easy, but could be debatable. ###Objective Get a shell. ###Rules ASLR should be turned on!Since no libc is provided, all you have to do is pwn the binary locally.Full PoC is accepted as a solution. Just a screenshot of the shell doesn\u2019t&hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Nice write-up @exploit! For those who don\u2019t quite get the theory behind that technique, I\u2019d highly recommend reading the reference links. TL;DR - When a signal occurs, the kernel \u201cpauses\u201d the process\u2019s execution in order to jump to a signal handler routine. In order to safely resume the execution &hellip;", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "Hey, pwntools developer here! Here\u2019s some additional pro tips you may want to integrate into your blog payload = str(foo)payload += pack(bar)payload += bazCan be collapsed down into a single statement with the flat() function. payload = flat(foo, bar, baz)Integers are passed to pack, string&hellip;", "Nice write-up @exploit! For those who don\u2019t quite get the theory behind that technique, I\u2019d highly recommend reading the reference links. TL;DR - When a signal occurs, the kernel \u201cpauses\u201d the process\u2019s execution in order to jump to a signal handler routine. In order to safely resume the execution &hellip;", "Well done, and no problem *_*!  [image]", "Done. Thanks for the challenge mate! @exploit requested not to release the exploit code yet so that more folks can give it a shot. You can find the PoC here.", "Done. Thanks for the challenge mate! @exploit requested not to release the exploit code yet so that more folks can give it a shot. You can find the PoC here.", "That\u2019s because exploit dev is an art", "Nice write-up @exploit! For those who don\u2019t quite get the theory behind that technique, I\u2019d highly recommend reading the reference links. TL;DR - When a signal occurs, the kernel \u201cpauses\u201d the process\u2019s execution in order to jump to a signal handler routine. In order to safely resume the execution &hellip;", "Nice write-up @exploit! For those who don\u2019t quite get the theory behind that technique, I\u2019d highly recommend reading the reference links. TL;DR - When a signal occurs, the kernel \u201cpauses\u201d the process\u2019s execution in order to jump to a signal handler routine. In order to safely resume the execution &hellip;", "Nice write-up @exploit! For those who don\u2019t quite get the theory behind that technique, I\u2019d highly recommend reading the reference links. TL;DR - When a signal occurs, the kernel \u201cpauses\u201d the process\u2019s execution in order to jump to a signal handler routine. In order to safely resume the execution &hellip;", "Nice write-up @exploit! For those who don\u2019t quite get the theory behind that technique, I\u2019d highly recommend reading the reference links. TL;DR - When a signal occurs, the kernel \u201cpauses\u201d the process\u2019s execution in order to jump to a signal handler routine. In order to safely resume the execution &hellip;", "Sigreturn Oriented ProgrammingIn the name of Allah, the most beneficent, the most merciful. Hello everyone to a new boring article, after we took a small look on normal ROP stuff, I decided to write something more fun !@_py is the one that started that idea! for learning purposes \u2026I hope yo&hellip;", "Sigreturn Oriented ProgrammingIn the name of Allah, the most beneficent, the most merciful. Hello everyone to a new boring article, after we took a small look on normal ROP stuff, I decided to write something more fun !@_py is the one that started that idea! for learning purposes \u2026I hope yo&hellip;", "That\u2019s because exploit dev is an art", "That\u2019s because exploit dev is an art", "Wow that exploit code is beautiful", "That\u2019s because exploit dev is an art", "Wow that exploit code is beautiful", "You are overwriting only the return address. ROP gadgets are missing. Are you sure you\u2019re leaking a legit libc address? Where do you return after the leak? Doesn\u2019t look like you\u2019re returning to the right place. Why did you hardcore the address of bin/sh? ASLR should be on. Below is @exploit\u2019s P&hellip;", "You are overwriting only the return address. ROP gadgets are missing. Are you sure you\u2019re leaking a legit libc address? Where do you return after the leak? Doesn\u2019t look like you\u2019re returning to the right place. Why did you hardcore the address of bin/sh? ASLR should be on. Below is @exploit\u2019s P&hellip;", "You are overwriting only the return address. ROP gadgets are missing. Are you sure you\u2019re leaking a legit libc address? Where do you return after the leak? Doesn\u2019t look like you\u2019re returning to the right place. Why did you hardcore the address of bin/sh? ASLR should be on. Below is @exploit\u2019s P&hellip;", "You are overwriting only the return address. ROP gadgets are missing. Are you sure you\u2019re leaking a legit libc address? Where do you return after the leak? Doesn\u2019t look like you\u2019re returning to the right place. Why did you hardcore the address of bin/sh? ASLR should be on. Below is @exploit\u2019s P&hellip;", "Show me your exploit so far (inside spoiler tags).", "You are overwriting only the return address. ROP gadgets are missing. Are you sure you\u2019re leaking a legit libc address? Where do you return after the leak? Doesn\u2019t look like you\u2019re returning to the right place. Why did you hardcore the address of bin/sh? ASLR should be on. Below is @exploit\u2019s P&hellip;", "Another solution [spoiler]Setting the length of a write to 0 works in this case, but let\u2019s extrapolate this challenge to a real world case. Imagine that instead of printing a message in the console, the program is actually invoking some protection code that prevents us to reverse the program. In th&hellip;", "Show me your exploit so far (inside spoiler tags).", "curl -X POST \u201chttps://www.hackthebox.eu/api/invite/generate\u201d", "tl;dr, don\u2019t necrobump please. We allow it so that discussions aren\u2019t arbitrarily limited. Please don\u2019t abuse it. The UD defines Necrobumping as \u201c[reviving] a long dormant forum thread by adding a new post, thus bringing it to the top of the forum list.\u201d In the format of forums, this is bad etiqu&hellip;", "A leak in binary exploitation is basically 85% of the pwning process. A leak is practically achieved by leveraging the functionality of the binary in order to get value(s) back from it. One of the simplest and probably the most common way of leaking data is by ROP-ing to a function which prints som&hellip;", "A leak in binary exploitation is basically 85% of the pwning process. A leak is practically achieved by leveraging the functionality of the binary in order to get value(s) back from it. One of the simplest and probably the most common way of leaking data is by ROP-ing to a function which prints som&hellip;", "A leak in binary exploitation is basically 85% of the pwning process. A leak is practically achieved by leveraging the functionality of the binary in order to get value(s) back from it. One of the simplest and probably the most common way of leaking data is by ROP-ing to a function which prints som&hellip;", "A leak in binary exploitation is basically 85% of the pwning process. A leak is practically achieved by leveraging the functionality of the binary in order to get value(s) back from it. One of the simplest and probably the most common way of leaking data is by ROP-ing to a function which prints som&hellip;", "As I said in the description of the challenge, you should be having ASLR on. That\u2019s why the leak is always different. The hints I\u2019ve given are extremely helpful. Just keep in mind the following: You can\u2019t beat someone who never gives up.", "Sweet! Focus on hint #2 for the last part of the exploitation  You\u2019re almost there.", "Yes, the offset difference should be the same in every execution. Make sure you know which libc address you\u2019re leaking. Let\u2019s say you\u2019re leaking puts()&#39;s libc address. All you have to do to find the base address is to subtract puts()&#39;s offset in libc from the leaked address and you get the base. Th&hellip;", "UPDATE #2: Thank you to @exploit for taking the time to troubleshoot the binary. In fact, the original 64-bit version is fully working and he managed to pwn it. My apologies once again and make sure you download the 64-bit version.", "Sweet! Focus on hint #2 for the last part of the exploitation  You\u2019re almost there.", "Thank you @_py ! I now have the system address but I get a sigbus\u2026 I\u2019ll never give up ^^", "Yes, the offset difference should be the same in every execution. Make sure you know which libc address you\u2019re leaking. Let\u2019s say you\u2019re leaking puts()&#39;s libc address. All you have to do to find the base address is to subtract puts()&#39;s offset in libc from the leaked address and you get the base. Th&hellip;", "curl -X POST \u201chttps://www.hackthebox.eu/api/invite/generate\u201d", "curl -X POST \u201chttps://www.hackthebox.eu/api/invite/generate\u201d", "As I said in the description of the challenge, you should be having ASLR on. That\u2019s why the leak is always different. The hints I\u2019ve given are extremely helpful. Just keep in mind the following: You can\u2019t beat someone who never gives up.", "Hi ! Thanks for the challenge, I have a leak but I don\u2019t know what are the address leaked\u2026 I tried to find the difference between my leak and system address but It looks like it change everytime\u2026 I\u2019m really noob  ^^", "Setting count and bs to 1 we are effectively discarding the \\n (one single byte will be written to the output, despite of how many we provide as input), so it works fine, but your is, let\u2019s say, more formal", "Sorry mate, your solution is disqualified. As I mentioned above, you need to explain why you did what you did. In ELF terms to be even more precise. Just comparing and changing values doesn\u2019t say anything to me. I set that challenge so people can read up the ELF structures because it\u2019s a valuable &hellip;", "I\u2019m not home atm but are you sure it shouldn\u2019t be: [spoiler]echo -ne \u201c\\x40\u201d | dd of=exit seek=32 bs=1 count=1 cont=notrunc IIRC, -e will add a newline at the end too. Might be wrong though. [/spoiler]", "Setting count and bs to 1 we are effectively discarding the \\n (one single byte will be written to the output, despite of how many we provide as input), so it works fine, but your is, let\u2019s say, more formal", "I\u2019m not home atm but are you sure it shouldn\u2019t be: [spoiler]echo -ne \u201c\\x40\u201d | dd of=exit seek=32 bs=1 count=1 cont=notrunc IIRC, -e will add a newline at the end too. Might be wrong though. [/spoiler]", "I\u2019m not home atm but are you sure it shouldn\u2019t be: [spoiler]echo -ne \u201c\\x40\u201d | dd of=exit seek=32 bs=1 count=1 cont=notrunc IIRC, -e will add a newline at the end too. Might be wrong though. [/spoiler]", "I\u2019m not home atm but are you sure it shouldn\u2019t be: [spoiler]echo -ne \u201c\\x40\u201d | dd of=exit seek=32 bs=1 count=1 cont=notrunc IIRC, -e will add a newline at the end too. Might be wrong though. [/spoiler]", "I\u2019m not home atm but are you sure it shouldn\u2019t be: [spoiler]echo -ne \u201c\\x40\u201d | dd of=exit seek=32 bs=1 count=1 cont=notrunc IIRC, -e will add a newline at the end too. Might be wrong though. [/spoiler]", "BTW  you can patch it from the command line like this.  Nice challenge @_py echo -e &quot;\\x40&quot; | dd of=exit seek=32 bs=1 count=1 conv=notrunc", "BTW  you can patch it from the command line like this.  Nice challenge @_py echo -e &quot;\\x40&quot; | dd of=exit seek=32 bs=1 count=1 conv=notrunc", "God damn! You killed it man! +1 for the unintended solution  However, the fix could be much simpler, 1 byte patching to be precise  You identified the problem correctly. The issue was indeed related to the program headers. If you think of it carefuly though, why would readelf assume that the progr&hellip;", "I did see that happening, and I understood what\u2019s happening there after using GDB. Then finding the rest of the input \u201cmanually by hand\u201d wasn\u2019t an issue anymore", "I understand. The whole \u201cmagic\u201d you mentioned had to do with turning on the right-most 0 bit and turning off the rest. You can notice that in GDB having in mind what I just said.", "I tried static analysis first\u2026 It went well until the part where the magic happened with the neg something add something and something and something cmp something jmp something I had to write stuff down and/or look in GDB what actually happens. So in the end I couldn\u2019t fully solve it just with w&hellip;", "The static analysis was showcasing a bit arithmetic trick. The dynamic analysis approach was the lazy way. Congrats either way @ricksanchez!", "Hello folks! I hope you\u2019re doing great! This is my first time I ever create a reversing engineering challenge so I\u2019m hoping there won\u2019t be any issue such as unintended solutions/bugs. ###Difficulty A big part of Reverse Engineering has to do with observation. That being said, depending on how sha&hellip;", "@_py Yes I understand now, and I definitely learned a ton since I never really looked at the ELF internals the last few weeks when trying to advance in RE. This was a nice change for me. @ATGC Thanks man  !", "Congrats @ricksanchez!  Now you understand why it was easy  If you know the internals, everything is easy. I hope you learnt something new out of it.", "@_py Ah, of course! I noticed that the bytes I was patching seemed suspiciously similar to those nearby, and it crossed my mind that if I could just shift the header everything might fall into place\u2026 It never crossed my mind to just change the offset though!  Great learning experience for me", "Congrats @ricksanchez!  Now you understand why it was easy  If you know the internals, everything is easy. I hope you learnt something new out of it.", "Congrats @ricksanchez!  Now you understand why it was easy  If you know the internals, everything is easy. I hope you learnt something new out of it.", "I solved it as it was intended. Feeling no glory now anymore with that hint being given by @_py tho  \u2026 Anyways\u2026  First things first impressive solution  @ATGC . As in the extended solution above I first used tools like gdb readelf objdump xxd/hexdump on that file. I came to the s&hellip;", "As an ELF-noob, this was incredibly helpful for me to understand how this works. Thanks!", "God damn! You killed it man! +1 for the unintended solution  However, the fix could be much simpler, 1 byte patching to be precise  You identified the problem correctly. The issue was indeed related to the program headers. If you think of it carefuly though, why would readelf assume that the progr&hellip;", "I solved it as it was intended. Feeling no glory now anymore with that hint being given by @_py tho  \u2026 Anyways\u2026  First things first impressive solution  @ATGC . As in the extended solution above I first used tools like gdb readelf objdump xxd/hexdump on that file. I came to the s&hellip;", "Awesome challenge @_py!  Starting simply, running exit produces a Segmentation fault. Dumping the symbol table by running readelf -s exit shows that there is no main function but there is a _start. However, it has a type of NOTYPE which is odd as it would usually have a type of FUNC: Symbol tabl&hellip;", "God damn! You killed it man! +1 for the unintended solution  However, the fix could be much simpler, 1 byte patching to be precise  You identified the problem correctly. The issue was indeed related to the program headers. If you think of it carefuly though, why would readelf assume that the progr&hellip;", "Awesome challenge @_py!  Starting simply, running exit produces a Segmentation fault. Dumping the symbol table by running readelf -s exit shows that there is no main function but there is a _start. However, it has a type of NOTYPE which is odd as it would usually have a type of FUNC: Symbol tabl&hellip;", "Sorry mate, your solution is disqualified. As I mentioned above, you need to explain why you did what you did. In ELF terms to be even more precise. Just comparing and changing values doesn\u2019t say anything to me. I set that challenge so people can read up the ELF structures because it\u2019s a valuable &hellip;", "Sorry mate, your solution is disqualified. As I mentioned above, you need to explain why you did what you did. In ELF terms to be even more precise. Just comparing and changing values doesn\u2019t say anything to me. I set that challenge so people can read up the ELF structures because it\u2019s a valuable &hellip;", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "Congrats to all of you folks!", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "Anyone who calls him/herself a hacker, should know about binary formats, especially if you are a low-level wizard. How well do you know the ELF? ###Difficulty Meh, probably easy. ###Rules Though it\u2019s easy to identify what\u2019s up, do justify why you patched the binary that way. ###Hints Hell &hellip;", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "Well, the title says it all. #Hints No hints\u2026 Hints are for wimps\u2026 there are no hints in real life\u2026 RulesPost at least 3 valid username/keys combination in the comments. Do not forget to use the spoiler tag Write-ups are welcomed\u2026 ChallengeGet your binary the usual way: cat text_below | base&hellip;", "UPDATE: After receiving some messages from a few people that the binary doesn\u2019t work the way it works on my box, I\u2019ll delete this post shortly. My apologies for the inconvenience.", "UPDATE #2: Thank you to @exploit for taking the time to troubleshoot the binary. In fact, the original 64-bit version is fully working and he managed to pwn it. My apologies once again and make sure you download the 64-bit version.", "", "UPDATE #2: Thank you to @exploit for taking the time to troubleshoot the binary. In fact, the original 64-bit version is fully working and he managed to pwn it. My apologies once again and make sure you download the 64-bit version.", "What?! The 32bit?", "", "UPDATE: After receiving some messages from a few people that the binary doesn\u2019t work the way it works on my box, I\u2019ll delete this post shortly. My apologies for the inconvenience.", "I was waiting for you to show up  I\u2019m sure you\u2019ll get reminded of the technique. It looks like MBE\u2019s. Edit: I added a 32-bit version as well.", "Much time no ROP, i\u2019ll play it!", "I was waiting for you to show up  I\u2019m sure you\u2019ll get reminded of the technique. It looks like MBE\u2019s. Edit: I added a 32-bit version as well.", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "The binaries can be found on my RE site under the Anothah one category.", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "The binaries can be found on my RE site under the Anothah one category.", "PrefaceThis write up are my thoughts and steps to analyze a given unknown binary. I want to understand the binary to a point where I can freely write about it. So here it is. I\u2019m always open for you pointing out mistakes or giving feedback to me Disclaimer:I won\u2019t look at the assembly code to p&hellip;", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "The binaries can be found on my RE site under the Anothah one category.", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "Hello folks! I hope you\u2019re all doing great! Since there\u2019s a plethora of reversing/crackme challenges on 0x00sec, it\u2019s time to step up the game with some binary exploitation one since that happens to be my favorite field as well. ###Difficulty Average ###Objective Get a shell. ###Rules ASLR&hellip;", "@_py Thanks mate\u2026 no worries I know you are busy and as @ricksanchez it is all about promotion \u2026 I have been looking at Unicorn Engine\u2026  @ricksanchez thanks mate. Glad to hear you liked it", "You need to stop being so good man! If you manage to add some sort of symbolic execution features in STAN, it\u2019d be pure orgasm. By the way, my apologies for not posting my write up for your challenge but I got caught up with exams.", "@_py Thanks mate\u2026 no worries I know you are busy and as @ricksanchez it is all about promotion \u2026 I have been looking at Unicorn Engine\u2026  @ricksanchez thanks mate. Glad to hear you liked it", "You need to stop being so good man! If you manage to add some sort of symbolic execution features in STAN, it\u2019d be pure orgasm. By the way, my apologies for not posting my write up for your challenge but I got caught up with exams.", "You need to stop being so good man! If you manage to add some sort of symbolic execution features in STAN, it\u2019d be pure orgasm. By the way, my apologies for not posting my write up for your challenge but I got caught up with exams.", "It has been a while since I wrote the Late Easter  challenge and now that STAN is around, this is a good excuse to present some of the latest functions I have add to my little tool  So, in this write-up I\u2019m going to solve the stripped version of the challenge. Grab the binary, grab STAN (https://gi&hellip;", "Hi fellas, Following my last article, RE for beginners: Methodology and tools, I decided to do this write up in order to present you another common issue that people, exercising in this area, should be quickly confronted to, anti-debugger technologies. For the sake of this article, I picked a chal&hellip;", "The keys I got: 5317 5327 5397 5417 5427 5497 Thanks for this challenge! This was the first one I solved without help, hints or waiting for a write-up! Can\u2019t wait to see more!", "Hi fellas, It\u2019s sharing time! With this wave of new comers who want to learn how to develop in C, I selected a few projects from my ex-uni that could be valuable to anyone wanting to dive in the C world. Those exercices can be downloaded through the following URL: https://0x0.st/UIG.zip Note: Ea&hellip;", "Hello everyone. I have made some minor edits since first posting this as to further clarify a couple of points. I joined this community a while ago; I have/had been a lurker for even longer.  A huge part of what made the hacker community what it was (and what it is here) involves a willingness to &hellip;", "Thank you SmartOne. Answers to your questions are below. You had asked for advice; I take this request seriously, and thus the length of the reply. Whatever you choose to do in this field, it all comes down to competency. . What anyone says isn\u2019t as important as what they can do  at the keyboard o&hellip;", "Hello folks! I hope you\u2019re doing great! This is my first time I ever create a reversing engineering challenge so I\u2019m hoping there won\u2019t be any issue such as unintended solutions/bugs. ###Difficulty A big part of Reverse Engineering has to do with observation. That being said, depending on how sha&hellip;", "Hold my beer for a sec\u2026", "Hold my beer for a sec\u2026", "I thought of adding it as a hint if someone didn\u2019t find out about that within 24 hours. Congrats!", "Hello folks! I hope you\u2019re doing great! This is my first time I ever create a reversing engineering challenge so I\u2019m hoping there won\u2019t be any issue such as unintended solutions/bugs. ###Difficulty A big part of Reverse Engineering has to do with observation. That being said, depending on how sha&hellip;", "Hello folks! I hope you\u2019re doing great! This is my first time I ever create a reversing engineering challenge so I\u2019m hoping there won\u2019t be any issue such as unintended solutions/bugs. ###Difficulty A big part of Reverse Engineering has to do with observation. That being said, depending on how sha&hellip;", "Hello folks! I hope you\u2019re doing great! This is my first time I ever create a reversing engineering challenge so I\u2019m hoping there won\u2019t be any issue such as unintended solutions/bugs. ###Difficulty A big part of Reverse Engineering has to do with observation. That being said, depending on how sha&hellip;", "Thanks @SmartOne That capstone framework is amazing. I\u2019ve got a working PoC (around 1.2KLoC) in a couple of days. Then it took me 2/3 days to just refactor that code in something with a bit of structure. So, roughly it took two complete weekends plus some hours every day during the week. Regarding&hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;", "jle 0x80485f6It will keep looping while it\u2019s less or equal. Meaning, the counter will be in the range of [0,15] (note I didn\u2019t type [0,15)), which in total is 16.", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "jle 0x80485f6It will keep looping while it\u2019s less or equal. Meaning, the counter will be in the range of [0,15] (note I didn\u2019t type [0,15)), which in total is 16.", "Hoodies are cool. 0x00sec is cool. You know what is even cooler? 0x00sec Hoodies.We get it, you\u2019re a badass, and you love hacking + computers. But you would look even more badass with one of these bad boys. [image][image]Do you want something more understated? Okay. We gotcha.  [image] [i&hellip;", "I\u2019m glad you gave 0 fucks about the 2 comments above.", "", "Please, lock this thread xD", "Looks like you got tired in the middle of @pry0cc\u2019s point. 3-5 sentences are nowhere close to a write-up. Even if that was a \u201cwrite-up\u201d, go ahead and make a separate post about it. Behave and don\u2019t embarass yourself please.", "And the one above this. EDIT: On reflection @pry0cc makes a good point: The forum is a place for discussion, perhaps writeups, how you did it, or one or two issues you may be facing. But a conversation about breaking it, that is a job for the IRC. My post was a writeup, how I did it, and one i&hellip;", "I\u2019m glad you gave 0 fucks about the 2 comments above.", "I\u2019m glad you gave 0 fucks about the 2 comments above.", "I\u2019m glad you gave 0 fucks about the 2 comments above.", "I\u2019m glad you gave 0 fucks about the 2 comments above.", "I agree with @_py. The IRC is the ultimate place for figuring stuff out and solving problems. The forum is a place for discussion, perhaps writeups, how you did it, or one or two issues you may be facing. But a conversation about breaking it, that is a job for the IRC. If you have ever used Faceboo&hellip;", "@h4x0r: Imagine me and 2-3 other folks tackling picoCTF, which lasts for 2 weeks, on the forum. It\u2019d be much more convenient if you just hang out on IRC and at the same you won\u2019t be shading other posts.", "Why @_py ? is there a limit on how much replies per post ?", "Thank you @0x00pf for the challenge ( and @kowalski for trying to help me with some command-line-fu) ! I will not post the full solution yet since it looks like some folks are close. [asciicast]", "PrefaceThis is a write-up for solving the devil-swapper RE challenge by @0x00pf . It was mostly intended for my personal archive but since it may be interesting to all of you I will try to format it in a clear and most importantly scrub friendly way for people like myself\u2026 Since I got stuck along&hellip;", "PrefaceThis is a write-up for solving the devil-swapper RE challenge by @0x00pf . It was mostly intended for my personal archive but since it may be interesting to all of you I will try to format it in a clear and most importantly scrub friendly way for people like myself\u2026 Since I got stuck along&hellip;", "@pry0cc @oaktree: I believe this post needs to resume on IRC at this point.", "Congrats mate!", "Congrats mate!", "Thank you @0x00pf for the challenge ( and @kowalski for trying to help me with some command-line-fu) ! I will not post the full solution yet since it looks like some folks are close. [asciicast]", "Thank you @0x00pf for the challenge ( and @kowalski for trying to help me with some command-line-fu) ! I will not post the full solution yet since it looks like some folks are close. [asciicast]", "Thank you @0x00pf for the challenge ( and @kowalski for trying to help me with some command-line-fu) ! I will not post the full solution yet since it looks like some folks are close. [asciicast]", "Thank you @0x00pf for the challenge ( and @kowalski for trying to help me with some command-line-fu) ! I will not post the full solution yet since it looks like some folks are close. [asciicast]", "Kek, I was just explaining to some of the members your Easter challenge, I hope not many noticed it on IRC.", "Your weekend challenge is here! This is a simple challenge. Do not look for very sophisticated stuff. You know\u2026 the devil\u2019s in the details. Boring to deathEasyInterestingWTF0voters Show results#Objective You have to find the secret key and the secret message. That\u2019s it Extra&hellip;", "Kek, I was just explaining to some of the members your Easter challenge, I hope not many noticed it on IRC.", "OK guys\u2026 you almost have the solution.  Thanks to all of you for trying this challenge! So this is another hint By now you know which tool you have to use and you should have found a bunch of transformations to use. The title of the challenge gives you a hint on which transformation to apply. The&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello. The link is now fixed.", "Hello there, Thank you for sharing it! I\u2019d like to request from now on not to post URL shorteners because this is an InfoSec community and some folks might be intimidated/skeptical about clicking it. I hope you understand. Take care and enjoy our community!", "Thank you for your reponse, on the website of picoctf i dont find the libc but we have a ssh access so I got the libc offset on the ssh server", "The libc for the binary is provided. I hope you understand why it\u2019s essential. Check out this video as well. You need the binary\u2019s libc one way or another. You could leak the whole binary\u2019s address space, or use the libc-database which LiveOverflow is using for his task. But, if the libc is provide&hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "\u201cRE guide for beginners\u201d Deobfuscation isn\u2019t beginner friendly, if you know what I mean", "hmm sounds like you are referring to a five finger discount", "Feel free to do so, I\u2019m planning to make some bninja-related write-ups as well.", "Feel free to do so, I\u2019m planning to make some bninja-related write-ups as well.", "okay thanks mate. I\u2019ll hit you up once it\u2019s up and running! @Nitrax after @_py gives me the basic rundown I\u2019d post an introductionary post about it, if he\u2019s not posting first", "okay thanks mate. I\u2019ll hit you up once it\u2019s up and running! @Nitrax after @_py gives me the basic rundown I\u2019d post an introductionary post about it, if he\u2019s not posting first", "It should deserve an entire post", "It should deserve an entire post", "The license is cross-platform. I have it installed on both Windows and Linux machines. If you have any questions regarding its usage once you purchase it, feel free to hit me up on IRC. I can give you a quick rundown of its internals. Another reason as to why bninja is a great starting point is th&hellip;", "@ricksanchez: I\u2019ll express my opinion from a Linux user\u2019s perspective. Binary Ninja is totally worth it for Static Analysis. It helped me step up my RE game way too much/fast. Imo it\u2019s one of the best tools you can start with if you are serious about RE since it\u2019s not even that pricey (atm). 90 buc&hellip;", "@ricksanchez: I\u2019ll express my opinion from a Linux user\u2019s perspective. Binary Ninja is totally worth it for Static Analysis. It helped me step up my RE game way too much/fast. Imo it\u2019s one of the best tools you can start with if you are serious about RE since it\u2019s not even that pricey (atm). 90 buc&hellip;", "in the current state they may be and that was my question but I\u2019m sure BNinja aims to be an entry level reversing platform for &lt;500$ to be a competitor to IDA, since  named licenses there start at 500\u20ac. And that\u2019s the point. When will that be? And what functions will they offer then  ? @_py okay &hellip;", "@ricksanchez: I\u2019ll express my opinion from a Linux user\u2019s perspective. Binary Ninja is totally worth it for Static Analysis. It helped me step up my RE game way too much/fast. Imo it\u2019s one of the best tools you can start with if you are serious about RE since it\u2019s not even that pricey (atm). 90 buc&hellip;", "@ricksanchez: I\u2019ll express my opinion from a Linux user\u2019s perspective. Binary Ninja is totally worth it for Static Analysis. It helped me step up my RE game way too much/fast. Imo it\u2019s one of the best tools you can start with if you are serious about RE since it\u2019s not even that pricey (atm). 90 buc&hellip;", "@Nitrax Great introduction to that huge chapter of reversing. On a side note you mentioned PEDA. Maybe you wanna check out GEF. As a reference from ther wiki: ###But why not PEDA? Yes! Why not?! PEDA is a fantastic tool to do the same, but only works for x86-32 or x86-64x whereas GEF supports&hellip;", "Hi fellas, A few days ago, I decided to start my adventure in the reverse engineering domain. I was quickly overwhelmed by a bunch of information and op codes that confused me a lot, even with solid knowledge in assembly and programming. Reverse engineering can seem complex at the first glance, ho&hellip;", "Hi fellas, A few days ago, I decided to start my adventure in the reverse engineering domain. I was quickly overwhelmed by a bunch of information and op codes that confused me a lot, even with solid knowledge in assembly and programming. Reverse engineering can seem complex at the first glance, ho&hellip;", "iPhone. Ringtone: defaultText tone: defaultBackground: not default", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "That\u2019s 100% not a mindset of a hardware hacker or any hacker for that matter.", "That\u2019s 100% not a mindset of a hardware hacker or any hacker for that matter.", "I guess that is just me then. When I make something, it just needs to work, that\u2019s all.", "That\u2019s 100% not a mindset of a hardware hacker or any hacker for that matter.", "That\u2019s 100% not a mindset of a hardware hacker or any hacker for that matter.", "Just found out about an amazing cross-platform ARM emulator as well. Check it out!", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "This challenge is great mate! I\u2019ll love to see the code Congrats I believe this is not what you were looking for, but according to rules, should be fine as It removes the message. [spoiler]I just modified 1 byte\u2026 the size of the string to be removed. Setting it to 0 the write system call will jus&hellip;", "Hi, You should have searched through the site before asking this question. @dtm recently posted a \u201cguide\u201d on how to get into Malware Analysis (use the search bar) for the Windows platform. We also have a bunch of learning resources for Assembly (use the search bar). You seem to be sort of rushing&hellip;", "Did you read the resource I posted? There is a section explaining the exact same thing. Click me.", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Continuing the discussion from Spawning reverse shells: I was about to reply on (Spawning reverse shells), but my reply has got so long that I decided to made it into a post. Please first read the original thread from @RickSanchez and the comments there, before you continue. The discussion here, i&hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "I\u2019d like to reiterate that learning plain old C first is probably going to make your life a lot easier\u2026 I use C and C++ (more the latter) and I can tell you that they are not the same. C++ adds so much more that reversing it is likely less beginner-friendly\u2026", "IDA Pro works just fine on Linux. I use it from time to time though Binary Ninja is my bae. Binary Ninja, though a static analysis tool, it includes all kinds of info (hexdumps, strings, section names etc ) except for memory (RAM) views (i.e stack, heap) ofc since that\u2019s a dynamic analysis feature. &hellip;", "Hi, You should have searched through the site before asking this question. @dtm recently posted a \u201cguide\u201d on how to get into Malware Analysis (use the search bar) for the Windows platform. We also have a bunch of learning resources for Assembly (use the search bar). You seem to be sort of rushing&hellip;", "Hi, You should have searched through the site before asking this question. @dtm recently posted a \u201cguide\u201d on how to get into Malware Analysis (use the search bar) for the Windows platform. We also have a bunch of learning resources for Assembly (use the search bar). You seem to be sort of rushing&hellip;", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "Hi @FormosaTBM and welcomed! Right. You may also consider MIPS as that is the most extended platforms for network devices. Once you manage one of the platforms, moving to a new one is easy because, the basics (as @_py said), are the same. /self promo mode=&quot;on&quot; Take a look to the programming for &hellip;", "IDA Pro works just fine on Linux. I use it from time to time though Binary Ninja is my bae. Binary Ninja, though a static analysis tool, it includes all kinds of info (hexdumps, strings, section names etc ) except for memory (RAM) views (i.e stack, heap) ofc since that\u2019s a dynamic analysis feature. &hellip;", "Just going mention that there exists malware which uses C#/VB.NET so it might be interesting to learn how to read those languages and also MSIL. What it really comes down to is that it doesn\u2019t really matter which one of these you learn as a beginner, but know that GAS is not used on Windows, nor &hellip;", "Just going mention that there exists malware which uses C#/VB.NET so it might be interesting to learn how to read those languages and also MSIL. What it really comes down to is that it doesn\u2019t really matter which one of these you learn as a beginner, but know that GAS is not used on Windows, nor &hellip;", "You didn\u2019t commit a crime, I get your point. When I wanted to get into the low-level field I was exactly like you. But then I realized how essential the basics are. The reason I responded wasn\u2019t to shit on you, but to give you my personal experience overview in terms of how I tackled the certain fi&hellip;", "i started the thread with the intention of only asking the basics (the fundamentals) - the absolute starting point and requirement for malware analysis - that being Assembly. I have looked that dtm\u2019s thread and like you have suggested - my plan was to basically not bother with anything else and jus&hellip;", "Especially these will be present during the whole learning phase and even afterwards. It\u2019s just a big part of reversing/analysis. But all in all i totally agree with you @_py . The most important thing is and always will be mastering the basics!", "Hi, You should have searched through the site before asking this question. @dtm recently posted a \u201cguide\u201d on how to get into Malware Analysis (use the search bar) for the Windows platform. We also have a bunch of learning resources for Assembly (use the search bar). You seem to be sort of rushing&hellip;", "Nice post @ricksanchez ! This is my proposal for section 6 (What\u2019s next) #6. Chuck Norris\u2019 way Chuck Norris is not a hacker but he pwns any computer just walking close to it Chuck Norris writes his own reverse shells directly in machine code and types it in hex by heartChuck Norris writes IPs &hellip;", "Hi guys, a quick update to inform you that whichCDN seems to have been added to blackarch. I must admit that I\u2019m quite proud of it. Have a good day. Nitrax", "PrefaceThis will be a short article which will demonstrates how to spawn an interactive reverse shell using built-in tools on any linux distribution. Also it shows what mindset and what kind of creativity might be needed when being a hacker or pentester. But why?There are many distributions of l&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "", "ARM is definitely worth looking at. In the last couple of month I looked at several hardware devices  from smaller to bigger ones to pwn them and almost all had  an ARM chip. The amount of hardware with ARM chips inside won\u2019t decrease over the next years  I think. So knowing at least the basic wi&hellip;", "Just found out about an amazing cross-platform ARM emulator as well. Check it out!", "Just found out about an amazing cross-platform ARM emulator as well. Check it out!", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "Just found out about an amazing cross-platform ARM emulator as well. Check it out!", "Just found out about an amazing cross-platform ARM emulator as well. Check it out!", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "There are at least a million+ ARM processors around us. That being said, the following link is an intro to ARM assembly from an exploit dev perspective. The author starts off by explaining the basics and in the next \u201cpack\u201d of series, she\u2019ll introduce ARM pwning. I figured it\u2019d be a neat reference f&hellip;", "Sure\u2026 lots of ideas taken. I knew about movuscator, but there are other alternatives", "Sure\u2026 lots of ideas taken. I knew about movuscator, but there are other alternatives", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "Awesome related REcon and DEFCON talks: Don\u2019t give ideas to @0x00pf please.", "For those who want to fuck a reverse engineer\u2019s day up, prepare yourself\u2026 @IoTh1nkN0t @_py", "For those who want to fuck a reverse engineer\u2019s day up, prepare yourself\u2026 @IoTh1nkN0t @_py", "", "", "Aye p33ps! Seeing as WannaCry took the world by storm recently, I thought that it\u2019s probably a good time to introduce the world of malware analysis to this forum. In this post, I will write about how you guys can join in on the mayhem and play with some fire (and hopefully not get burnt in the proce&hellip;", "Malware Analysis, Reverse Engineering, Binary Exploitation, all quite technical and related-to-each-other fields. @dtm just proved to you that the problem isn\u2019t the lack of resources, but the lack of resourcefulness.", "Malware Analysis, Reverse Engineering, Binary Exploitation, all quite technical and related-to-each-other fields. @dtm just proved to you that the problem isn\u2019t the lack of resources, but the lack of resourcefulness.", "###Solving a Heap exploitation challenge  In the name of Allah, the most beneficent, the most merciful. Thanks to @_py and @n0tnu11  who encouraged me, to write about such thing\u2026 I want to say sorry, cause i don\u2019t write alot more articles, you know guys, studies \u2026 It wasn\u2019t easy for me to&hellip;", "###Solving a Heap exploitation challenge  In the name of Allah, the most beneficent, the most merciful. Thanks to @_py and @n0tnu11  who encouraged me, to write about such thing\u2026 I want to say sorry, cause i don\u2019t write alot more articles, you know guys, studies \u2026 It wasn\u2019t easy for me to&hellip;", "Congrats!  @_py Sure\u2026 please do. I\u2019d love to see how did you solve it!.. and I agree, probably a separated write-up will be more convenient", "Congrats!  @_py Sure\u2026 please do. I\u2019d love to see how did you solve it!.. and I agree, probably a separated write-up will be more convenient", "Done. Write-up on its way soon (need to nap first). Thank you @0x00pf for the challenge! I hope you don\u2019t mind me making a separate write-up of the solution. Password: omelette", "Done. Write-up on its way soon (need to nap first). Thank you @0x00pf for the challenge! I hope you don\u2019t mind me making a separate write-up of the solution. Password: omelette", "Looks like the hint you found was not clear enough. Let\u2019s try with another one:  This is a Easter challenge because  an Easter Egg is hidden in it. To find it, you may need to grab a JAR of coffee. The Indonesian one is pretty good", "Looks like the hint you found was not clear enough. Let\u2019s try with another one:  This is a Easter challenge because  an Easter Egg is hidden in it. To find it, you may need to grab a JAR of coffee. The Indonesian one is pretty good", "I\u2019m either close or completely off or I found it (though it shouldn\u2019t be it yet). Here is a tricky message I got: \u2018\u2019\u2018 Well done. But\u2026 this is not the bean you have to grind! \u2019\u2019\u2019", "I\u2019m either close or completely off or I found it (though it shouldn\u2019t be it yet). Here is a tricky message I got: \u2018\u2019\u2018 Well done. But\u2026 this is not the bean you have to grind! \u2019\u2019\u2019", "lol [image]", "I know this is the case. I am trying to develop my skillset, and the way to do that is through practice. The fact I struggled with this is not surprising, seeing @_py struggle with this, however, makes me wonder if it is a lot harder than everybody previously thought.", "", "Whoever solves it, please don\u2019t forget to blur your solution.", "I was planning to release this during Easter but, unfortunately, I didn\u2019t manage to finish it on time. So this Easter challenge has just become a late Easter Challenge. #Difficulty I have no idea as I haven\u2019t tried to solve it myself\u2026 it may bevery easy or very tricky so here is a poll for the com&hellip;", "Whoever solves it, please don\u2019t forget to blur your solution.", "Thank you so much for the encouraging comment @shahril! This is because the instruction jmp *0x804a00c will take the 4 bytes value at the 0x804a00c address. You can imagine that this instruction is the same as jmp dword ptr [0x804a00c]. You are right about that. That\u2019s the Intel version of the i&hellip;", "Nice exercise to refresh my Perl, that I have to admit is a bit rusty\u2026 This is my decoder  Use:   $ cat msg.txt |  ./decoder.pl#!/usr/bin/perl$_= &lt;&gt;;s/\\.(\\d+)\\.(\\d+)\\.(\\d+)/$h{($i=$1+$2+$3)}++; push @p, $i; $i.&quot; &quot;/ge;$h{$_} &gt; $h{$m} and $m = $_ for keys %h;$_ = chr($_ - $m + 32) and prin&hellip;", "Thank you so much for the encouraging comment @shahril! This is because the instruction jmp *0x804a00c will take the 4 bytes value at the 0x804a00c address. You can imagine that this instruction is the same as jmp dword ptr [0x804a00c]. You are right about that. That\u2019s the Intel version of the i&hellip;", "Thank you so much for the encouraging comment @shahril! This is because the instruction jmp *0x804a00c will take the 4 bytes value at the 0x804a00c address. You can imagine that this instruction is the same as jmp dword ptr [0x804a00c]. You are right about that. That\u2019s the Intel version of the i&hellip;", "Thanks for the paper @_py! Reading your newest article Linux Internals - The Art Of Symbol Resolution plus reading this again really makes sense, as I\u2019m able to understand it in just one shot! I love how you introduced the concept of GOT through array indices [0][1][2], which really makes sense for&hellip;", "Thank you so much for the encouraging comment @shahril! This is because the instruction jmp *0x804a00c will take the 4 bytes value at the 0x804a00c address. You can imagine that this instruction is the same as jmp dword ptr [0x804a00c]. You are right about that. That\u2019s the Intel version of the i&hellip;", "Thanks for the paper @_py! Reading your newest article Linux Internals - The Art Of Symbol Resolution plus reading this again really makes sense, as I\u2019m able to understand it in just one shot! I love how you introduced the concept of GOT through array indices [0][1][2], which really makes sense for&hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "Thank you for the feedback! I can relate to you since it took me a while to grasp such a technical concept but after a while it all makes sense and I\u2019m glad it did for you as well. As for your suggestion, I see your point. But, there\u2019s a reason I did not analyze at that part the sentence you sugges&hellip;", "Thank you for the feedback! I can relate to you since it took me a while to grasp such a technical concept but after a while it all makes sense and I\u2019m glad it did for you as well. As for your suggestion, I see your point. But, there\u2019s a reason I did not analyze at that part the sentence you sugges&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "Thank you for the feedback! I can relate to you since it took me a while to grasp such a technical concept but after a while it all makes sense and I\u2019m glad it did for you as well. As for your suggestion, I see your point. But, there\u2019s a reason I did not analyze at that part the sentence you sugges&hellip;", "This is a pure gold man. Sincerely the first time I read it doesn\u2019t make any sense until I got to the \u201cmemory image after patching\u201d. Re-reading again and it starts to make sense! Thanks for the paper, and the ASCII drawing.  Edit: I have a minor suggestion for your paper, for this section: \u201c3. &hellip;", "Thank you for the feedback! I can relate to you since it took me a while to grasp such a technical concept but after a while it all makes sense and I\u2019m glad it did for you as well. As for your suggestion, I see your point. But, there\u2019s a reason I did not analyze at that part the sentence you sugges&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Recently I have been reading a bit about different IoT/embedded malwares and I have found the reading very interesting and instructive so I have decided to share with you what I have found. Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters &hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Thank you so much for the feedback! I\u2019ll try to fix (if possible) the asciinema font. I thought it\u2019d be more comprehensive if I show the exploitation process through vids and not having to explain every bit of an image. I can add screenshots as well if something was unclear to you. If you have any &hellip;", "Long story short. That is a fantastic writeup about format strings vulnerabilities. Asciinema is pretty cool, this way we can see it live. Some people do prefer to have a live demo instead of screenshots. May be you could increase font size in asciinemas for four eyed people like me 8D Stackframes,&hellip;", "Thank you so much for the feedback! I\u2019ll try to fix (if possible) the asciinema font. I thought it\u2019d be more comprehensive if I show the exploitation process through vids and not having to explain every bit of an image. I can add screenshots as well if something was unclear to you. If you have any &hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "@VVid0w @ricksanchez: Though I completely understand where you are coming from and I personally strive to always make my write-ups beginner friendly and technical at the same time, you have to see it from a different perspective as well. What you are essentially saying is that @exploit should inclu&hellip;", "@oaktree @pry0cc @IoTh1nkN0t @0x00pf he\u2019s got a point.", "@TheDoctor That is more of a syntactical/formatting guideline. We\u2019ll add further info on that one (or make a fresh one) and pin it.", "@TheDoctor That is more of a syntactical/formatting guideline. We\u2019ll add further info on that one (or make a fresh one) and pin it.", "@TheDoctor That is more of a syntactical/formatting guideline. We\u2019ll add further info on that one (or make a fresh one) and pin it.", "@TheDoctor That is more of a syntactical/formatting guideline. We\u2019ll add further info on that one (or make a fresh one) and pin it.", "@ricksanchez @_py Is this what you mean?", "@VVid0w @ricksanchez: Though I completely understand where you are coming from and I personally strive to always make my write-ups beginner friendly and technical at the same time, you have to see it from a different perspective as well. What you are essentially saying is that @exploit should inclu&hellip;", "@VVid0w @ricksanchez: Though I completely understand where you are coming from and I personally strive to always make my write-ups beginner friendly and technical at the same time, you have to see it from a different perspective as well. What you are essentially saying is that @exploit should inclu&hellip;", "@oaktree @pry0cc @IoTh1nkN0t @0x00pf he\u2019s got a point.", "@oaktree @pry0cc @IoTh1nkN0t @0x00pf he\u2019s got a point.", "@VVid0w @ricksanchez: Though I completely understand where you are coming from and I personally strive to always make my write-ups beginner friendly and technical at the same time, you have to see it from a different perspective as well. What you are essentially saying is that @exploit should inclu&hellip;", "@ricksanchez You are right on that. We don\u2019t really need a tag, but it\u2019d save a lot of the reader\u2019s time if every author states at the beginning what should be expected in terms of theory etc.", "@oaktree @pry0cc @IoTh1nkN0t @0x00pf he\u2019s got a point.", "@_py then maybe it\u2019s time to create a rough template or some writing guidelines and pin them to the top?", "@ricksanchez You are right on that. We don\u2019t really need a tag, but it\u2019d save a lot of the reader\u2019s time if every author states at the beginning what should be expected in terms of theory etc.", "@VVid0w @ricksanchez: Though I completely understand where you are coming from and I personally strive to always make my write-ups beginner friendly and technical at the same time, you have to see it from a different perspective as well. What you are essentially saying is that @exploit should inclu&hellip;", "@_py , you\u2019re correct with what you\u2019re stating about technical papers and other publications. Maybe we need something like a tag here in the forum which is either [beginner friendly] or [intermediate] for articles with \u201cmotivation for further research\u201d as you call it. This would make writing artic&hellip;", "@VVid0w @ricksanchez: Though I completely understand where you are coming from and I personally strive to always make my write-ups beginner friendly and technical at the same time, you have to see it from a different perspective as well. What you are essentially saying is that @exploit should inclu&hellip;", "Solving a ROP on 64-bit challenge In the name of Allah, the most beneficent, the most merciful. ###Before i begin this article, i want to thank @_py for showing me this beautiful community \u2026 This article is for learning purposes\u2026 Hello everybody, this my first article ever, i\u2019m not really go&hellip;", "Solving a ROP on 64-bit challenge In the name of Allah, the most beneficent, the most merciful. ###Before i begin this article, i want to thank @_py for showing me this beautiful community \u2026 This article is for learning purposes\u2026 Hello everybody, this my first article ever, i\u2019m not really go&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "@pry0cc @oaktree @IoTh1nkN0t do it or I will.", "i\u2019d just like to interject for a moment. you should have just read what description of hacking you pasted there, you\u2019re contradicting yourself, says it\u2019s all about learning and enjoying together. hacking isnt necessarily related to computers, it can be anything. hackers are problem solvers. you can &hellip;", "@pry0cc @oaktree @IoTh1nkN0t do it or I will.", "I thought that 0x00sec was only accessible through private invit ? O.o How can we still read such things ?", "@pry0cc @oaktree @IoTh1nkN0t do it or I will.", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "We might be looking at 0x00sec\u2019s crypto wizard!", "So as you might know, pysec, dtm, kowalski and me did the picoCTF some time back. One of the challenges we did was an RSA one. The challenge was as follows e = 65537n = 6423132408480640149750439343086582424473124851523426736107568595350901037046104720049133495026481570911044633035111312786651761&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "[image]Holy shit dude this is awesome!!! &lt;3", "Zup folks, for the picoCTF we (dtm, pysec, kowalski and me), had to solve several crypto challenges. RSA being the most common subject. So here I thought it\u2019s time to share what I know about RSA, because it\u2019s one of the most common algorithms seen in public key crypto. First let\u2019s start with a li&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "@pry0cc I\u2019m not hating. I\u2019m peaceful and loving mayn. Btw, you learn by reading. You master by doing. You can\u2019t just stick your head in the sand.  Once you know enough theory, you\u2019ll have the resources to google for the right keywords/solutions and find your way through tasks.", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "0x00sec turns 0x01!We made it, guys! 0x00sec is a year old. We went from a simple Jekyll blog with only three articles to a respectably-sized, full-on forum with over 500 users. Each day, one or more people took a chance and signed up. [image] Countless Introductions showcase our diversity of int&hellip;", "@pry0cc I\u2019m not hating. I\u2019m peaceful and loving mayn. Btw, you learn by reading. You master by doing. You can\u2019t just stick your head in the sand.  Once you know enough theory, you\u2019ll have the resources to google for the right keywords/solutions and find your way through tasks.", "But how much of Hacking: The Art of Exploitation have you read?", "@pry0cc I\u2019m not hating. I\u2019m peaceful and loving mayn. Btw, you learn by reading. You master by doing. You can\u2019t just stick your head in the sand.  Once you know enough theory, you\u2019ll have the resources to google for the right keywords/solutions and find your way through tasks.", "You are bringing back a lot of childhood memories with that pic. (No, I wasn\u2019t reversing games. I\u2019m talking about Pinball.)", "Woah, no hate  You may be right, I need to push past that first hurdle. I can sit here and make excuses all day or I can just get on with it. In my whole past of learning anything, infosec, programming and what not, I\u2019ve been able to push past that first hurdle. Reverse Engineering + CTF\u2019s seem to&hellip;", "I\u2019m new to CTFs as well and I\u2019m no \u201cpro\u201d in all means, but just trying to figure out the solution and playing around with various approaches is fun. Sure it can be tiring and frustrating if it ain\u2019t working but that\u2019s where the fun lies. With every solved question/CTF the next one will be easier ( &hellip;", "I\u2019m new to CTFs as well and I\u2019m no \u201cpro\u201d in all means, but just trying to figure out the solution and playing around with various approaches is fun. Sure it can be tiring and frustrating if it ain\u2019t working but that\u2019s where the fun lies. With every solved question/CTF the next one will be easier ( &hellip;", "Bruh, I didn\u2019t say Reverse Engineering is beginner-friendly. If you and @Evalion actually bothered to sign up you would see what I\u2019m talking about. No need to have a passive attitude towards CTFs. They are meant to make you feel dumb in order to improve. Embrace it. There was a task where you had &hellip;", "Bruh, I didn\u2019t say Reverse Engineering is beginner-friendly. If you and @Evalion actually bothered to sign up you would see what I\u2019m talking about. No need to have a passive attitude towards CTFs. They are meant to make you feel dumb in order to improve. Embrace it. There was a task where you had &hellip;", "Ha \u201cbeginner friendly tasks\u201d Reverse Engineering is hard. That\u2019s definitely true when you\u2019re just starting out. @Evalion, we need to figure out a way to bridge the gap between complete beginner and intermediate. I am struggling with this myself. When we break it we should share our findings.", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Actually the CTF had a fair amount of beginner-friendly tasks as well. It\u2019s not possible to know every task\u2019s solution just by reading it. We solved plenty of tasks as a team and at least 85% of them required us to google/research quite a lot. Especially crypto. Personally, the pwning one that I\u2019ll&hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Actually the CTF had a fair amount of beginner-friendly tasks as well. It\u2019s not possible to know every task\u2019s solution just by reading it. We solved plenty of tasks as a team and at least 85% of them required us to google/research quite a lot. Especially crypto. Personally, the pwning one that I\u2019ll&hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Actually the CTF had a fair amount of beginner-friendly tasks as well. It\u2019s not possible to know every task\u2019s solution just by reading it. We solved plenty of tasks as a team and at least 85% of them required us to google/research quite a lot. Especially crypto. Personally, the pwning one that I\u2019ll&hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Pretty cool write up!.. Looking forward to more!!!", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "Hello folks! I hope you\u2019re doing great. This is my first ever CTF write-up yay! During the last couple of weeks, @IoTh1nkN0t, @dtm, @kowalski and myself, took part in picoCTF. It\u2019s an \u201centry-level\u201d CTF, which practically means, it\u2019s made for CTF rookies! Well, you needed a little bit of experience &hellip;", "No @IoTh1nkN0t\u2026 Hmmm. I\u2019m tasting bias here @_py what do you think? (jk)", "No @IoTh1nkN0t\u2026 Hmmm. I\u2019m tasting bias here @_py what do you think? (jk)", "touch pry.txttouch oaktree.txttouch 0x00sec.txtLooks like someone is riding the 0x00sec train kek. (jk)", "touch pry.txttouch oaktree.txttouch 0x00sec.txtLooks like someone is riding the 0x00sec train kek. (jk)", "touch pry.txttouch oaktree.txttouch 0x00sec.txtLooks like someone is riding the 0x00sec train kek. (jk)", "touch pry.txttouch oaktree.txttouch 0x00sec.txtLooks like someone is riding the 0x00sec train kek. (jk)", "Now this is not a programming tutorial as most of you are probably hoping for, but I think most of you (if not all) ever had to use git. Wether it is to get involved in our Gitlab or to clone a nice little piece of software you found from GitHub, you\u2019ll most likely use it in the future. I am current&hellip;", "touch pry.txttouch oaktree.txttouch 0x00sec.txtLooks like someone is riding the 0x00sec train kek. (jk)", "No matter who you ask, google will always know better.", "Hi fellas, Today, I wanted to spend some time explaining you why Wordpress is, and will still be, the best CMS of all time ! Indeed, since its release on May 27, 2003, no flaw has been found and its founders are kept hard work to maintain and enhance this fabulous solution that help thousand users&hellip;", "Getting Stealthy with StelfHello 0x00\u2019ers! In this tutorial, I am going to be giving away some content that has been sought after for a long time. Everybody knows that most prebuilt tools such as Metasploit don\u2019t work, payloads generated by them, or encoders used with them. They get picked up by a&hellip;", "So it\u2019s been a while since I last wrote an article and I think it\u2019s time for a new one. Since the straight forward smash stacking has already been covered plenty, I decided to start this serie with ret2libc. It is assumed that you already understand the normal exploiting techniques, so make sure y&hellip;", "Much better explanation @_py, thank you. You clear up things a lot. @IoTh1nkN0t you should quote py\u2019s response in your post.", "Here\u2019s the basic idea (keep in mind this will work on 32-bit binaries):                            Stack                  +----------------------+                  |       &quot;/bin/sh&quot;      |                  +----------------------+                  |   ret_after_system   |                  +---&hellip;", "Here\u2019s the basic idea (keep in mind this will work on 32-bit binaries):                            Stack                  +----------------------+                  |       &quot;/bin/sh&quot;      |                  +----------------------+                  |   ret_after_system   |                  +---&hellip;", "Here\u2019s the basic idea (keep in mind this will work on 32-bit binaries):                            Stack                  +----------------------+                  |       &quot;/bin/sh&quot;      |                  +----------------------+                  |   ret_after_system   |                  +---&hellip;", "Yes I fixed it, should be 260 a\u2019s", "Here\u2019s the basic idea (keep in mind this will work on 32-bit binaries):                            Stack                  +----------------------+                  |       &quot;/bin/sh&quot;      |                  +----------------------+                  |   ret_after_system   |                  +---&hellip;", "Here\u2019s the basic idea (keep in mind this will work on 32-bit binaries):                            Stack                  +----------------------+                  |       &quot;/bin/sh&quot;      |                  +----------------------+                  |   ret_after_system   |                  +---&hellip;", "Here\u2019s the basic idea (keep in mind this will work on 32-bit binaries):                            Stack                  +----------------------+                  |       &quot;/bin/sh&quot;      |                  +----------------------+                  |   ret_after_system   |                  +---&hellip;", "@dtm: What @IoTh1nkN0t wrote wasn\u2019t technically wrong. He just didn\u2019t go into the details which wasn\u2019t important for the write-up. I\u2019ll analyse it though since it might be useful to others. So: AFAIK (I will simplify it a little bit) , these are the stages the CPU goes through in order to process &hellip;", "@dtm: What @IoTh1nkN0t wrote wasn\u2019t technically wrong. He just didn\u2019t go into the details which wasn\u2019t important for the write-up. I\u2019ll analyse it though since it might be useful to others. So: AFAIK (I will simplify it a little bit) , these are the stages the CPU goes through in order to process &hellip;", "Your write-up was pretty solid overall. I just felt that at some parts you assumed certain details to be known from the reader\u2019s side and it might confuse them. Just to be clear, I\u2019m not saying your post is unclear. Just suggesting that in case your target audience isn\u2019t only peeps who are familiar&hellip;", "Hmm yea I was maybe a bit too straight forward, thanks for the feedback!", "Your write-up was pretty solid overall. I just felt that at some parts you assumed certain details to be known from the reader\u2019s side and it might confuse them. Just to be clear, I\u2019m not saying your post is unclear. Just suggesting that in case your target audience isn\u2019t only peeps who are familiar&hellip;", "Yes on top of that returning is just pop eip", "Hmm yea I was maybe a bit too straight forward, thanks for the feedback!", "@dtm: What @IoTh1nkN0t wrote wasn\u2019t technically wrong. He just didn\u2019t go into the details which wasn\u2019t important for the write-up. I\u2019ll analyse it though since it might be useful to others. So: AFAIK (I will simplify it a little bit) , these are the stages the CPU goes through in order to process &hellip;", "Another note: Though I\u2019m familiar with that exploitation technique, I feel like the post could be way more juicy to those who haven\u2019t got around it if there were snippets of the PoC (i.e how the memory looks like right before the system()&#39;s call and much more). You are the author though so it\u2019s yo&hellip;", "So it\u2019s been a while since I last wrote an article and I think it\u2019s time for a new one. Since the straight forward smash stacking has already been covered plenty, I decided to start this serie with ret2libc. It is assumed that you already understand the normal exploiting techniques, so make sure y&hellip;", "@dtm: What @IoTh1nkN0t wrote wasn\u2019t technically wrong. He just didn\u2019t go into the details which wasn\u2019t important for the write-up. I\u2019ll analyse it though since it might be useful to others. So: AFAIK (I will simplify it a little bit) , these are the stages the CPU goes through in order to process &hellip;", "It might sound cocky but it\u2019s not: Think of yourself as the hardest worker in the room. You\u2019re there to teach them how it\u2019s done. It all comes down to knowing your shit and being confident about it.", "It might sound cocky but it\u2019s not: Think of yourself as the hardest worker in the room. You\u2019re there to teach them how it\u2019s done. It all comes down to knowing your shit and being confident about it.", "", "Drink a beer before you go up on stage  But seriously, there are a couple things I do/keep in mind: Prepare your intro and nail that. Once you get rolling, your nerves tend to relax a bitIf you find anyone in the room that is giving you really positive feedback via their expression or reaction, &hellip;", "@zinzloun: I don\u2019t know if you actually read my reply but 4 of my points had to do with your write-up and not \u201coffending\u201d your attitude/personality as you mentioned. You said that we didn\u2019t give you an explanation as to why we unlisted it. How could we? Right after I unlisted it, you made a public p&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "It might sound cocky but it\u2019s not: Think of yourself as the hardest worker in the room. You\u2019re there to teach them how it\u2019s done. It all comes down to knowing your shit and being confident about it.", "It might sound cocky but it\u2019s not: Think of yourself as the hardest worker in the room. You\u2019re there to teach them how it\u2019s done. It all comes down to knowing your shit and being confident about it.", "It might sound cocky but it\u2019s not: Think of yourself as the hardest worker in the room. You\u2019re there to teach them how it\u2019s done. It all comes down to knowing your shit and being confident about it.", "It might sound cocky but it\u2019s not: Think of yourself as the hardest worker in the room. You\u2019re there to teach them how it\u2019s done. It all comes down to knowing your shit and being confident about it.", "It might sound cocky but it\u2019s not: Think of yourself as the hardest worker in the room. You\u2019re there to teach them how it\u2019s done. It all comes down to knowing your shit and being confident about it.", "I nominate @Joe_Schmoe for his recent post on STELF.", "Come on, @Joe_Schmoe! Don\u2019t be __stelf__ish. Make a post!", "Come on, @Joe_Schmoe! Don\u2019t be __stelf__ish. Make a post!", "@_py link me please\u2026", "I nominate @Joe_Schmoe for his recent post on STELF.", "Did I miss it? (or did I miss the irony)", "I nominate @Joe_Schmoe for his recent post on STELF.", "Text mode interface for git. Tig is an ncurses-based text-mode interface for git. It functions mainly as a Git repository browser, but can also assist in staging changes for commit at chunk level and act as a pager for output from various Git commands. The docs are at https://jonas.github.io/t&hellip;", "Are you talking about this link? https://wikileaks.org/ciav7p1/cms/index.html", "Are you talking about this link? https://wikileaks.org/ciav7p1/cms/index.html", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Wanted to have a little refresher on shells in C and I\u2019d like to make some notes in case someone didn\u2019t fully understand why the shell works. When execv was called: The caller\u2019s memory image was overwritten by the new one. The file table stayed in place. Meaning, open file descriptors are pre&hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Hi fellas, The time is came to publish the first release of unDLP. This journey was scattered of obstacles coming from the old and venerated Perl gods ! But that\u2019s not all, hold on, the famous TLS protocol  made me sweated more than once \u2026 bloody block size limitation \u2026  Well, before I get into th&hellip;", "It is KB. You can also use just K or KiB, but no kb or Kb. It matters because 65536 and 64000 are different numbers and 1 __B__yte is 8 __b__its .", "Yo, found this script recently: https://github.com/Tompazi/confundo What this script does is it replaces letters with similar looking Unicode glyphs. So you feed it a string, and it outputs several strings that look the same, yet use different characters. An example that comes to mind: If your tar&hellip;", "Ever wondered why so many sites don\u2019t allow Unicode to be used in usernames? Yep, that\u2019s the reason\u2026 // Edit: A simple online converter: Homoglyph Attack One example: Joe_Schmoe --&gt; J\u03bfe_Schmoe Could you spot the difference? Proof (SHA-256): Original: bb1c1ec26ebae7df700719461ce0a0bc5aac1aac2fa1&hellip;", "I never heard of them ! Thanks for sharing !", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "30 days later and Joe_Schmoe still has no article on stelf\u2026", "Wanted to have a little refresher on shells in C and I\u2019d like to make some notes in case someone didn\u2019t fully understand why the shell works. When execv was called: The caller\u2019s memory image was overwritten by the new one. The file table stayed in place. Meaning, open file descriptors are pre&hellip;", "Wanted to have a little refresher on shells in C and I\u2019d like to make some notes in case someone didn\u2019t fully understand why the shell works. When execv was called: The caller\u2019s memory image was overwritten by the new one. The file table stayed in place. Meaning, open file descriptors are pre&hellip;", "You dd to the raw device /dev/sda instead of the partition /dev/sda1 because the code to load the bootloader needs to be in the MBR which resides in the first sector. The partitions come later. MBR is read before anything else. More here (see the 2nd Paragraph): https://linuxjourney.com/lesson/boot&hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Okay, I\u2019ve spent a while doing security but very little of it focused on web apps. Like, almost none. As a sys admin, I\u2019m more concerned about hardening my OS and learning fun things like buffer overflows and interesting network attacks. That said, I find myself in a position now where I need to le&hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "i had no ideea. Thx pico to shed some light over this!", "I take that back, I know the dude behind pwnable.kr I think. The rest are new to me though.", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Another one: http://www.pentest.guru/index.php/2016/01/28/best-books-tutorials-and-courses-to-learn-about-exploit-development/", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "I liked microcorruption because it felt like a fun game and not that much as a pure task to complete. If it\u2019s not your style then check out protostar and use LiveOverflow\u2019s channel as a reference ( the binary hacking series ). He\u2019ll get you up to speed quite fast.", "I liked microcorruption because it felt like a fun game and not that much as a pure task to complete. If it\u2019s not your style then check out protostar and use LiveOverflow\u2019s channel as a reference ( the binary hacking series ). He\u2019ll get you up to speed quite fast.", "I started micro corruption but it made me feel pretty uncomfortable because of the GUI. I want to learn in a quite practical setup, so that my skills can be transferred to other things.", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "@pry0cc: Protostar and microcorruption. Start with microcorruption though because the GUI will get you hooked imo.", "Which would reccomend to me @_py? A very basic level reverse engineer/smash stacker?", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Since I\u2019ve noticed quite a lot of interest in low-level stuff from the community recently, especially on IRC when it comes to reversing/exploit dev, below you\u2019ll find some pwning/reversing challenges that I\u2019ve enjoyed playing over the past months. Note: I won\u2019t be referring to the ones everyone is &hellip;", "Not sure which .hex files are you referring to. Anyway, .hex is usually the extension of Intel hex files. A format to encode binary data in ASCII and used by many tools as source or target format for firmware write/read. In this context, they contain firmware dumps. avrdude (used by the Arduino env&hellip;", "Another one: http://www.pentest.guru/index.php/2016/01/28/best-books-tutorials-and-courses-to-learn-about-exploit-development/", "Not sure which .hex files are you referring to. Anyway, .hex is usually the extension of Intel hex files. A format to encode binary data in ASCII and used by many tools as source or target format for firmware write/read. In this context, they contain firmware dumps. avrdude (used by the Arduino env&hellip;", "@Valkyr Do you know anything about those .HEX files? I\u2019m confused as to how they are being used by the teensy loader. Maybe @0x00pf can shed some light into this.", "My Teensy LC arrived yesterday, and even just printing \u201chello world\u201d on another computer, gave me vibes. Anxious to get some pwning kicked off soon. While waiting for my teensy, I did some research and found that next to the renowned Samy Kamkar , Nikhil SamratAshok Mittal did some great work with&hellip;", "There are almost 20 official Arduino models with very different features (not considering all the tenths of compatible boards out there). Some have removable MCUs, some don\u2019t. Some have more memory, some less. Some run faster and some slower\u2026 The language you use with the Arduino IDE is also C.&hellip;", "Should we expect browser exploit demos later on?", "If I get that far", "Should we expect browser exploit demos later on?", "Should we expect browser exploit demos later on?", "Should we expect browser exploit demos later on?", "Hi @ricksanchez Good introduction. Some comments Even when I think, most of the people had understood what you meant in that sentence I would like to clarify that a logic analyser is intended to be used with digital signals. It will not work with analogue signals. The \u201cwhatever form the signal ma&hellip;", "I ordered a bus pirate and a logic analyzer to take over my ISPs Router. If it works, I will do a tutorial/writeup from a beginners side of view.", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "Good morning fellow readers, PrefaceI decided to write another beginner tutorial before we\u2019re stepping into deeper water, so everyone who\u2019s interested in following has basically the same knowledge base when it\u2019s getting more complex. If you\u2019re more advanced and already know what I\u2019m writing about &hellip;", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "@_py point taken. I\u2019ll add a demo later.", "@_py point taken. I\u2019ll add a demo later.", "It might be already planned for the future but I just want to say it either way in case it\u2019s not. These hardware gadget write-ups that you guys have been posting lately are cool indeed. But something is missing. A demo. I\u2019d assume that these sort of posts want to attract the readers in order to get&hellip;", "@Valkyr fully agree with @_py. The LC (Low Cost) is a lot cheaper and enough for most of the things mentioned in this post. The 3.X series are pretty powerful (Cortex M-4). Unless you want to do some real-time stuff (audio processing for instance), you will be wasting resources", "Get the LC one. It will get the job done and it\u2019s cheaper than the rest.", "Get the LC one. It will get the job done and it\u2019s cheaper than the rest.", "Cheers mate Always a relevant comment ! I will fix that. Thanks for sharing.", "I\u2019m glad you took my advice into consideration! Perl is bae so I\u2019ll definitely have a look at your code once I have some free time.", "Hello everyone! The entire community is invited to nominate users (themselves or others) to be considered for this month\u2019s 1337 of the m0n7h. Comment somebody who you think should win the 1337 of the M0n7h award and nearing the end of the month we will add those names into a poll for you to choos&hellip;", "The main benefit is that Perl is the coolest scripting language ever  On top of that, it is very easy to integrate a Perl interpreter in any other project and it has a quite powerful extension system to interface to any other library out there (man perlembed  and man perlxstut for details). P.S.: &hellip;", "I\u2019m glad you took my advice into consideration! Perl is bae so I\u2019ll definitely have a look at your code once I have some free time.", "Hi fellas, As @_py suggested, I have decided to adopt a new article format to show the progress of my project, allowing you to have a better understanding of the technical choices during the development process as well as a better overview of the work accomplished. This new series concerns a new o&hellip;", "I\u2019m glad you took my advice into consideration! Perl is bae so I\u2019ll definitely have a look at your code once I have some free time.", "Hi fellas, As @_py suggested, I have decided to adopt a new article format to show the progress of my project, allowing you to have a better understanding of the technical choices during the development process as well as a better overview of the work accomplished. This new series concerns a new o&hellip;", "I promise to write this many months ago, and finally I found some time to do it. Even when a VPN is not really a hacker tool, it is commonly used to make tracing more difficult and to increase privacy and anonymity. We have talked a lot about VPNs from a user point of view but not much about how the&hellip;", "mycodeschool is one of the best youtube resources for C in my opinion. If you are a tutorial type of folk, you should 100% check out all of his series. I had read that he was working for Google.", "Thanks, the channel was news to me. Definitely will check it out after exams, since I wanna get started with C as well", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "mycodeschool is one of the best youtube resources for C in my opinion. If you are a tutorial type of folk, you should 100% check out all of his series. I had read that he was working for Google.", "mycodeschool is one of the best youtube resources for C in my opinion. If you are a tutorial type of folk, you should 100% check out all of his series. I had read that he was working for Google.", "mycodeschool is one of the best youtube resources for C in my opinion. If you are a tutorial type of folk, you should 100% check out all of his series. I had read that he was working for Google.", "@zinzloun: I don\u2019t know if you actually read my reply but 4 of my points had to do with your write-up and not \u201coffending\u201d your attitude/personality as you mentioned. You said that we didn\u2019t give you an explanation as to why we unlisted it. How could we? Right after I unlisted it, you made a public p&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "I\u2019m not really able to understand this dichotomy about public and private, for sure it\u2019s my fault. Anyway my friend wonderful land yours, cradle of civilization, I was there in november to run the marathon, again nothing personal but I will not change my opinion, simply we do not get along very well&hellip;", "@zinzloun: I don\u2019t know if you actually read my reply but 4 of my points had to do with your write-up and not \u201coffending\u201d your attitude/personality as you mentioned. You said that we didn\u2019t give you an explanation as to why we unlisted it. How could we? Right after I unlisted it, you made a public p&hellip;", "@zinzloun: I don\u2019t know if you actually read my reply but 4 of my points had to do with your write-up and not \u201coffending\u201d your attitude/personality as you mentioned. You said that we didn\u2019t give you an explanation as to why we unlisted it. How could we? Right after I unlisted it, you made a public p&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "Don\u2019t you understand that it\u2019s a bit weird to go public with this? If you don\u2019t like the feedback someone gives you in a PM you pm him back, now you are just creating stupid drama. Besides py was only commenting on your behaviour, if you take that personally, then that is by choice.", "@zinzloun: I don\u2019t know if you actually read my reply but 4 of my points had to do with your write-up and not \u201coffending\u201d your attitude/personality as you mentioned. You said that we didn\u2019t give you an explanation as to why we unlisted it. How could we? Right after I unlisted it, you made a public p&hellip;", "@zinzloun: I don\u2019t know if you actually read my reply but 4 of my points had to do with your write-up and not \u201coffending\u201d your attitude/personality as you mentioned. You said that we didn\u2019t give you an explanation as to why we unlisted it. How could we? Right after I unlisted it, you made a public p&hellip;", "@zinzloun: I don\u2019t know if you actually read my reply but 4 of my points had to do with your write-up and not \u201coffending\u201d your attitude/personality as you mentioned. You said that we didn\u2019t give you an explanation as to why we unlisted it. How could we? Right after I unlisted it, you made a public p&hellip;", "Sorry if I bore the community with this useless conversation, this will be my last for sure. I will answer you @_py point by point: 1 I don\u2019t really understand this double channel, private and public. I have not read anything about that in your policies. My post did not offend anyone, you decided t&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "Completely support @_py on this. @zinzloun, you have 3 days to accept the constructive criticism or suffer the fate of unlisting. 0x00sec is a quality forum, with quality content. Writers should strive to adhere to that. If people cannot accept constructive criticism, then they simply do not belon&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "Completely support @_py on this. @zinzloun, you have 3 days to accept the constructive criticism or suffer the fate of unlisting. 0x00sec is a quality forum, with quality content. Writers should strive to adhere to that. If people cannot accept constructive criticism, then they simply do not belon&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "So I unlisted @zinzloun\u2019s write-up but he decided to complain about it in public with a 2nd post instead of asking privately as to why that happened. According to your write-up, you are working for a company. Meaning, you are supposed to be mature enough to accept criticism either by your clients&hellip;", "", "", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "@Valentine yes, google \u201cInline Assembly\u201d for further info.", "@0x00pf Every symbol\u2019s string name can be found either in .dynstr or .strtab I believe. Your point about static binaries can be valid if the (s)strip command does strip those tables as well. I\u2019ll code a quick lil parser and check it out.", "@_py that will be cool. I\u2019ll love to see that parser\u2026", "@0x00pf Every symbol\u2019s string name can be found either in .dynstr or .strtab I believe. Your point about static binaries can be valid if the (s)strip command does strip those tables as well. I\u2019ll code a quick lil parser and check it out.", "@pry0cc All the classical stuff. Anti-debug techniques: auto-trace, auto-checksums, jump in the middle of instructions, crypters/packers, VMs,\u2026 @_py  You can do that with dynamically linked programs. With static ones you get most of that information actually gone (specially with sstrip). As there &hellip;", "You can reconstruct the symbol table with a parser if your ELF knowledge is decent enough in order to get around the strip protection.", "You can reconstruct the symbol table with a parser if your ELF knowledge is decent enough in order to get around the strip protection.", "@pry0cc: I\u2019m not a crypto guy. Can you be more descriptive about your intentions and thoughts?", "A PoC by @kowalski would be great. I\u2019m really interested in the technical aspect of that exploit.", "I nominate @_py for his article on symbol resolution and @oaktree for his article on Dynamic Loading of .so\u2019s After seeing STELF, I also nominate @Joe_Schmoe and  @pry0cc for this awesome piece of h4x0ry", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Endianness is a compression thing. You see, the application that connects you to wifi can predict what the password is supposed to be. You only have to type in the first 6 characters and the last one, and the program will use a PBKDF algorithm (PuBlic Key Derivation Finagler) to generate the charact&hellip;", "Yeah. I know. It\u2019s an endianess thing. @_py please explain it to this guy\u2026 Sigh.", "A PoC by @kowalski would be great. I\u2019m really interested in the technical aspect of that exploit.", "A PoC by @kowalski would be great. I\u2019m really interested in the technical aspect of that exploit.", "A PoC by @kowalski would be great. I\u2019m really interested in the technical aspect of that exploit.", "A PoC by @kowalski would be great. I\u2019m really interested in the technical aspect of that exploit.", "Earlier we were discussing in the IRC how kowalski found a really good fast method to crack WPA2. So without further ado! We\u2019ll jump right in. Step 1: Turn on WIFi and scan for networks.You need to make sure the network you select is labeled \u201cWPA2-PSK\u201d, this method won\u2019t work if it is WEP or Open&hellip;", "I wish I could take the credit. But I\u2019m not a complete dick. It was 100% @_py\u2019s suggestion for this write-up and the name.  I just, you know, did the work", "I wish I could take the credit. But I\u2019m not a complete dick. It was 100% @_py\u2019s suggestion for this write-up and the name.  I just, you know, did the work", "Continuing the discussion from Remote Exploit. Shellcode without Sockets: No this is not a log post on how to hack remote services. By chance I found an interesting paper that presents an interesting technique to hack your way into a remote server without having a local binary. This is the link h&hellip;", "A few hundred for now:", "Dynamic Loading of Shared Objects at RuntimeI\u2019ve been doing a lot of tutorials about dynamic stuff. It\u2019s because we trees rustle whenever the wind blows. Anyway, this post comes as an addition to @_py\u2019s Linux Internals - The Art Of Symbol Resolution. This whole thing started when I decided that t&hellip;", "Dynamic Loading of Shared Objects at RuntimeI\u2019ve been doing a lot of tutorials about dynamic stuff. It\u2019s because we trees rustle whenever the wind blows. Anyway, this post comes as an addition to @_py\u2019s Linux Internals - The Art Of Symbol Resolution. This whole thing started when I decided that t&hellip;", "Picture the moment. It\u2019s 2057, technology has barely progressed, and the earth is under harsh censorship and surveillance. Humanity has reverted to the Hitler days. Don\u2019t get depressed! Let\u2019s build a mesh net! In your manic mindset, you quickly throw together your portable phone re-charger, your R&hellip;", "@oaktree: You are right. This is just an implementation. Surely you can create your own, but you have to be hardcore as you can see. I mean, just look at the detail and precision. This is no game. Just imagine this: Creating a malware with your own compiler and linker. Scary man.", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "@oaktree: You are right. This is just an implementation. Surely you can create your own, but you have to be hardcore as you can see. I mean, just look at the detail and precision. This is no game. Just imagine this: Creating a malware with your own compiler and linker. Scary man.", "@oaktree: You are right. This is just an implementation. Surely you can create your own, but you have to be hardcore as you can see. I mean, just look at the detail and precision. This is no game. Just imagine this: Creating a malware with your own compiler and linker. Scary man.", "Wow. A lot more goes into this than I\u2019d thought. I guess I\u2019ve been taking it all for granted\u2026 Sooo the assembly stuff is just some standard, right? Because there are probably other ways to do symbol resolution if you wanted to and you wrote your own compiler. Right?", "@oaktree: You are right. This is just an implementation. Surely you can create your own, but you have to be hardcore as you can see. I mean, just look at the detail and precision. This is no game. Just imagine this: Creating a malware with your own compiler and linker. Scary man.", "Wow. A lot more goes into this than I\u2019d thought. I guess I\u2019ve been taking it all for granted\u2026 Sooo the assembly stuff is just some standard, right? Because there are probably other ways to do symbol resolution if you wanted to and you wrote your own compiler. Right?", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Hello peeps! Been a while. I hope you\u2019re all doing great. This write-up was supposed to be up way sooner to be honest. Recently, @oaktree coded an IRC bot with dynamic linking features which motivated me to finally take the initiative and finish this god damn paper. So without further ado, @oaktree &hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Perhaps I was lucky? Where that person had left just as I connected? Or perhaps the access point would disconnect the user in favour for the new user? Hm who knows. Does anybody know the rules around what happens when a device connects to an access point with the mac address of an exisiting device? &hellip;", "@pry0cc: It is possible. The way you described it seemed like you and the victim were sharing the same MAC address while BOTH connected, which will fail. @fraq\u2019s description sounds feasible because the user will be kicked off the network.", "@pry0cc: It is possible. The way you described it seemed like you and the victim were sharing the same MAC address while BOTH connected, which will fail. @fraq\u2019s description sounds feasible because the user will be kicked off the network.", "This can\u2019t be real. The legend himself @Joe_Schmoe made a write-up? Dayum!", "A few hundred for now:", "A few hundred for now:", "Welcome back, 0x00sec community, to my series on sorting. I introduced in my last article the concept of complexity. When I say complexity, I\u2019m talking about time complexity. What Is Time Complexity?You can view the Wikipedia article here, but I\u2019ll be speaking from my heart and soul. Time compl&hellip;", "This can\u2019t be real. The legend himself @Joe_Schmoe made a write-up? Dayum!", "This can\u2019t be real. The legend himself @Joe_Schmoe made a write-up? Dayum!", "This can\u2019t be real. The legend himself @Joe_Schmoe made a write-up? Dayum!", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "You must learn to forward before you can reverse.", "Thanks  folks for the tremendous responses and really appreciated   Can anyone please sort out what steps to go in order to have the best approach toward the reversing,malware analysis,exploit etc? I mean the prerequisites\u2026", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "Documentation allows you to think on your own and learn how to design better software. It makes it easier to take note of all the tools you have. Tutorials usually show you one way to do something, and that works at first, but proficiency comes from immersing yourself in the capabilities of an envi&hellip;", "What @oaktree said is absolutely right aswell. Learning from tutorials doesn\u2019t teach you a lot. The best way to learn things is to set challenges and use documentation to accomplish your goals. For example when I learned Python: I had a challenge for myself to make a program that would take as many&hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "While @_py is right for the most part, he forgot to say an important thing: if you don\u2019t understand the source, leave it. Don\u2019t waste time reading something that doesn\u2019t make sense to you! However, that is NOT the same as giving up! What I mean by \u201cleave it\u201d is to search for something that explains&hellip;", "I fully concur with @_py and @TheDoctor. Just read as much as you can and at some point you will start knowing things, and you will find, at the same time, the path that better suits you\u2026 In that trip you may learn about stuff even more interesting that infosec", "I don\u2019t know what you mean by \u201cmessing\u201d, but it all comes down to your IP (or the MAC in a LAN). Oaktree or oaktits as a hostname won\u2019t really mess with anything.", "I fully concur with @_py and @TheDoctor. Just read as much as you can and at some point you will start knowing things, and you will find, at the same time, the path that better suits you\u2026 In that trip you may learn about stuff even more interesting that infosec", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "That\u2019s exactly my answer when I get asked how I learn! When I started to learn programming, I read each and every Python tutorial I could find out there . Everytime when I haven\u2019t understood something, I just held it in mind and later I stumbled upon it in another guide again, which covered it more&hellip;", "That\u2019s exactly my answer when I get asked how I learn! When I started to learn programming, I read each and every Python tutorial I could find out there . Everytime when I haven\u2019t understood something, I just held it in mind and later I stumbled upon it in another guide again, which covered it more&hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "I hate to be the one telling you the truth but since not many will dare to do so, I will. Your approach and mindset will only cause the reverse of what you are expecting. You can\u2019t expect to learn something you are interested in based on experiences of others. Why is that? Simple. Every person is d&hellip;", "@Valkyr: Using a Teensy to Install Stuff in a Few Seconds", "thanks sir ! I didnt seem to have read this one", "@Valkyr: Using a Teensy to Install Stuff in a Few Seconds", "@Valkyr: Using a Teensy to Install Stuff in a Few Seconds", "A few hundred for now:", "A few hundred for now:", "Hello 0x00\u2019ers. I have made some wallpapers with the 0x00sec logos. I hope you enjoy them. I have attached a compressed tar archive with the full album. (MEGA link, The files are huge because I didn\u2019t compress them.) Enjoy   https://mega.nz/#!7BRQBTyZ!AjsIxERCVe0_l0Ub2jl49vSZ8HViwKtJi2idTuGKESo \u2013F&hellip;", "A few hundred for now:", "A few hundred for now:", "A few hundred for now:", "@Joe_Schmoe: He just deserves it.", "@Joe_Schmoe: He just deserves it.", "I agree on @Joe_Schmoe. Not because he\u2019s l33t or anything, but simply because of his badass motherfuckery. -Phoenix750", "@Joe_Schmoe: He just deserves it.", "@Joe_Schmoe: He just deserves it.", "@Joe_Schmoe: He just deserves it.", "@Joe_Schmoe: He just deserves it.", "Hi @zadyree, Thanks for passing by our site and for that great trick. I was really amaze when I read your code in shell-storm!. Actually it took me a while to realise what it was doing  Haven\u2019t thought about TOR. That is a very good point.", "Hi there. When I wrote this trick I had in mind it was not theorically valid, which led me not to propose an implementation for Metasploit for example. Hence, as an exploit coding fan, I suggest to rather use this shellcode for challenges and ROP your way for concrete and accurate socket-reuse explo&hellip;", "@pry0cc: The link is indeed not aimed at a scenario like the one @0x00pf presented. I linked it to you so you can get a general idea on how some of the modern exploit mitigations can be bypassed. The funny thing is that IoT/embedded devices barely manage to implement any of the aforementioned mitiga&hellip;", "Well, you need to have a local version of the program to exploit. I do not think you can write a exploit against a service without having access to the service itself and some details of the system. You have to get the program somehow (using some other flaw or getting it from other server with lowe&hellip;", "@pry0cc: The link is indeed not aimed at a scenario like the one @0x00pf presented. I linked it to you so you can get a general idea on how some of the modern exploit mitigations can be bypassed. The funny thing is that IoT/embedded devices barely manage to implement any of the aforementioned mitiga&hellip;", "@pry0cc: The link is indeed not aimed at a scenario like the one @0x00pf presented. I linked it to you so you can get a general idea on how some of the modern exploit mitigations can be bypassed. The funny thing is that IoT/embedded devices barely manage to implement any of the aforementioned mitiga&hellip;", "As promised, here is the shellcode tutorial once again RequirementsAlright so this isn\u2019t going to be msfvenom tutorial. (shellcodes are payloads). This tutorial will focus on writing shellcodes using Assembly. Knowledge of C and Assembly is highly recommend. Also knowing how the stack works is a&hellip;", "@pry0cc: The link is indeed not aimed at a scenario like the one @0x00pf presented. I linked it to you so you can get a general idea on how some of the modern exploit mitigations can be bypassed. The funny thing is that IoT/embedded devices barely manage to implement any of the aforementioned mitiga&hellip;", "Thank you @py! This is a very good read. I do have some questions though. system = 0x8048380exit = 0x80483a0system_arg = 0x80485b5 He obtains these addresses by doing a hex dump of the binary. The only way he could do this would be if he already had shell access? This would never work for a rem&hellip;", "@pry0cc: Enjoy.", "@pry0cc: Enjoy.", "Kicking 2017 off with a bang. Mamma mia!", "@pry0cc: Enjoy.", "@pry0cc: Enjoy.", "Thanks @_py and @pry0cc. Glad to heard you liked it. When facing ASLR and stack protections we have to dive into ROP, Return to Libc and other techniques more advanced. I believe it is difficult to follow that without knowing the basics\u2026", "Dude. Bruh. :is an understatement. This is really awesome. The connection reuse thing is such a dope concept. So. In this example, we deactivated ASLR, and disabled stack canaries. Stack based buffer overflows are all over the web. What can we do today? What do modern day exploits, well, exploit&hellip;", "Kicking 2017 off with a bang. Mamma mia!", "Kicking 2017 off with a bang. Mamma mia!", "Kicking 2017 off with a bang. Mamma mia!", "Kicking 2017 off with a bang. Mamma mia!", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "In this paper I will present an elegant technique (it\u2019s my opinion, indeed) to get shell access to a vulnerable remote machine. It is not my own technique but I found it very interesting. The focus of this paper is on this technique and not in the way to exploit the vulnerability. Setting your envi&hellip;", "Right\u2026 % means select the whole text !cmd means pipe the selected text into the command cmd and substitute that text with the output of the command The command can be anything, including pipes\u2026 %!gzip|base64", "IntroductionLinux has been around for 25 years now. I started using it as my main OS around 2 years back (was quite young then and n00bish). I did not care to learn much about it, I just used it to do my homework and some personal stuff. Not long ago I decided to switch to ArchLinux from Ubuntu Mat&hellip;", "I thought apt-get took care of \u201cdependency hell\u201d automatically? Atleast it does that on my ParrotSec distro. -Phoenix750", "@Evalion: As @pry0cc correctly pointed it out, broken dependencies, period. Can\u2019t get any worse than that.", "How unstable was it @_py (as in give examples)? -Phoenix750", "Heh. Arch is even more stable. HELL. GENTOO @worz", "3 hours of debugging is nothing compared to the 9 of mine. I might had actually looked up the 3rd page of the google results for a solution. If you wanna play around with kali\u2019s tools, just keep it on a live USB. The most unstable piece of crap I\u2019ve ever dealt with.", "3 hours of debugging is nothing compared to the 9 of mine. I might had actually looked up the 3rd page of the google results for a solution. If you wanna play around with kali\u2019s tools, just keep it on a live USB. The most unstable piece of crap I\u2019ve ever dealt with.", "3 hours of debugging is nothing compared to the 9 of mine. I might had actually looked up the 3rd page of the google results for a solution. If you wanna play around with kali\u2019s tools, just keep it on a live USB. The most unstable piece of crap I\u2019ve ever dealt with.", "See, if you just build from source and leave it in its own directory, you won\u2019t screw anything up!", "3 hours of debugging is nothing compared to the 9 of mine. I might had actually looked up the 3rd page of the google results for a solution. If you wanna play around with kali\u2019s tools, just keep it on a live USB. The most unstable piece of crap I\u2019ve ever dealt with.", "@worz I agree, that is why I don\u2019t recommend it. This article was mainly made to inform the community about the terrible effect of this tool. Upgrade your system after having add Kali repo can be the worse mistake of your life", "Fortunately, I hadn\u2019t already configure the whole system", "3 hours of debugging is nothing compared to the 9 of mine. I might had actually looked up the 3rd page of the google results for a solution. If you wanna play around with kali\u2019s tools, just keep it on a live USB. The most unstable piece of crap I\u2019ve ever dealt with.", "3 hours of debugging is nothing compared to the 9 of mine. I might had actually looked up the 3rd page of the google results for a solution. If you wanna play around with kali\u2019s tools, just keep it on a live USB. The most unstable piece of crap I\u2019ve ever dealt with.", "Its a dangerous python script, if not used correctly, can totally destroy your system. ask @_py tbh, its pretty effective as you get everything together and categorised accordingly. +1 for the OP.", "Good day all, Seeing as this is my first real post here, and I\u2019m fairly certain a few of you know me, but the large majority don\u2019t, I\u2019ll introduce myself a little, and then continue from there. Names Mike, I go by L0k1 online, which is what most of you will come to know me as. I\u2019ve been involved i&hellip;", "Yesterday, I joined the 0x00sec IRC channel and, as many other times, @dtm come up with an interesting concept\u2026 and I had to try. The idea was pretty challenging and I have not completely come up with a full implementation but I manage to get a minimal Proof of Concept program to illustrate the conc&hellip;", "Hello 0x00sec! Welcome to the maiden article of my series on Data Structures. Today, I\u2019ll be talking about Linked Lists. What is a Linked List? Since, you can all read Wikipedia, I don\u2019t really have to go into much detail. But, a Linked List is a datastructure with the following characteristics: &hellip;", "Welcome to this new series intended to explain the guts of all those hacker\u2019s tools out there you use or want to use\u2026 Basically, we are going to explain you how does they work and how do you can build your own\u2026 Keep reading if you do not want to be a Skid ;). We will start the series with Proxychai&hellip;", "Wow! That\u2019s very kind! We have Bitcoin payments at the present, and will need to re-organise PayPal as well as I\u2019ve caught word it isn\u2019t working. I pay personally for the VPS which is $20 per month. 20x12 = $240. Donations are pretty slim although we\u2019ve had some very kind people donate! The current&hellip;", "Ok here is my setup! I run ArchLinux with the i3 tiling window manager. This is configured by myself using a very heavily modified version of OxHak\u2019s config. I am using conky for the top bar. My anonymity setup is fairly simple. I have a collection of VPN\u2019s and I connect to a different one every da&hellip;", "Hello, my loyal 0x00\u2019ers! You are reading my 4th Installment of Paranoia and a Terminal! Today we are going to discuss how to set up a Tor Service; and how to access it. Tor services are a really good addition to your toolkit as a Paranoid hacker. Tor can be used as an Anonymity tool, but providing&hellip;", "Hi, I hope this doesn\u2019t count as spam already, if so, please contact me, admins. After I found the NSA Tools on GitHub, I looked around a bit further. I finally found an awesome collection of Computer Science course videos, from really high-level universities such as MIT. There is an endless arra&hellip;", "Nice update @oaktree. My request wasn\u2019t personal. I was hoping that others will benefit from a simple visualization. When you can draw a concept, you understand it much better. Moreover, the whole meat of free() seems to rely on the unlink() macro. Just throwing ideas at you for future posts in cas&hellip;", "Are you sure the drivers are installed correctly? I did a 2ms google research and I found this thread http://unix.stackexchange.com/questions/306836/airmon-ng-ls-cannot-access-sys-class-ieee80211-no-such-file-or-directory. It might help.", "Spoderman pls. Well he is right too, but be sure to check if your wifi chip is compatible too @spylegion. -Phoenix750", "Are you sure the drivers are installed correctly? I did a 2ms google research and I found this thread http://unix.stackexchange.com/questions/306836/airmon-ng-ls-cannot-access-sys-class-ieee80211-no-such-file-or-directory. It might help.", "Nice update @oaktree. My request wasn\u2019t personal. I was hoping that others will benefit from a simple visualization. When you can draw a concept, you understand it much better. Moreover, the whole meat of free() seems to rely on the unlink() macro. Just throwing ideas at you for future posts in cas&hellip;", "Nice update @oaktree. My request wasn\u2019t personal. I was hoping that others will benefit from a simple visualization. When you can draw a concept, you understand it much better. Moreover, the whole meat of free() seems to rely on the unlink() macro. Just throwing ideas at you for future posts in cas&hellip;", "Nice update @oaktree. My request wasn\u2019t personal. I was hoping that others will benefit from a simple visualization. When you can draw a concept, you understand it much better. Moreover, the whole meat of free() seems to rely on the unlink() macro. Just throwing ideas at you for future posts in cas&hellip;", "It\u2019s been a while since the last edition (I do say this every time). Behold, a seventh article! Allow me to restate the prerequisites: Proficiency in CUnderstanding of the Stack vs HeapFamiliarity with this article\u2019s predecessors (all of them).Disclaimer: what follows are my findings, and my &hellip;", "I can add a doodle. Give me a few hours.", "It\u2019s been a while since the last edition (I do say this every time). Behold, a seventh article! Allow me to restate the prerequisites: Proficiency in CUnderstanding of the Stack vs HeapFamiliarity with this article\u2019s predecessors (all of them).Disclaimer: what follows are my findings, and my &hellip;", "This is the most crucial info in this paper and I think a visual representation or a diagram is a must for this concept, plus, the code would be much more understood imo. On the other hand, your intention might was code illustration and not in-depth explanation of the inner workings of the algo. I&hellip;", "Yup. Free is next up.", "Sweet stuff. I was revising a lil\u2019 about heaps so I read through your series once again but this time I used google as well. I discovered the so called fastbins and binlists which seemed interesting to me. Apparently, free()&#39;s algo acts differently according to the size of the malloc\u2019d chunk. There&hellip;", "Sweet stuff. I was revising a lil\u2019 about heaps so I read through your series once again but this time I used google as well. I discovered the so called fastbins and binlists which seemed interesting to me. Apparently, free()&#39;s algo acts differently according to the size of the malloc\u2019d chunk. There&hellip;", "0x00sec has used Cloudflare for a while; mainly for security reasons. Cloudflare is great. And it\u2019s secure as well. But one thing is a little annoying. Captchas. I use Tor on a daily basis, and the two biggest problems with Tor are Exit Nodes and Captcha\u2019s, Exit nodes have been notorious for runnin&hellip;", "Prior researches on google could have answered your question\u2026 I think that remedial courses about binding shell should help you to fully understand this topic. Lastly, avoid using tools / scripts that you don\u2019t really understand \u2026 You don\u2019t want to be a skid right ? I\u2019m sorry if it sounds harsh but&hellip;", "Thanks mate! I\u2019m glad to contribute to this nice community!", "Mann! The minute I saw this I just had to scroll down and like this first. I must say; you put so much effort into these articles, and it\u2019s really nice. You\u2019re such a good contributor pico; I would love to say a big thank you from me, and I\u2019m sure the whole community would also agree. You should w&hellip;", "Let\u2019s go on with our special ASM/C programming course. At this point, we roughly know how a computer works, its main components, what is machine code, what is assembly code and how to compile simple programs for a few architectures. In this part we are going to write our first shellcode. Yes, we ar&hellip;", "@Evalion: I know, I\u2019m glad someone saw the irony.", "@Evalion: I know, I\u2019m glad someone saw the irony.", "Tells person to not follow someone else\u2019s footsteps, later on tells them to learn memory or else they aren\u2019t dank enough. gg @_py -Phoenix750", "Tells person to not follow someone else\u2019s footsteps, later on tells them to learn memory or else they aren\u2019t dank enough. gg @_py -Phoenix750", "Hello, my 0x00\u2019ers! You may have noticed @0x00pf\u2019s awesome reverse engineering content, and you may have noticed he has posted raw binaries (without source), now, of course, it\u2019s reverse engineering, the challenge is about not knowing the source. But how do you and I know that @0x00pf is not a mad &hellip;", "@Nitrax, @Valentine:  Trying to push someone to a specific direction based on your personal experience is not wise imo. There is no \u201cright\u201d programming language for a starter. @appie35, your question has no correct answer. In the end, it\u2019s all about which language \u201cclicks\u201d to you. You can be progra&hellip;", "Pick a language (good options are C, C++, C#, Java, JS, Ruby, Python, Haskell, Go, Rust, Crystal, Erlang \u2013 ya got me: I\u2019m listing all of them). There is no one language that will allow you to master programming; rather, to master programming, you must transcend language itself. However, mastering &hellip;", "Pick a language (good options are C, C++, C#, Java, JS, Ruby, Python, Haskell, Go, Rust, Crystal, Erlang \u2013 ya got me: I\u2019m listing all of them). There is no one language that will allow you to master programming; rather, to master programming, you must transcend language itself. However, mastering &hellip;", "@Nitrax, @Valentine:  Trying to push someone to a specific direction based on your personal experience is not wise imo. There is no \u201cright\u201d programming language for a starter. @appie35, your question has no correct answer. In the end, it\u2019s all about which language \u201cclicks\u201d to you. You can be progra&hellip;", "Your position makes sense. However, I started from scratch as a self-learner without any knowledge in programmation and It was very rewarding. I maintain that mastering C affords more flexibility and a better understanding of the programming world . Different methods ;). That is why computer scienc&hellip;", "@Nitrax, @Valentine:  Trying to push someone to a specific direction based on your personal experience is not wise imo. There is no \u201cright\u201d programming language for a starter. @appie35, your question has no correct answer. In the end, it\u2019s all about which language \u201cclicks\u201d to you. You can be progra&hellip;", "@Nitrax, @Valentine:  Trying to push someone to a specific direction based on your personal experience is not wise imo. There is no \u201cright\u201d programming language for a starter. @appie35, your question has no correct answer. In the end, it\u2019s all about which language \u201cclicks\u201d to you. You can be progra&hellip;", "@Nitrax, @Valentine:  Trying to push someone to a specific direction based on your personal experience is not wise imo. There is no \u201cright\u201d programming language for a starter. @appie35, your question has no correct answer. In the end, it\u2019s all about which language \u201cclicks\u201d to you. You can be progra&hellip;", "Sentdex has by far one of the best playlists on python (beginner - intermediate - even Machine Learning).  I wouldn\u2019t recommend codecademy unless you have never heard of programming before. Enjoy\u2026", "yeah sentdex i followd him for a while  never did something with it mayby time to take this serious", "Sentdex has by far one of the best playlists on python (beginner - intermediate - even Machine Learning).  I wouldn\u2019t recommend codecademy unless you have never heard of programming before. Enjoy\u2026", "Sentdex has by far one of the best playlists on python (beginner - intermediate - even Machine Learning).  I wouldn\u2019t recommend codecademy unless you have never heard of programming before. Enjoy\u2026", "Continuing the discussion from Challenge: Brute and Smart: Did you solved the Brute and Smart challenge (Challenge: Brute and Smart)? In case you did and you wonder if your solution was right or you didn\u2019t solve it and you wonder how to do it\u2026 here is my write up. The program asked for a 6 digit l&hellip;", "With the announcement of pupper and a few other things over these last few months, our collaborative effort is off to a nice start. Many of us regulars have been working together on a handful of projects. We\u2019re now offering a place to put all those projects! In order to draw in more of you, the Adm&hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "Hello my 0x00sec - Padawans! In this instalment of Paranoia and a Terminal, I am showing you how to create + use (my) AWESOME tmuxinator setup. Person: \u201cErrrr. Whats that?\u201d Me: \u201cIt\u2019s a sort of automation package for tmux\u201d Person: \u201cCoool!.. So. Whats tmux?\u201d Me: \u201cTmux is a Terminal Multiplexer, so&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "Continuing the discussion from [KEYGENME - EASY] Cracking Your First Program: As requested by @pry0cc, this is a crash course on reverse engineering. Before reading this, you should try to solve @dtm challenge: If you didn\u2019t manage or you want to see somebody else solution keep reading. Our Tar&hellip;", "I\u2019m referring to helloworld in that article you linked me. Sorry. Took a little more looking  found it! Thanks. I was expecting a string or an array of sorts of chars.", "Yes, the characters are looking at you straight in the eyes. cmp al, 0x74 ; \u2018t\u2019", "That article is mostly good. although there appears to be a lot of handwaving on how he gets the password? He says that the disassembly of the function reveals what characters are required, where does it say the characters?", "It\u2019s radare2 and it\u2019s an open-source RE framework. There is plenty of documentation around it and it\u2019s on the rise. Quite of a pain in the ass to master it though. Have a look at this link in case you are interested in getting started with it: https://blog.techorganic.com/2016/03/08/radare-2-in-0x1&hellip;", "Sorry about that. If @dtm is OK I can publish a more detailed explanation. I mean, maybe he wants to write such a paper himself. As @_py mentioned below radare2 is a reverse engineering tool\u2026 it automates a lot of things and, in general, simplifies the whole process.", "It\u2019s radare2 and it\u2019s an open-source RE framework. There is plenty of documentation around it and it\u2019s on the rise. Quite of a pain in the ass to master it though. Have a look at this link in case you are interested in getting started with it: https://blog.techorganic.com/2016/03/08/radare-2-in-0x1&hellip;", "@dtm, I want to believe that you were too tired while typing that comment.", "@dtm, I want to believe that you were too tired while typing that comment.", "You are bringing back a lot of childhood memories with that pic. (No, I wasn\u2019t reversing games. I\u2019m talking about Pinball.)", "Ahhahaaa this comment made me die XD", "You are bringing back a lot of childhood memories with that pic. (No, I wasn\u2019t reversing games. I\u2019m talking about Pinball.)", "Hi fellas, Today I will show you how to bypass OCR based CAPTCHA. The first thing that you have to keep in mind is that every CAPTCHAs are different and require an adapted image processing. For the sake of this article, I selected two distinct types of CAPTCHA, each of them needing a specific appro&hellip;", "Yee boii, I had that nostalgic moment too. RIP WinXP, my old friend\u2026", "You are bringing back a lot of childhood memories with that pic. (No, I wasn\u2019t reversing games. I\u2019m talking about Pinball.)", "Indeed it is. Underrated tool tarnished by skids.", "Is this the so called cheat engine?", "Alright so, my initial thought was straight to GDB, but after seeing the \u201cantidebug\u201d tag and combined with the recent ptrace post, I thought that there\u2019d be definitely a call to ptrace to stop the executable from being traced. Which was indeed the case since the output of strace was:  [image]Thu&hellip;", "Not really. Your solution is perfectly fine. I tried to make something extra happen for you guys but, looking to the solutions, it obvious requires some more work on my side\u2026 Maybe in the next one Regarding the antidebug\u2026 @dtm solution works fine. Other option is: Change the _pt function to imme&hellip;", "Here\u2019s how you bypass the anti-debugging: The cdg function contains the pt function, prints that failure message and then exits the program IIRC. To get rid of this, simply NOP fill the function call to the cdg function in the st1 function, i.e., replace the five bytes of the call with 0x90. [ima&hellip;", "Not really. Your solution is perfectly fine. I tried to make something extra happen for you guys but, looking to the solutions, it obvious requires some more work on my side\u2026 Maybe in the next one Regarding the antidebug\u2026 @dtm solution works fine. Other option is: Change the _pt function to imme&hellip;", "@0x00pf: Yes, I used the -S flag if that\u2019s what you are referring to but all I got was the disassembly with some ROT13 encrypted text in between some sections which led me to the same decryption result as the strings command. I didn\u2019t decrypt it all because it looked familiar as I said but I might h&hellip;", "Here\u2019s how you bypass the anti-debugging: The cdg function contains the pt function, prints that failure message and then exits the program IIRC. To get rid of this, simply NOP fill the function call to the cdg function in the st1 function, i.e., replace the five bytes of the call with 0x90. [ima&hellip;", "@0x00pf: Yes, I used the -S flag if that\u2019s what you are referring to but all I got was the disassembly with some ROT13 encrypted text in between some sections which led me to the same decryption result as the strings command. I didn\u2019t decrypt it all because it looked familiar as I said but I might h&hellip;", "Well done @_py!.. You went through most of the hidden features in this crackme! I see you used objdump most of the time. Did you try the flags suggested in the hints after running the program at least once? I\u2019ll post the sources and some explanations probably next week Thanks @_py and @dtm for tr&hellip;", "Alright so, my initial thought was straight to GDB, but after seeing the \u201cantidebug\u201d tag and combined with the recent ptrace post, I thought that there\u2019d be definitely a call to ptrace to stop the executable from being traced. Which was indeed the case since the output of strace was:  [image]Thu&hellip;", "Alright so, my initial thought was straight to GDB, but after seeing the \u201cantidebug\u201d tag and combined with the recent ptrace post, I thought that there\u2019d be definitely a call to ptrace to stop the executable from being traced. Which was indeed the case since the output of strace was:  [image]Thu&hellip;", "Alright so, my initial thought was straight to GDB, but after seeing the \u201cantidebug\u201d tag and combined with the recent ptrace post, I thought that there\u2019d be definitely a call to ptrace to stop the executable from being traced. Which was indeed the case since the output of strace was:  [image]Thu&hellip;", "@0x00pf: yep, solved it. I will post my solution soon(currently in class).", "@0x00pf: yep, solved it. I will post my solution soon(currently in class).", "@dtm I should have foreseen that you could make it with a bit of static analysis\u2026 I may try to made a few changes to make it a bit more interesting\u2026 it\u2019s time to move to another obfuscation thecnique  @_py Good catch, you solved the crypto part. Did you try to go further with those hints?.. hope &hellip;", "Long time since I do not post a challenge and, once again, inspired by @TheDoctor  I come up with something for you to have some fun. This is not expected to be easy\u2026 but you never know, I may have overlooked something obvious\u2026 Also it is something new (at least for me), so let me know if you expe&hellip;", "[meme]", "Hey mates! Maybe some of the elder members remember my series about C# CrackMe Challenges. After a little break where I focussed on other stuff I\u2019m now back with an introduction to MSIL patching. Before you start with this post I recommend you to have a look at my other parts first . They teach som&hellip;", "It\u2019s been a while since the last edition (I feel like I say this every time). What you\u2019re looking at is the sixth installment of my [C] Dynamic Memory Series. I\u2019ll start this paper by enumerating some prerequisites: Proficiency in CUnderstanding of the Stack vs HeapUnderstanding of sbrk and br&hellip;", "Yes, you\u2019re right. Fixing it.", "If you had read Part II of this series you may have missed a couple of details. Consider this post as a short addendum to Part II including those details. The first you may have noted is that there was no ARM or MIPS code in there. Actually, the paper was already quite long and, to be honest, I tho&hellip;", "Good catch @_py . I would like to say that it was in purpose to see if people was following the paper\u2026 but it was just a mistake", "Good catch @_py . I would like to say that it was in purpose to see if people was following the paper\u2026 but it was just a mistake", "I might be a little late on that but I was reading through it again and I noticed that sentence. I think you mean string table instead of symbol table(?) Thus the \u201c&amp;shdr[elf_hdr-&gt;e_shstrndx];\u201d  and \u201cshdr[i].sh_name\u201d parts of your code which point to the string table section and the index into the s&hellip;", "I might be a little late on that but I was reading through it again and I noticed that sentence. I think you mean string table instead of symbol table(?) Thus the \u201c&amp;shdr[elf_hdr-&gt;e_shstrndx];\u201d  and \u201cshdr[i].sh_name\u201d parts of your code which point to the string table section and the index into the s&hellip;", "I might be a little late on that but I was reading through it again and I noticed that sentence. I think you mean string table instead of symbol table(?) Thus the \u201c&amp;shdr[elf_hdr-&gt;e_shstrndx];\u201d  and \u201cshdr[i].sh_name\u201d parts of your code which point to the string table section and the index into the s&hellip;", "Great post @0x00pf! Just an fyi/clarification: Object code is also known as relocatable code. The reason for that is because many functions / variables will probably not be known to your executable until runtime (i.e printf() which is defined in libc, which is a shared object). Thus, the object co&hellip;", "Great post @0x00pf! Just an fyi/clarification: Object code is also known as relocatable code. The reason for that is because many functions / variables will probably not be known to your executable until runtime (i.e printf() which is defined in libc, which is a shared object). Thus, the object co&hellip;", "Great post @0x00pf! Just an fyi/clarification: Object code is also known as relocatable code. The reason for that is because many functions / variables will probably not be known to your executable until runtime (i.e printf() which is defined in libc, which is a shared object). Thus, the object co&hellip;", "Glad to see you have come back to this humble course. Hope you are eager to get a lot more stuff to digest. Grab some coffee and relax. I have been claiming that this course is going to be different to all those that you find over the Internet. Right now, I should introduce a whole bunch of boring &hellip;", "Continuing the discussion from Plug In To Win - DIY Bad USB [Part 3/3]: You may have read the awesome \u201cPlug In To Win\u201d series from @TheDoctor. It make me recall some experiments I did time ago on HID injection. After some private chat, we agreed to release this extra post to present one more HW alt&hellip;", "Hey Mates! This time I\u2019ll tell you how you can build your own Bad USB for about 10$. It\u2019s pretty easy, but requires a compatible USB Stick. RequirementsYou\u2019ll need an USB Stick with the Phison 2303 (2251-03) microcontroller installed. Sadly you can\u2019t just ask in your favourite hardware shop for &hellip;", "Hey Mates! As promised I share a Powershell Keylogger with you, which can be used together with our Bad USB to be installed within just some seconds of physical access . This keylogger is not completly written by me! I used several ones on the internet and modified them to fit my needs . The origi&hellip;", "Hey Mates! This time I have a project of mine to share with you about the USB Rubber Ducky. Maybe some of you already heard of it, e.g. @Occupytheweb wrote an article about its use in Mr. Robot. At the end of this small series you should be able to write your own Scripts for hacking the box just w&hellip;", "@oaktree, IMO, the best way to find it out is through the legend GDB itself. Here\u2019s a sample of ASM code if you want to play around with it. Nothing crazy, pretty self-explanatory, but it will help you visualise the whole upwards/downwards trick: global _startsection .text_start:mov eax, 0&hellip;", "@oaktree yes, padding is indeed applied but in this case it\u2019s more important which variable gets stored below/above the another. If the buffer gets stored below the \u201ckey\u201d variable, then it can indeed overflow and affect key\u2019s value, otherwise the affected variables would be instruction pointers, fra&hellip;", "@oaktree, IMO, the best way to find it out is through the legend GDB itself. Here\u2019s a sample of ASM code if you want to play around with it. Nothing crazy, pretty self-explanatory, but it will help you visualise the whole upwards/downwards trick: global _startsection .text_start:mov eax, 0&hellip;", "@oaktree, IMO, the best way to find it out is through the legend GDB itself. Here\u2019s a sample of ASM code if you want to play around with it. Nothing crazy, pretty self-explanatory, but it will help you visualise the whole upwards/downwards trick: global _startsection .text_start:mov eax, 0&hellip;", "You\u2019d think, visually, that the stack would grow upwards\u2026 Is this a universal thing or arch-dependent?", "@oaktree yes, padding is indeed applied but in this case it\u2019s more important which variable gets stored below/above the another. If the buffer gets stored below the \u201ckey\u201d variable, then it can indeed overflow and affect key\u2019s value, otherwise the affected variables would be instruction pointers, fra&hellip;", "@oaktree yes, padding is indeed applied but in this case it\u2019s more important which variable gets stored below/above the another. If the buffer gets stored below the \u201ckey\u201d variable, then it can indeed overflow and affect key\u2019s value, otherwise the affected variables would be instruction pointers, fra&hellip;", "@_py I bet that article you linked me (here) applies to this\u2026 There is likely padding between the variables in memory.", "Sure, compiler optimization plays a big role but I\u2019ve messed with these kind of buffer overflows and I was unable to change the value of a certain variable unless the buffer was declared in a specific way/order. Just an fyi to those who aren\u2019t getting the expected result.", "Sure, compiler optimization plays a big role but I\u2019ve messed with these kind of buffer overflows and I was unable to change the value of a certain variable unless the buffer was declared in a specific way/order. Just an fyi to those who aren\u2019t getting the expected result.", "@dtm pointed it out. Apparently, gcc sorts local variables in the stack according to its type and not the declaration order. Looks like int goes first and actually the arrays goes last. It does not matter where do you put the int, it will always will go first, at least, right now with gcc.", "Sure, compiler optimization plays a big role but I\u2019ve messed with these kind of buffer overflows and I was unable to change the value of a certain variable unless the buffer was declared in a specific way/order. Just an fyi to those who aren\u2019t getting the expected result.", "This is a buffer overflow vulnerability but not the one that can modify the state of a variable. Get a pen and draw the stack on a paper. The declaration of the variables in the source code says it all.", "@Valentine yes, google \u201cInline Assembly\u201d for further info.", "This is a buffer overflow vulnerability but not the one that can modify the state of a variable. Get a pen and draw the stack on a paper. The declaration of the variables in the source code says it all.", "@oaktree It\u2019s to make CPU\u2019s life easier while reading the values and it also has to do with the arch you are working on. Google \u201cmemory alignment in C\u201d or something close to that and check out this interesting paper http://www.catb.org/esr/structure-packing/.", "@Valentine yes, google \u201cInline Assembly\u201d for further info.", "@oaktree It\u2019s to make CPU\u2019s life easier while reading the values and it also has to do with the arch you are working on. Google \u201cmemory alignment in C\u201d or something close to that and check out this interesting paper http://www.catb.org/esr/structure-packing/.", "I\u2019m not sure if there\u2019s a guaranteed way of knowing how the stack will turn out since that entirely depends on the compiler and what it believes is the most optimal solution. But yes, most, if not all, of my encounters were the other way around.", "Ah, @0x00pf and @_py: that\u2019s sort of what I meant. EDIT: @_py that was a wonderful article you linked. Anyone reading through this discourse should definitely spend time reading that tutorial as a supplement or to entertain curiosity.", "Ah, @0x00pf and @_py: that\u2019s sort of what I meant. EDIT: @_py that was a wonderful article you linked. Anyone reading through this discourse should definitely spend time reading that tutorial as a supplement or to entertain curiosity.", "@oaktree It\u2019s to make CPU\u2019s life easier while reading the values and it also has to do with the arch you are working on. Google \u201cmemory alignment in C\u201d or something close to that and check out this interesting paper http://www.catb.org/esr/structure-packing/.", "@oaktree It\u2019s to make CPU\u2019s life easier while reading the values and it also has to do with the arch you are working on. Google \u201cmemory alignment in C\u201d or something close to that and check out this interesting paper http://www.catb.org/esr/structure-packing/.", "Great post @0x00pf. Really resourceful for the newcomers.", "Great post @0x00pf. Really resourceful for the newcomers.", "This is a buffer overflow vulnerability but not the one that can modify the state of a variable. Get a pen and draw the stack on a paper. The declaration of the variables in the source code says it all.", "If you are reading this is because you want to be a hacker. Therefore, you are automatically a wannabe. It does not sound that cool, but it is actually pretty cool. It means that you still have a lot of exciting things to discover!!! First things first. This is going to be a joint course on C and a&hellip;", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Congrats @_py   !.. Very neat solution!", "Congrats @_py   !.. Very neat solution!", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Here\u2019s my version: #include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;stdint.h&gt;#include &lt;sys/ptrace.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/stat.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/user.h&gt;#include &lt;sys/reg.h&gt;#include &lt;errno.h&gt;#include &lt;elf.h&gt;#include &lt;s&hellip;", "Hi all! Recently we have been able to get our own GitLab server, made possible by @L0k1! Since then we have moved all of 0x00sec\u2019s project there. You can find us at https://gitlab.s-3.tech/groups/0x00sec In this tutorial I will going over how to use Agora to get packages from NullHub. Explanation&hellip;", "(Thanks to @oaktree for giving me an idea to start this topic. ) Most of us spend a lot of time in some type of a shell. To save time (and sometimes sanity) it is useful to know some (keyboard) shortcuts which can be pretty darn useful. So if you know a useful shortcut, and it isn\u2019t already mentio&hellip;", "Sorry about that  It\u2019d be great to collaborate. Send me a message on the next topic. I\u2019ll do whenever I get another idea", "Dude! Second time where I\u2019m about to write up a paper on a certain topic and you wrote it sooner xD Either way, great explanation as always, ptrace is really powerful. Maybe we can collaborate on a similar topic in the future since our ideas seem to be alike.", "Dude! Second time where I\u2019m about to write up a paper on a certain topic and you wrote it sooner xD Either way, great explanation as always, ptrace is really powerful. Maybe we can collaborate on a similar topic in the future since our ideas seem to be alike.", "We have already seen how to infect a file injecting code into the binary so it gets executed next time the infected program is started. But, how to infect a process that is already running?. Well, this paper will introduce the basic techniques you need to learn in order to fiddle with other processe&hellip;", "Dude! Second time where I\u2019m about to write up a paper on a certain topic and you wrote it sooner xD Either way, great explanation as always, ptrace is really powerful. Maybe we can collaborate on a similar topic in the future since our ideas seem to be alike.", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "@123loaded: I have a fifth tutorial now. Yes, I might get into stack overflows and whatnot eventually. This series was meant to teach people about how dynamic memory works. Memory management in assembly, however, will not likely be covered in this (outside of reversing my C binaries). If you want, &hellip;", "@123loaded: I have a fifth tutorial now. Yes, I might get into stack overflows and whatnot eventually. This series was meant to teach people about how dynamic memory works. Memory management in assembly, however, will not likely be covered in this (outside of reversing my C binaries). If you want, &hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "You know an article is good when I understand it. -Phoenix750", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "I appreciate the feedback @0x00pf! I hope my explanation didn\u2019t confuse you.", "Brilliant post @_py I see some serious heavy wizardry in this post.", "I appreciate the feedback @0x00pf! I hope my explanation didn\u2019t confuse you.", "Brilliant post @_py I see some serious heavy wizardry in this post.", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "UPDATE: Please refer to Linux Internals - The Art Of Symbol Resolution for a more detailed and updated analysis of the concept. Hey peeps! I hope you\u2019re all doing great. It\u2019s been a long time since my last post. Anyway, today I present to you something completely different from what you\u2019ve been use&hellip;", "@dtm, I want to believe that you were too tired while typing that comment.", "@dtm, I want to believe that you were too tired while typing that comment.", "@dtm, I want to believe that you were too tired while typing that comment.", "Good job perl -e \u2018print &quot;t&quot;x 0x10\u2019 &gt; keyfile.dat", "@dtm, I want to believe that you were too tired while typing that comment.", "Not sure how to interpret that sentence\u2026 I\u2019d say thanks\u2026 just in case", "Hello 0x00sec! This is the fifth installment of my Dynamic Memory series. In my last article, I went through using brk and sbrk to alter a process\u2019s program break. After a decent amount of studying, I have some code to show all of you. I set out to roughly implement malloc and free and I have done&hellip;", "Hi everyone! It\u2019s been a while since Part 3, but rest assured that the wait has been worth it! (I hope) This paper will cover the Linux versions of two system calls that are paramount in memory management. The same system calls, possibly different in implementation, exist on *BSD and its derivative&hellip;", "Done! Yeah, maybe it\u2019s easier this way\u2026", "Just copy pasta the content of the pastebin in your post using the appropriate syntax.", "[spoiler]By readelf-ing the binary it\u2019s quite obvious that there is something wrong with the number of the section headers. They just can\u2019t be 0.  [image]So the next step was to patch the binary so that the ELF header field would be correct. The ELF 64-bit header looks like this: typedef struct &hellip;", "Link: http://www.9tut.com/ This is a documentation regarding beginner-advanced networking topics.", "These lectures regarding computer science by David J. Malan are really helpful for beginners and even intermediates in programming. David has an amazingly in depth teaching style which he manages to accomplish via funny video clips and examples.The first 7-8 \u201cweek\u201d lectures have to do with C. C is a&hellip;", "The above links are an interesting read for those who are/will be Computer Science students.", "@_py and @unh0lys0da, To be honest I haven\u2019t read the text on @unh0lys0da post, just looked at the code and I though it was the reply to the secondary goal: Actually, this are the two additional things you have to do to remove any warning from the readelf output (in addition to set the number of &hellip;", "@unh0lys0da, the \u201cfix\u201d for this challenge was to change the number of sections from 0 to 9. This code sample doesn\u2019t seem to accomplish that unless I\u2019m too tired.", "Hm I should do some reading then, but after changing it to 0, it worked for me as well.", "@unh0lys0da, the \u201cfix\u201d for this challenge was to change the number of sections from 0 to 9. This code sample doesn\u2019t seem to accomplish that unless I\u2019m too tired.", "[spoiler]By readelf-ing the binary it\u2019s quite obvious that there is something wrong with the number of the section headers. They just can\u2019t be 0.  [image]So the next step was to patch the binary so that the ELF header field would be correct. The ELF 64-bit header looks like this: typedef struct &hellip;", "Wow, after an insane amount of research and coming back to this post I can finally make sense out of it. Brilliant post @0x00pf!", "@0x00pf, indeed I could not load the program or dump the object code and that was actually my first thought of solving it but gdb was refusing to load the program. I actually tried using a breakpoint at the entry point address which was shown in the readelf output but I didn\u2019t have any luck at all.&hellip;", "[spoiler]By readelf-ing the binary it\u2019s quite obvious that there is something wrong with the number of the section headers. They just can\u2019t be 0.  [image]So the next step was to patch the binary so that the ELF header field would be correct. The ELF 64-bit header looks like this: typedef struct &hellip;", "@_py sorry about the confusion. Malware use to do things like that to avoid analysis. That is what I mentioned. The challenge writing really needs some improvement  To get some assembly out of the binary you can try radare2", "@0x00pf, indeed I could not load the program or dump the object code and that was actually my first thought of solving it but gdb was refusing to load the program. I actually tried using a breakpoint at the entry point address which was shown in the readelf output but I didn\u2019t have any luck at all.&hellip;", "I\u2019ve edited my response with more comments and fixed some small inaccuracies. Since I had no experience with it, I was required to sneak a peek at the last hint. Other than that, it wasn\u2019t bad. All I really had to do was to look up the structures of the ELF64 format and I could work it out from t&hellip;", "Congrats @_py ! Hope you enjoyed\u2026 but according to your write up it looks like it was too easy\u2026 Answering your question. Stripping the sections is not really malicious, however, it can be done in a way readelf does not complain and then it is not so-obvious what is going on. Check this example (n&hellip;", "@0x00pf, indeed I could not load the program or dump the object code and that was actually my first thought of solving it but gdb was refusing to load the program. I actually tried using a breakpoint at the entry point address which was shown in the readelf output but I didn\u2019t have any luck at all.&hellip;", "I don\u2019t think it was meant to be malicious, probably just a method to obfuscate information to deter the reverse engineer\u2019s attempts. EDIT: Forgot to click \u201cReply\u201d before pico\u2019s. Also, here\u2019s a quick reverse engineer of the disassembly of the main function, so it might be a bit inaccurate: size_t&hellip;", "Congrats @_py ! Hope you enjoyed\u2026 but according to your write up it looks like it was too easy\u2026 Answering your question. Stripping the sections is not really malicious, however, it can be done in a way readelf does not complain and then it is not so-obvious what is going on. Check this example (n&hellip;", "[spoiler]By readelf-ing the binary it\u2019s quite obvious that there is something wrong with the number of the section headers. They just can\u2019t be 0.  [image]So the next step was to patch the binary so that the ELF header field would be correct. The ELF 64-bit header looks like this: typedef struct &hellip;", "Wow, after an insane amount of research and coming back to this post I can finally make sense out of it. Brilliant post @0x00pf!", "Wow, after an insane amount of research and coming back to this post I can finally make sense out of it. Brilliant post @0x00pf!", "[spoiler]By readelf-ing the binary it\u2019s quite obvious that there is something wrong with the number of the section headers. They just can\u2019t be 0.  [image]So the next step was to patch the binary so that the ELF header field would be correct. The ELF 64-bit header looks like this: typedef struct &hellip;", "I\u2019m about as far as making it into a legit binary.", "Are you trying to master the ELF format and you need some stuff to try your new skills?.. well, this is a simple challenge for you to try. The ChallengeA colleague that works as Network Engineer for an important company has captured a piece of malware that somebody was trying to use against the co&hellip;", "@Donnette has a solid point.", "@Donnette has a solid point.", "Click me, I ain\u2019t kidding. Have fun\u2026", "@Donnette has a solid point.", "@Donnette has a solid point.", "The last two (1 and 2) articles covered the main differences between stack/heap as well as using arrays on the heap. Now, I\u2019m going to walk you guys through resizing these heap-allocated arrays. See, you might not always know \u2013 at compile time \u2013 how much memory you will need. Thus, we can write cod&hellip;", "Nice post @oaktree! Just a heads up from the realloc manpage The realloc() function returns a pointer to the newly allocated memory, which is suitably aligned for any kind of variable and may be different from ptr, or NULL if the request fails. realloc calls usually look like this (it all depen&hellip;", "Alright. Because I like doing these and find this topic to be \u201cokay\u201d, difficulty-wise, I\u2019m doing two articles in two days. This is Part 2.0, the followup to Part 1.0, which was about using malloc and free on pointers. In this article, we\u2019ll be using the same functions (malloc and free), but with ar&hellip;", "@0x00pf, I\u2019ve honestly started \u201cliking\u201d your articles before even reading them. I just expect them to be good.", "Fantastic explanation! Right when I was having my refresher in Information Theory for my uni exam, you drop this bomb article. It\u2019d be great to see some compression algos in the future (i.e Huffman, Shannon.)", "Fantastic explanation! Right when I was having my refresher in Information Theory for my uni exam, you drop this bomb article. It\u2019d be great to see some compression algos in the future (i.e Huffman, Shannon.)", "Fantastic explanation! Right when I was having my refresher in Information Theory for my uni exam, you drop this bomb article. It\u2019d be great to see some compression algos in the future (i.e Huffman, Shannon.)", "Continuing the discussion from CAPTCHA - Randomness applicability: When I first discovered Information Theory many years ago I was amazed. The fact of being able to quantify the amount of information in a sequence of bits just looked awesome. So I would try to explain this as simpler as I can. Ther&hellip;", "@pry0cc  In the context of randomness, the entropy defines with which extent a bit is tied to another within bytes. Higher is the entropy; lower is the relation between them. That is why it is expressed by a number, within a range from 0 to 8. As @_py described in his post above, entropy is affected&hellip;", "Correct me if I\u2019m wrong but I believe entropy in this case has to do with the best possible scenario of data transfer with the least possible loss. By \u201closs\u201d I mean data(bytes) loss. As the legend Shannon said \u201can absolute limit on the best possible average length of lossless encoding or compression&hellip;", "@pry0cc  In the context of randomness, the entropy defines with which extent a bit is tied to another within bytes. Higher is the entropy; lower is the relation between them. That is why it is expressed by a number, within a range from 0 to 8. As @_py described in his post above, entropy is affected&hellip;", "Correct me if I\u2019m wrong but I believe entropy in this case has to do with the best possible scenario of data transfer with the least possible loss. By \u201closs\u201d I mean data(bytes) loss. As the legend Shannon said \u201can absolute limit on the best possible average length of lossless encoding or compression&hellip;", "Alright! After receiving positive responses to my proposal, I\u2019m ready to start this [C] Dynamic Memory series. Here are some suggested prerequisites: Basic Understanding of Imperative ProgrammingBasic C Programming KnowledgeConfidence with PointersAnd what pointers representWhether or no&hellip;", "Hi fellas, To continue with my CAPTCHA series, I will introduce you the concept of randomness and its applicability to the domain of CAPTCHA breaking with a deeper digression to cryptography, steganography and forensics. Without further ado, I would like to get to the heart of the matter by explai&hellip;", "Hey mates! Just wanted to share this awesome DEFCON talk I found, about how a hacker found where his stolen desktop was and completely pwned the person who stole it! It\u2019s pretty funny, and I\u2019m sure if you haven\u2019t seen it already you will enjoy it a lot! Link: https://www.youtube.com/watch?v=U4oB28&hellip;", "At some point, your C program is gonna grow. Maintaining all that code in just one file is painful. Even more, you may be using different libraries and typing all those flags every time you want to compile your program also becomes painful. When you get to that point, is time to Make and Split. Hel&hellip;", "Click me, I ain\u2019t kidding. Have fun\u2026", "Click me, I ain\u2019t kidding. Have fun\u2026", "Click me, I ain\u2019t kidding. Have fun\u2026", "Click me, I ain\u2019t kidding. Have fun\u2026", "Click me, I ain\u2019t kidding. Have fun\u2026", "Do you know your Android phone have a shell?. Do you know that it is a reduced version of busybox?. Do you know you can recompile it and add some important missing applets? If you don\u2019t, keep reading. This is gonna be quick and easy! NOTE: This a rewrite of something I wrote some time ago for othe&hellip;", "Some time ago, we explored the idea of a simple crypter for ELF files ( A simple Linux Crypter). In that post, we explored a simple technique to modify the code of a program at run-time. In that specific case to decrypt parts of the code that were crypted beforehand by an off-line tool. In this art&hellip;", "Let\u2019s put away the serious stuff for a while and let\u2019s have some fun. What about some hacking pranks!. Let\u2019s start with something simple, the so called nervous mouse. Note: The code is a modification of some example from internet. I cannot recall where I got it, but it is, let\u2019s say, the default ex&hellip;", "Welcome back my trainee command-line ninjas! In this guide we will be covering some basic concepts and tricks to sending files to computers in the Linux shell. This can be extremely useful when you\u2019re trying to share a backdoored executable to a machine on the same network, but don\u2019t want to have t&hellip;", "A pretty simple thing, but it hasn\u2019t been suggested yet for some reason. If it is possible, users who have reached a certain trust level (I recommend the \u201cmember\u201d trust level) should have the ability to change the title displayed behind their names by themselves, and not have a mod do it for them. I&hellip;", "So me and @dtm have talked on this and the conclusion is that Lulz is not really what we want this category to achieve. I fear having just Lulz will make us the next 9Gag. Lulz is actually a part of this category we want to name 0x00 and Chill. This is the place we propose to have a social section f&hellip;", "Hey mates! After roughly 30 hours of work, I\u2019m now finished with my own Android Remote Administration Tool . It was my holiday project, which I planned several weeks before. Argus - RAT is of course named after the giant in the Greek mythology. But\u2026 I think that\u2019s not interesting for you . Let\u2019s di&hellip;", "So me and @dtm have talked on this and the conclusion is that Lulz is not really what we want this category to achieve. I fear having just Lulz will make us the next 9Gag. Lulz is actually a part of this category we want to name 0x00 and Chill. This is the place we propose to have a social section f&hellip;", "Hello 0x00sec! Today in this article we\u2019ll be cracking a device encrypted with LUKS (Linux Unified Key Setup). Breaking LUKS encrypted devices (or any type of encrypted devices) are surprisingly easy if you know what you are doing. It\u2019s been some time since I joined 0x00sec so I thought it\u2019s about &hellip;", "What? [wat.] Could you please explain this all a little more?", "Hello again. I know Fust3rCluck covered this, but I had something different in mind\u2026 XOR, or Exclusive XOR, is a Boolean Logic Gate. Like most of the other logic gates, XOR takes two parameters. Thus, it is a binary logic gate. [XOR truth table] XOR is a computationally easy form of encryption. H&hellip;", "Welcome to Trix\u2019 with Linux, the first installment of this series! In this series you will become my trainee command-line ninjas and in this guide we will be covering basic Linux use. I will cover Ubuntu/Mint (these will also work for Kali). If you\u2019re using another distro and want help, just comment&hellip;", "Hey mates, no that\u2019s not a bad plagiarism . I wrote with @L3akM3-0day and we\u2019ll try to work together on this series. My part will be to translate his Java codes to C#, which I\u2019ll try to do as good as I can, although I\u2019m not that experienced with Android programming . I would also add the part of An&hellip;", "Continuing the discussion from The Price of Scripting: There you go I\u00b4m sorry, but I\u2019m not going to implement the code challenger we used in The Price of Scripting in assembler\u2026 it is just no point on doing that. So I will use a simple hello world program that will wait for the user to press a key&hellip;", "Alas! It\u2019s time for the next iteration of my Crypto Algs series. Now, a lot of what\u2019s to be seen this time around is founded upon what I\u2019ve said in past articles. In order to be best prepared for this article\u2019s teachings, you should start from the beginning. The Vigenere Cipher is often referred to&hellip;", "In Part I we learnt how to write a very basic sniffer If you take a look to the code you will notice that, once we capture the packet, we have to do quite some checks in order to get to the data we are interested on. That is fine for a general packet capture tool like wireshark, were you want to se&hellip;", "Lovely article @0x00pf! Below is a useful pcap documentation based on tcpdump. http://www.tcpdump.org/pcap.html", "Good link, covers basically the same. I would posted the link instead if I would new about it", "Lovely article @0x00pf! Below is a useful pcap documentation based on tcpdump. http://www.tcpdump.org/pcap.html", "#Introduction to the Android Malware Series - 0x00Hey everyone and welcome to the introduction of my Android Hacking series! Nowadays, who doesn\u2019t have a smarphone? People have their eyes fixed on their phone, what makes them vulnerable : Malware and Exploit. This series will aid you in the proces&hellip;", "Thanks @Airth. Glad to see you back!", "Brilliant work @0x00pf! You killed it once again. I\u2019ve been away these days and I haven\u2019t had the time to read it fully yet but I admire your in-depth understanding. Your posts always motivate me to learn and research.", "I\u2019d say that this is some sort of \u201cPacket Laundering Front.\u201d You\u2019re taking something that looks legit (ICMP Packets) and secretly doing nasty stuff in plain sight.", "Sometimes, frequency analysis may fail, as @dtm pointed out. Let\u2019s send a message to our buddy, Bob. We want to tell him about an animal. Upon receiving the message and no key, Bob is confused. What does \u201crkssotm\u201d mean!? He tries to use our frequency analysis program and this is his result: \u201cdweeaf&hellip;", "Brilliant work @0x00pf! You killed it once again. I\u2019ve been away these days and I haven\u2019t had the time to read it fully yet but I admire your in-depth understanding. Your posts always motivate me to learn and research.", "In this last part of this series, we are going to see how to build a pretty stealth remote shell. This remote shell usually also have better chances to avoid detection systems like firewalls and IDS. As described above, it sounds like the definitely remote access tool. Doesn\u2019t it?. Well, actually s&hellip;", "Brilliant work @0x00pf! You killed it once again. I\u2019ve been away these days and I haven\u2019t had the time to read it fully yet but I admire your in-depth understanding. Your posts always motivate me to learn and research.", "Yesterday I dropped an article about the Caesar Cipher encryption \u201cscheme\u201d. Now, it\u2019s time to break it. This one will be easy. Think about it. Our key can only be between 0 and 25. Sounds like a brute-forcable problem. Method 1: Brute ForceFirst, here are the encryption and decryption functions &hellip;", "Hey guys! I thought I would start a little series on cryptography algorithms. I\u2019m going to run out this last hour before Mr. Robot\u2019s season 2 airs. With that said, let\u2019s get down to business. The Caesar Cipher is named for its alleged use by the Roman Emperor Julius Caesar. In order to \u201censure\u201d the&hellip;", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "I second @oaktree\u2019s proposal.", "Yes, @airth is right. In general running setuid programs is dangerous. If a vulnerability appears in such a program, an attacker can get full access to the system. Using the capabilities approach will just allow the attacker to create sockets RAW, but not access system files for instance. My unders&hellip;", "Thanks for the explanation! I am just wondering what\u2019s the \u201cdangerous thing\u201d in running Wireshark as root? It can\u2019t be only a precaution for newbies like @airth said, can it?", "Did you read /usr/share/doc/wireshark-common/README.Debian? When you install wireshark you can chose to enable non-root users to capture packets. That basically means that: If you kernel does not support capabilities, the capture back-end, a process called dumpcap, will be setuid and therefore ex&hellip;", "That\u2019s targeted towards the newbies mostly. Root == God of the OS. If you fuck up something by accident, there may be no coming back. It\u2019s just a precaution message I believe.", "That\u2019s targeted towards the newbies mostly. Root == God of the OS. If you fuck up something by accident, there may be no coming back. It\u2019s just a precaution message I believe.", "That\u2019s targeted towards the newbies mostly. Root == God of the OS. If you fuck up something by accident, there may be no coming back. It\u2019s just a precaution message I believe.", "@SmartOne, especially Wireshark requires root permission in order to work properly on my machine.", "Dammit! I was thinking of making a post on libpcap sniffing as well but you were faster xD Fantastic article once again @0x00pf, you explained it better than I would. Some notes: For the people who didn\u2019t know, Promiscuous mode means to sniff all traffic on the wire. On the other side, during no&hellip;", "I second @oaktree\u2019s proposal.", "I second @oaktree\u2019s proposal.", "I second @oaktree\u2019s proposal.", "I second @oaktree\u2019s proposal.", "I second @oaktree\u2019s proposal.", "Introduction to The Post Hey guys! Considering this is the first actual post besides the introduction, I thought it would be best to start big and start with a bang you could say. Besides that I think the Morris Worm would very much deserve a spot in the start of this series considering it was one &hellip;", "Sorry. I said it will take longer\u2026 I was thinking on the whole thing, but then I realise I have to split it anyway. Sorry if I wasted some of your time  Good points in your message!", "Dammit! I was thinking of making a post on libpcap sniffing as well but you were faster xD Fantastic article once again @0x00pf, you explained it better than I would. Some notes: For the people who didn\u2019t know, Promiscuous mode means to sniff all traffic on the wire. On the other side, during no&hellip;", "A sniffer is an application able to capture data being transmitted through some medium. In general, the term is associated with capturing network traffic and the term Eavesdroping ( https://en.wikipedia.org/wiki/Eavesdropping) is used in the general case. In this post we are going to find out how s&hellip;", "Dammit! I was thinking of making a post on libpcap sniffing as well but you were faster xD Fantastic article once again @0x00pf, you explained it better than I would. Some notes: For the people who didn\u2019t know, Promiscuous mode means to sniff all traffic on the wire. On the other side, during no&hellip;", "@airth and @pry0cc: I mean \u201cmess\u201d as in leave a screwy-looking trail if/when someone is checking for it.", "I don\u2019t know what you mean by \u201cmessing\u201d, but it all comes down to your IP (or the MAC in a LAN). Oaktree or oaktits as a hostname won\u2019t really mess with anything.", "Yes, I will try to uncover OSPF fully in the upcoming articles.", "I don\u2019t know if you\u2019re aware, but I believe the access points rely on Mac Addresses for identification rather than hostname. Technically no two Mac addresses should exist, but two hostnames certainly could since it\u2019s often user configured.", "I don\u2019t know what you mean by \u201cmessing\u201d, but it all comes down to your IP (or the MAC in a LAN). Oaktree or oaktits as a hostname won\u2019t really mess with anything.", "I don\u2019t know what you mean by \u201cmessing\u201d, but it all comes down to your IP (or the MAC in a LAN). Oaktree or oaktits as a hostname won\u2019t really mess with anything.", "I don\u2019t know what you mean by \u201cmessing\u201d, but it all comes down to your IP (or the MAC in a LAN). Oaktree or oaktits as a hostname won\u2019t really mess with anything.", "In this tutorial, I\u2019ll be walking you through the code-implementation of Kruskal\u2019s Algorithm. To restate myself: First, let\u2019s get a few typedefs and function prototypes out of the way: #include &lt;iostream&gt;#include &lt;vector&gt;#include &lt;utility&gt;#include &lt;algorithm&gt; /* Define an edge struct to ha&hellip;", "Nice post. The different interrelations between user space and kernel regarding the architecture is not trivial. But as a general rule, what is relevant, from the point of view of a shellcode is the architecture of the user space. Anyone interested on how  this works on Linux, should read this grea&hellip;", "No matter who you ask, google will always know better.", "I have gotten through about half of this. I recommend it for anyone interested in AI.", "I think it is\u2026 give me a couple days", "Damn, thank you for posting the solution because I was trying with a completely different way which wouldn\u2019t lead me anywhere. Sweet challenge, keep them coming pico!", "I thought of coding my way around it but I scrapped it. I\u2019m curious if it\u2019s possible.", "The idea was to just post the FLAC file\u2026 but that is not allowed, so I had to fit the audio inside an image. That may have made the challenge a bit misleading.", "Damn, thank you for posting the solution because I was trying with a completely different way which wouldn\u2019t lead me anywhere. Sweet challenge, keep them coming pico!", "I\u2019m sure you all have solved this last crypto challenge, but in case you don\u2019t . This is a short write up on how to get the hidden message. You can use different tools to achieve what is described below. I\u2019m going to use GNU/Linux command-line tools to get the message out of the file. Let\u2019s go. Lo&hellip;", "Damn, thank you for posting the solution because I was trying with a completely different way which wouldn\u2019t lead me anywhere. Sweet challenge, keep them coming pico!", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "Fantastic @airth. Congrats!", "Great job. Well written, and frankly one of the best articles I\u2019ve seen on the subject. Keep the great work up!", "Fantastic @airth. Congrats!", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "Hello homies and homettes. I hope you are all having a great day so far. Welcome to Part 2 of the routing protocols series regarding OSPF. This time we are going to dig deeper in OSPF and try to visualize the \u201clow-level\u201d detail behind it. Allow me to take your hand and walk you through OSPF once aga&hellip;", "Hey mates, long long time ago I made my last post, but now I\u2019m back with a simple series about a little self-made Crypto (Nah, it\u2019s more a key generation), which uses a (At least I think it is ) new idea for key crafting. Either you\u2019re now thinking \u201cOh, cool! Let\u2019s see what his idea is\u201d or you\u2019re t&hellip;", "Weekend Stego Challenge 2. Are You the Key Master?LEVEL: EASY You can get the message using command-line tools [image] The trickiest part was to get the message posted here  Hint1:Try to convert the image to pgm format Hint2:The actual data starts just after the mark in the file Hint3:You can&hellip;", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Just awesome. The read was worth it!", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "This is going to be short. Taking as starting point the last code challenge posted by @oaktree ( Programming Challenge #6 thanks @oaktree! ) and just out of curiosity,  I decided to take some memory performance numbers. This challenge was pretty straight forward and it does not looks like any of th&hellip;", "Yes, I will try to uncover OSPF fully in the upcoming articles.", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Yes, I will try to uncover OSPF fully in the upcoming articles.", "Thank you @0x00pf! It means a ton coming from you. I hope it wasn\u2019t too much of a read xD", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "It doesn\u2019t matter if is long when it is interesting!. Congrats again!", "It doesn\u2019t matter if is long when it is interesting!. Congrats again!", "In order to complete the table in The Price of Scripting, I will add a couple more implementations: Lua#!/usr/bin/luan, t = io.read (&quot;*n&quot;, &quot;*n&quot;)w= {}for i=0, n - 1 do    w[i] = io.read(&quot;*n&quot;)endfor k=1, t do    i,j = io.read(&quot;*n&quot;, &quot;*n&quot;)    print (math.min(table.unpack(w, i, j)))endPerl&hellip;", "Thank you @0x00pf! It means a ton coming from you. I hope it wasn\u2019t too much of a read xD", "We were missing you, but the wait was worth it. Brilliant post!", "Thank you @0x00pf! It means a ton coming from you. I hope it wasn\u2019t too much of a read xD", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Long time no see, homies and homettes (probably none). Anyway, today I will do my best to explain to you one of the most widely known and used protocols for internet routing, known as OSPF. This post is not beginner friendly, and is kind of long, so hang in there. The article consists of theory and &hellip;", "Link: http://www.9tut.com/ This is a documentation regarding beginner-advanced networking topics.", "Link: http://www.9tut.com/ This is a documentation regarding beginner-advanced networking topics.", "For example @airth with his very fundamental but very well written subnetting article. Or to @Evalion from whom we can expect a lot of hardware hacking in the future. Just to people who have a little more experience as the others in this community. So it would be awesome if i see the articles the&hellip;", "The thing is, studies never come to a close.", "Someone has to check your passport because you are from another planet mate.", "Someone has to check your passport because you are from another planet mate.", "Someone has to check your passport because you are from another planet mate.", "LEVEL: Beginner Port scanning is the process of finding out which ports are open in a given machine. An open port usually means a program listening on that port, and a program means bugs, and bugs means exploits\u2026 roughly :). OK, everybody in the world uses nmap for this task. It would be stupid to&hellip;", "As requested here is the program used to produce the image for the Basic Stego challenge we published yesterday. If you are still trying to solve it, you may want to wait to read this. The image was generated with a very simple C program using libgd. `libgd\u2019 (http://libgd.github.io/) is a classica&hellip;", "You are on fire mate.", "Alright, so for some weird reason, there is no DNS header in Linux. that\u2019s why I decided to write one: /*    DNS Header for packet forging    Copyright (C) 2016 unh0lys0da    This program is free software: you can redistribute it and/or modify    it under the terms of the GNU General Public L&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "No matter who you ask, google will always know better.", "\u201cIf you never failed, you never tried anything new\u201d. That\u2019s one of the quotes that keep me going when I delve into something completely out of my comfort zone. If you don\u2019t expose yourself to new ideas you will never grow. Neither mentally or personally. I wouldn\u2019t recommend self researching as the&hellip;", "Google is love, Google is life", "Then you are a pico hater and you should be ashamed!", "No matter who you ask, google will always know better.", "Then you are a pico hater and you should be ashamed!", "I see how this may be unclear, that was meant for Cromical.", "Then you are a pico hater and you should be ashamed!", "Since I used to be posting networking articles on Null Byte and I\u2019m planning to continue my series here, let me know which topics you want to cover so we can have a collab if you are interested so there won\u2019t be any repetition.", "That would be so awesome!", "Since I used to be posting networking articles on Null Byte and I\u2019m planning to continue my series here, let me know which topics you want to cover so we can have a collab if you are interested so there won\u2019t be any repetition.", "Since I used to be posting networking articles on Null Byte and I\u2019m planning to continue my series here, let me know which topics you want to cover so we can have a collab if you are interested so there won\u2019t be any repetition.", "Don\u2019t get fooled by the title. The link below doesn\u2019t teach you how to code a complete OS. I thought it would be an interesting read for the low-level members of 0x00sec. Here you go: http://tutorialsbynick.com/writing-an-os-baby-steps/", "Since I used to be posting networking articles on Null Byte and I\u2019m planning to continue my series here, let me know which topics you want to cover so we can have a collab if you are interested so there won\u2019t be any repetition.", "Since I used to be posting networking articles on Null Byte and I\u2019m planning to continue my series here, let me know which topics you want to cover so we can have a collab if you are interested so there won\u2019t be any repetition.", "These lectures regarding computer science by David J. Malan are really helpful for beginners and even intermediates in programming. David has an amazingly in depth teaching style which he manages to accomplish via funny video clips and examples.The first 7-8 \u201cweek\u201d lectures have to do with C. C is a&hellip;", "Since I used to be posting networking articles on Null Byte and I\u2019m planning to continue my series here, let me know which topics you want to cover so we can have a collab if you are interested so there won\u2019t be any repetition.", "Since I used to be posting networking articles on Null Byte and I\u2019m planning to continue my series here, let me know which topics you want to cover so we can have a collab if you are interested so there won\u2019t be any repetition.", "Got me exited @airth\u2026 Now I\u2019m even more exited  Nice share.", "Don\u2019t get fooled by the title. The link below doesn\u2019t teach you how to code a complete OS. I thought it would be an interesting read for the low-level members of 0x00sec. Here you go: http://tutorialsbynick.com/writing-an-os-baby-steps/", "Don\u2019t get fooled by the title. The link below doesn\u2019t teach you how to code a complete OS. I thought it would be an interesting read for the low-level members of 0x00sec. Here you go: http://tutorialsbynick.com/writing-an-os-baby-steps/", "Don\u2019t get fooled by the title. The link below doesn\u2019t teach you how to code a complete OS. I thought it would be an interesting read for the low-level members of 0x00sec. Here you go: http://tutorialsbynick.com/writing-an-os-baby-steps/", "Don\u2019t get fooled by the title. The link below doesn\u2019t teach you how to code a complete OS. I thought it would be an interesting read for the low-level members of 0x00sec. Here you go: http://tutorialsbynick.com/writing-an-os-baby-steps/", "Don\u2019t get fooled by the title. The link below doesn\u2019t teach you how to code a complete OS. I thought it would be an interesting read for the low-level members of 0x00sec. Here you go: http://tutorialsbynick.com/writing-an-os-baby-steps/", "Damn! I knew that Lua was used in wireshark, but integrating it into C? Never thought of it that way. Awesome post @0x00pf!", "Damn! I knew that Lua was used in wireshark, but integrating it into C? Never thought of it that way. Awesome post @0x00pf!", "No, we are not going to talk about space travelling, or interplanetary missions. No. We are going to talk about Lua. Lua is Portuguese for Moon and it is a very nice scripting language that is usually hidden behind the Python hype. Anyway, why are we talking about Lua?. Well, I have been planning t&hellip;", "Wise words m8te The other advantage I have found about using different sources is that you quickly identify the key points. Those central to most of the resources are the important stuff and you easily assimilate what is relevant and what not.", "Wise words m8te The other advantage I have found about using different sources is that you quickly identify the key points. Those central to most of the resources are the important stuff and you easily assimilate what is relevant and what not.", "\u201cIf you never failed, you never tried anything new\u201d. That\u2019s one of the quotes that keep me going when I delve into something completely out of my comfort zone. If you don\u2019t expose yourself to new ideas you will never grow. Neither mentally or personally. I wouldn\u2019t recommend self researching as the&hellip;", "This is a very good point. It makes me recall my first steps with Arduinos. For years I knew about the devices but I never tried. All those electronics looked way too advanced to me. It just looked out of scope. But one day I decided to try. Indeed it required a little bit of effort but very quickl&hellip;", "\u201cIf you never failed, you never tried anything new\u201d. That\u2019s one of the quotes that keep me going when I delve into something completely out of my comfort zone. If you don\u2019t expose yourself to new ideas you will never grow. Neither mentally or personally. I wouldn\u2019t recommend self researching as the&hellip;", "\u201cIf you never failed, you never tried anything new\u201d. That\u2019s one of the quotes that keep me going when I delve into something completely out of my comfort zone. If you don\u2019t expose yourself to new ideas you will never grow. Neither mentally or personally. I wouldn\u2019t recommend self researching as the&hellip;", "Hey everyone! This article is a followup to my last one about the Bellman Ford Algorithm. /*    Bellman-Ford with an Adjacency List*/#include &lt;vector&gt;#include &lt;iostream&gt;#include &lt;algorithm&gt;#include &lt;limits&gt;#include &lt;utility&gt; typedef std::vector&lt; std::vector&lt; std::pair&lt;int,int&gt; &gt; &gt; adj_list&hellip;", "This is called Karma. Playing around with the router behind ISP\u2019s back. Your description is a bit confusing to me. I would recommend a factory default so you can restore all the previous settings.", "Good old RIP, the root of every routing protocol. Since RIP is rarely used in a company\u2019s network, I assume Bellman-Ford isn\u2019t the most efficient algo to get the job done and that\u2019s why RIP\u2019s  implementation has been fading away I guess. Good stuff oakey!", "You\u2019re right. It is not the most efficient, because it takes a while for the results of the algorithm on one node to reach all the other ones. This can cause some messages to loop in the meantime.", "Good old RIP, the root of every routing protocol. Since RIP is rarely used in a company\u2019s network, I assume Bellman-Ford isn\u2019t the most efficient algo to get the job done and that\u2019s why RIP\u2019s  implementation has been fading away I guess. Good stuff oakey!", "Hello 0x00sec people! It\u2019s @oaktree once again coming at you with another tutorial. This time, it\u2019s about the Bellman-Ford Algorithm. This algorithm is very similar to Dijkstra\u2019s Algorithm from last time, yet it diverges in that it is designed to handle negative edge weights, which are \u201cnegative di&hellip;", "Hello 0x00sec people! It\u2019s @oaktree once again coming at you with another tutorial. This time, it\u2019s about the Bellman-Ford Algorithm. This algorithm is very similar to Dijkstra\u2019s Algorithm from last time, yet it diverges in that it is designed to handle negative edge weights, which are \u201cnegative di&hellip;", "\u201cbehind the isp\u2019s back\u201d  I\u2019ve already reset the modem and the router. Sadly it appears I\u2019ll have to dive into some subnettings or something to fix this problem.", "Who even uses their ISP\u2019s default router anyways? @airth -Phoenix750", "Who even uses their ISP\u2019s default router anyways? @airth -Phoenix750", "This is called Karma. Playing around with the router behind ISP\u2019s back. Your description is a bit confusing to me. I would recommend a factory default so you can restore all the previous settings.", "Yeah and I\u2019m studying C for about 1 week and a half and just got done coding the Linux Kernel.", "Alright. Here\u2019s my solution in the beautiful C++ Programming Language: #include &lt;iostream&gt;#include &lt;vector&gt; struct rectangle {    int bottom_left_x,        bottom_left_y,        top_right_x,        top_right_y;}; bool check_territory(const std::vector&lt;rectangle&gt;&amp; graph, const rectangle&amp; t&hellip;", "Yeah and I\u2019m studying C for about 1 week and a half and just got done coding the Linux Kernel.", "Yeah and I\u2019m studying C for about 1 week and a half and just got done coding the Linux Kernel.", "Yeah and I\u2019m studying C for about 1 week and a half and just got done coding the Linux Kernel.", "Gotta love your weather forecast when new users join the IRC channel.", "From what I remember, @oaktree may be able to help you out on that.", "Gotta love your weather forecast when new users join the IRC channel.", "Gotta love your weather forecast when new users join the IRC channel.", "Gotta love your weather forecast when new users join the IRC channel.", "@airth, the best are the specification http://refspecs.linuxbase.org/elf/elf.pdf and the includes (/usr/include/elf.h). There are many pages describing the format but, once you now what is it about, the specification is the main document you need.", "COFF is indeed a reference for PE\u2026 but ELF is not based on COFF. Anyway, they share a lot of concepts. Also thanks for your words ;), that\u2019s appreciated I have found myself this link very useful. http://phrack.org/issues/58/5.html It is 15 years old, but the ELF format haven\u2019t change much sinc&hellip;", "COFF is indeed a reference for PE\u2026 but ELF is not based on COFF. Anyway, they share a lot of concepts. Also thanks for your words ;), that\u2019s appreciated I have found myself this link very useful. http://phrack.org/issues/58/5.html It is 15 years old, but the ELF format haven\u2019t change much sinc&hellip;", "@airth, the best are the specification http://refspecs.linuxbase.org/elf/elf.pdf and the includes (/usr/include/elf.h). There are many pages describing the format but, once you now what is it about, the specification is the main document you need.", "That\u2019s always exciting, when a person you know seems to know more than Google (about a subject).", "That\u2019s always exciting, when a person you know seems to know more than Google (about a subject).", "I have looked at a bunch of links. @0x00pf just seems to know more than the links I read.", "I have looked at a bunch of links. @0x00pf just seems to know more than the links I read.", "Wouldn\u2019t you just look at the COFF and maybe some RFCs?", "Do you recommend any ELF, PE structure documentation?", "Thanks @airth for the positive feedback. It is pretty much appreciated coming from you", "A lot to take in but educational at the same time. Good stuff pico!", "A lot to take in but educational at the same time. Good stuff pico!", "A lot to take in but educational at the same time. Good stuff pico!", "As @dtm has explained us how to write a crypter for Windows, and @TheDoctor has done the same for C#, I\u2019m going to talk about how to build similar stuff for GNU/Linux. This post is kind of based on something else I wrote some months ago for a different community. I had tried to make a twist of the o&hellip;", "There is no way  2 machines will be working properly if both of them are online and they are using the same MAC address. It just doesn\u2019t make any sense. The attack I\u2019ve accomplished at least is by hijacking the ARP cache and when the target machine is offline, then use its MAC address. Check out the&hellip;", "My deal is this: Two computers are both online on the same network.One computer is the rightful owner of some MAC address. This computer was connected to the network first.Then I come along and change my MAC address to be the same as the other computer\u2019s.My questions: Do I get the same IP as&hellip;", "@pry0cc I\u2019m not saying it\u2019s impossible but you are not that descriptive with how exactly you do it. Using a tool without knowing what\u2019s going on under the hood is a bit skiddy. Keep in mind MAC addresses are one of a kind (in 99% of the cases). In serious networks, MAC spoofing is nearly impossible. &hellip;", "I think you may have misunderstood the concept. You can simply spoof your Mac address, I\u2019ve done it before. I don\u2019t know what exactly happens under the hood, but it works.", "I\u2019m in a rush at the moment but @oaktree tagged me so I will try to give some insight from what I know at least(not much). I haven\u2019t read the whole convo but it seems like @oaktree is confused on how 2 machines can have the same MAC address. @pry0cc I don\u2019t know how this MAC spoofing technique works&hellip;", "My point is: If you have the same MAC, then the router/DHCP will give you the same IP as the machine off of which you are spoofing. Right? I mean, a TCP stream would be alright if the connection is constant, but if you\u2019re just shooting UDP\u2019s then what happens? @airth: care to chime in?", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "If you have been following this series, you may remember that I started Part I with an use case involving remote access to an Android Phone. This part will cover how to get a remote shell access to your phone and other devices. Actually, deploying our remote shells in a device is nothing special, b&hellip;", "Learning assembly takes a while, and it is a bit hard to jump straight into a modern processor and start coding\u2026 So, if you do not have any experience with the bare metal, it is good to start with a pretty simple assembly. And the simplest assembly I can recall is called RedCode Despite of being &hellip;", "In a connected world, remotely accessing computers is happening all the time. You use services like ssh or telnet for that purpose but, sometimes, they are not available or it is not possible to even deploy those services in the target device. In those cases you can easily write your own remote shel&hellip;", "The above links are an interesting read for those who are/will be Computer Science students.", "The above links are an interesting read for those who are/will be Computer Science students.", "So far, looks like only @dtm has provided a solution the my little challenger (not really a surprise ) . He also gave us a couple of hints on how to find a solution. I have already given a couple of hints as well in the comments but, in case you haven\u2019t manage to solve it and you are wondering how t&hellip;", "Hey 0x00sec people! Not long ago, I said I would put up some source code for Dijkstra\u2019s Algorithm. Today, I\u2019ll be showing you just one way to do it. We\u2019ll be utilizing an Adjacency Matrix, which is simply a 2D Array. As we progress, each implementation will be more efficient than the last. Taking a&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "This just popped in my twitter, and it looks like something interesting for the kindof forgotten HW section. http://samy.pl/keysweeper/#sn It is based on an Arduino, a GSM modem and a small NRF board for the wireless sniffing. All that packed in a standard USB charger case. All the code is availab&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "Hi Everybody! Inspired by @TheDoctor I started working in a small side project involving some crackme\u2019s, and I would appreciate your feedback/comments (if the binary works on your system, how easy/difficult you found the challenger,\u2026) The program is encoded at the end of this post. To get the bina&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "Wow. I gotta say, I just  got on here, and I can\u2019t believe this site is ALREADY this cool. Everything looks so pro too  . It has the perfect mix of deep computer knowledge, but it is also friendly to beginners in computing and security. I\u2019m not trying to diss on NB, but I went on there just a bit ag&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "Or the left bit, because, you know\u2026", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "Yep, you always gotta start from the ground up. Ain\u2019t that right mate?", "Yep, you always gotta start from the ground up. Ain\u2019t that right mate?", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "Hello homies and homets! PySec/Airth here coming at you with some 1337 subnetting. This article was originally posted on Null Byte but since I joined the 0x00sec team and there are a ton of new comers, I decided to re-upload some of them so people won\u2019t get confused with the rest of the posts I will&hellip;", "The link below is a website that includes exploit exercises. Just had a look at it and it seems interesting. I hope you will like it. https://exploit-exercises.com/", "The link below is a website that includes exploit exercises. Just had a look at it and it seems interesting. I hope you will like it. https://exploit-exercises.com/", "The link below is a website that includes exploit exercises. Just had a look at it and it seems interesting. I hope you will like it. https://exploit-exercises.com/", "The link below is a website that includes exploit exercises. Just had a look at it and it seems interesting. I hope you will like it. https://exploit-exercises.com/", "The link below is a website that includes exploit exercises. Just had a look at it and it seems interesting. I hope you will like it. https://exploit-exercises.com/", "Somebody requested we have a spoiler tag, so that we can hide infomation for challenges and such. Your wish has been granted! [spoiler] Hello world! [/spoiler] now makes   Hello world! , and you just click it to reveal whats underneath the blur. It also works with images. Enjoy!", "I\u2019m trying to finish my subnetting series. Currently writing an article on VLSM  I apologize for my lack of uploads, I\u2019ve just been busy with a ton of university assignments unfortunately.", "Stay strong buddy!", "I\u2019m looking forward to it. Hope your assignments went/are going well! I think I will be in a similar situation soon\u2026", "Stay strong buddy!", "I\u2019m looking forward to it. Hope your assignments went/are going well! I think I will be in a similar situation soon\u2026", "I\u2019m trying to finish my subnetting series. Currently writing an article on VLSM  I apologize for my lack of uploads, I\u2019ve just been busy with a ton of university assignments unfortunately.", "I\u2019m trying to finish my subnetting series. Currently writing an article on VLSM  I apologize for my lack of uploads, I\u2019ve just been busy with a ton of university assignments unfortunately.", "I didn\u2019t know\u2026 That makes the comment a lot more valuable. I\u2019m missing your network posts", "I\u2019m PySec by the way, in case you didn\u2019t know", "@Airth is correct, You truly are on fire! This again is absolute gold! I am so pleased you are in our community, you are such a valuable asset!", "Thanks I started this some time ago, and it looked like a good moment to share it following the user view we\u2019ve got yesterday. Unfortunately I will be busy with other projects in the coming weeks so it will be difficult to post these long tutorials", "You are on fire mate.", "You are on fire mate.", "Alternate Title: Picking Up Women: For Hackers.", "Oh nice! I\u2019ve never heard of that!", "@pry0cc, there is a routing protocol known as OSPF where \u201cSPF\u201d stands for Shortest Path First. It\u2019s used almost everywhere and the algorithm behind it is Dijkstra\u2019s. Even though its networking implementation is confusing, I highly recommend looking it up so you can understand the high-level image at&hellip;", "@pry0cc, there is a routing protocol known as OSPF where \u201cSPF\u201d stands for Shortest Path First. It\u2019s used almost everywhere and the algorithm behind it is Dijkstra\u2019s. Even though its networking implementation is confusing, I highly recommend looking it up so you can understand the high-level image at&hellip;", "Hey 0x00sec! I\u2019ll be taking a pause from my Data Structures series to introduce this community to Graph Theory with Dijkstra\u2019s Algorithm. I only just barely understand this, so bare with me. Graph Theory (Brief)There are two main types of graphs: Directed Graphs are graphs whose edges go a cert&hellip;", "As it doesn\u2019t look that @dtm is going to cover linux stuff, I have wrote a quick and dirty version of the great PE File Infector paper from @dtm but targeting ELF binaries specifically under GNU/Linux systems. The process I will describe is slightly different from the one explained in the PE counte&hellip;", "We did it! 100 users!Hello 0x00\u2019ers! A couple of weeks ago, this community started off as a fun new place to teach, learn and discuss Infomation Security, following the swift decline in activity at Nullbyte. Between three humble hackers on the #nullbyte IRC channel; Me, @oaktree and @unh0lys0da wor&hellip;", "We did it! 100 users!Hello 0x00\u2019ers! A couple of weeks ago, this community started off as a fun new place to teach, learn and discuss Infomation Security, following the swift decline in activity at Nullbyte. Between three humble hackers on the #nullbyte IRC channel; Me, @oaktree and @unh0lys0da wor&hellip;", "Buffer Overflow incoming", "Ok, I bit. I think I\u2019ve taken care of that.", "Buffer Overflow incoming", "Buffer Overflow incoming", "Hello there all, today we will be discussing packet forging. There are some uses for packet forging including (D)DOS\u2019ing, spoofing, MiTM attacks and way more that don\u2019t come to mind at the moment. While this may sound like a very difficult subject it is actually quite simple. Basicly it\u2019s just cop&hellip;", "I wish you and your family all the best. Be strong, positive and patient. Things will improve eventually. You are always welcome here. See you soon mate!", "I wish you and your family all the best. Be strong, positive and patient. Things will improve eventually. You are always welcome here. See you soon mate!", "C Language Issues -&gt; https://trailofbits.github.io/ctf/vulnerabilities/references/Dowd_ch06.pdf C Essentials -&gt; https://trailofbits.github.io/ctf/vulnerabilities/references/EssentialC.pdf Harverd CS50 Lectures -&gt; https://www.youtube.com/watch?v=zFenJJtAEzE&amp;list=PLhQjrBD2T383Xfn0zECHrOTpfOSlptPAB", "Machine-Level Representation of Programs -&gt;  https://2013.picoctf.com//docs/asmhandout.pdf x86 Assembly Guide -&gt; http://www.cs.virginia.edu/~evans/cs216/guides/x86.html Awesome Youtube Tutorials: SecurityTube -&gt;https://www.youtube.com/watch?v=K0g-twyhmQ4&amp;list=PLNIi5EjvIk-Hg4QWwUfZWAthbCpEwDAGv h&hellip;", "Alright here some good links/books for ASM: Books:John Bartlett - Programming From the ground upNASMLinuxx86 (32 bit)AT&amp;T Syntax (Hate AT&amp;T personally). http://mirror.unicorncloud.org/savannah-nongnu//pgubook/ProgrammingGroundUp-1-0-booksize.pdfPaul Carter - PC Assembly LanguageNASMLin&hellip;", "Mandatory reading for C coders http://c-faq.com/", "C Language Issues -&gt; https://trailofbits.github.io/ctf/vulnerabilities/references/Dowd_ch06.pdf C Essentials -&gt; https://trailofbits.github.io/ctf/vulnerabilities/references/EssentialC.pdf Harverd CS50 Lectures -&gt; https://www.youtube.com/watch?v=zFenJJtAEzE&amp;list=PLhQjrBD2T383Xfn0zECHrOTpfOSlptPAB", "Machine-Level Representation of Programs -&gt;  https://2013.picoctf.com//docs/asmhandout.pdf x86 Assembly Guide -&gt; http://www.cs.virginia.edu/~evans/cs216/guides/x86.html Awesome Youtube Tutorials: SecurityTube -&gt;https://www.youtube.com/watch?v=K0g-twyhmQ4&amp;list=PLNIi5EjvIk-Hg4QWwUfZWAthbCpEwDAGv h&hellip;", "C Language Issues -&gt; https://trailofbits.github.io/ctf/vulnerabilities/references/Dowd_ch06.pdf C Essentials -&gt; https://trailofbits.github.io/ctf/vulnerabilities/references/EssentialC.pdf Harverd CS50 Lectures -&gt; https://www.youtube.com/watch?v=zFenJJtAEzE&amp;list=PLhQjrBD2T383Xfn0zECHrOTpfOSlptPAB", "Machine-Level Representation of Programs -&gt;  https://2013.picoctf.com//docs/asmhandout.pdf x86 Assembly Guide -&gt; http://www.cs.virginia.edu/~evans/cs216/guides/x86.html Awesome Youtube Tutorials: SecurityTube -&gt;https://www.youtube.com/watch?v=K0g-twyhmQ4&amp;list=PLNIi5EjvIk-Hg4QWwUfZWAthbCpEwDAGv h&hellip;", "That\u2019s exactly why I\u2019m doing it!!! Also GPS\u2026", "Hello 0x00sec! Today, I\u2019ll be going over search(...), as promised. Basic Algorithm Descriptionsearch(...) will take one parameter q of type T, the value to look for in a linked list. The function returns a node&lt;T&gt;* (a pointer to a node in the list) if q is found; or nullptr if q is not found. Thi&hellip;", "Fyi Dijkstra\u2019s Algorithm is being used in routing protocols. Looking forward to it oakey.", "Quality as always pico, keep it up", "Quality as always pico, keep it up", "In Part I of this series we learn how to enable a very basic remote shell access to a machine. In this second part we are going to modify the code to support some level of manipulation of the data transmitted over the link. Specifically, we are going to encrypt the data stream\u2026 :o LEVEL: Beginner H&hellip;", "The above links are an interesting read for those who are/will be Computer Science students.", "The above links are an interesting read for those who are/will be Computer Science students.", "The above links are an interesting read for those who are/will be Computer Science students.", "Since tutorials are a very specialised and long standing thing, we have a slightly different perspective on how and where they should be posted. Tutorials will be posted on the main page https://0x00sec.org/ People can submit these tutorials using the Github pull request mechanism. All information&hellip;", "These lectures regarding computer science by David J. Malan are really helpful for beginners and even intermediates in programming. David has an amazingly in depth teaching style which he manages to accomplish via funny video clips and examples.The first 7-8 \u201cweek\u201d lectures have to do with C. C is a&hellip;", "These lectures regarding computer science by David J. Malan are really helpful for beginners and even intermediates in programming. David has an amazingly in depth teaching style which he manages to accomplish via funny video clips and examples.The first 7-8 \u201cweek\u201d lectures have to do with C. C is a&hellip;", "These lectures regarding computer science by David J. Malan are really helpful for beginners and even intermediates in programming. David has an amazingly in depth teaching style which he manages to accomplish via funny video clips and examples.The first 7-8 \u201cweek\u201d lectures have to do with C. C is a&hellip;", "Link: http://www.9tut.com/ This is a documentation regarding beginner-advanced networking topics.", "Sweet! Best of luck mate.", "Link: http://www.9tut.com/ This is a documentation regarding beginner-advanced networking topics.", "Link: http://www.9tut.com/ This is a documentation regarding beginner-advanced networking topics.", "These lectures regarding computer science by David J. Malan are really helpful for beginners and even intermediates in programming. David has an amazingly in depth teaching style which he manages to accomplish via funny video clips and examples.The first 7-8 \u201cweek\u201d lectures have to do with C. C is a&hellip;"]}