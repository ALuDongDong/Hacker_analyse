{"user": "Leeky", "history": ["sounds cool right? No. That\u2019s a bit stupid IMO. Here\u2019s my reaction when reading the project page: Meadow is the world\u2019s first, modern, secure, professional IoT platform. Hum??? It combines the best of all worlds; it has the power of RaspberryPi, the computing factor of an Arduino No, thi&hellip;", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "A few weeks ago the HackTheBox 0x00sec team was created and since then no less than 38 of our fine members have joined. In that time we have rocketed up to 113th place on the team leader-board (from 350th). This is no small accomplishment. I do, however, think we can do even better and get on the To&hellip;", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Awesome to finally get a Knowing Null about @0x00pf, like @pry0cc said, would for sure not be the same without his amazing posts!", "Hello again!It\u2019s been a while since the last Knowing Null. For those of you knew to the series, my name is skidd0 and Knowing Null is an interview series where I pester and prod the top minds of 0x00sec about themselves and then post it all publicly\u2013a dream come true for us paranoid hackers! Today&hellip;", "I\u2019m not an expert, but I know pentesters that do this. While they don\u2019t need to be signed by default I think this can be changed, but I don\u2019t remember where. I think one of the main things people I know use is Invoke-Obfuscation to obfuscate powershell scripts. For actually running the script XSL&hellip;", "The easiest option I can think of is fileless malware: malicious code that is loaded into memory without being stored on the disk. This kind of malicious code works by being passed on to a trusted program, typically PowerShell, through a delivery method that is usually a web page containing JavaScri&hellip;", "Awesome! Really cool to see another ctf this year!", "Awesome to see that project going down now! I hope everyone who participates will enjoy it a lot  ! Good luck and have fun in advance to everyone thinking about joining!", "Awesome! Really cool to see another ctf this year!", "Welcome to the inaugural Leap Security and 0x00sec CTF!! We have teamed up with the guys at Leap Security to bring you this challenging fun-filled event. The CTF has no limitations on participants as it is open to anyone (no registration required) \u2013 think of it as our gift back to the community!  [&hellip;", "Well anonymity, as with many things in life, is a spectrum. Short of not having a birth cert and ever having held gainful employment, someone knows who you are and what you\u2019re doing. I was reading a book a few weeks back about anonymity and a comparison was made that for the regular Joe Schmoe in t&hellip;", "Interesting and cool project! Reminds me of https://amiunique.org/ but with actually showing the tracking in action. I would argue though that normally there isn\u2019t any claim for Incognito mode to make you anonymous Where Chrome only says what it\u2019s meant for on their help page \u201cWhen you browse pr&hellip;", "Free malware tracker, still young: https://tracker.fumik0.com/", "Do you think that switching to your browser\u2019s private browsing mode or incognito mode will make you anonymous? Then click: https://www.nothingprivate.ml/ Don\u2019t actually use your real name  A cool little proof of concept, awareness-raising project", "Interesting and cool project! Reminds me of https://amiunique.org/ but with actually showing the tracking in action. I would argue though that normally there isn\u2019t any claim for Incognito mode to make you anonymous Where Chrome only says what it\u2019s meant for on their help page \u201cWhen you browse pr&hellip;", "Should add a password to it so: People know what they\u2019re unzipping and can\u2019t accidentally infect themselvesI can download it at school without alarms going off everywhere", "Performing a MITM attack on the .NETGuard desktop applicationAuthors:Washi, 766F6964 Abstract:Code obfuscation is a method of preventing third parties from reverse engineering the inner workings of software. One cloud-based service that provides this kind of protection for .NET applications is .&hellip;", "It\u2019s a pleasure man. You\u2019ve given so much to this community in terms of information, exposure and knowledge. Thank you dude for choosing 0x00sec as your home!", "I just wanted to thank everyone for helping this essay get widely distributed. Especially @pry0cc. And for everyone who is a part of 0x00sec.org: I have been in this game for awhile now. I pretty much kept to myself for years\u2026however, I believe our world is facing issues that we can only fix toget&hellip;", "For those interested in robotics and following from Robot Vulnerability Scoring System (RVSS) and Robot hacking: the Robot Security Framework (RSF), I\u2019m happy to share a recent work we\u2019ve made available called the Robotics CTF (or simple RCTF for short):  [image]The Robotics CTF is a platform for&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Writing in C would kinda defy the assembly part this series is about but I also think that it would be quite interesting. Problem with doing it in real mode is that most compilers don\u2019t support 16bit freestanding output but I have a few compilers to experiment with. So depending on my results with t&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Not the actuall BIOS is always on. Only the CMOS RAM,the memory BIOS settings (for example the boot sequence) are saved on, and the system clock are always powered by a small battery. They are getting powered so the system clock can run while the PC has no power and to keep the data in the CMOS RAM&hellip;", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Thanks alot for sharing your knowledge  this is information usually difficult to get explained, outside of a university course. This is also covered in the open source book \u201cOperating Systems - Three Easy Pieces\u201d. Very easy to read, but packed with much information! Operating System - Three Easy &hellip;", "Part #2 - A lot about Paging, a little about VirtualizationDisclaimer This article is based on extensive research and I am not an expert in this field. The only intention I\u2019ve got was \u201c to understand how virtualization is working and share it \u201d. Please tell me any mistake you discover. I will cor&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Tell Pikachu to use Flash. Bug fixed  But seriously, create series! Thanks for writing it.", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Tell Pikachu to use Flash. Bug fixed  But seriously, create series! Thanks for writing it.", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "I enjoyed this series very much, I hope you do a protected mode series:smiley:", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 7: Let\u2019s write a small game (2/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "@pry0cc This encouragement means a lot to me coming from you. I have always respected how you call things the way you see them. SNMP is still a goldmine, especially in the Industrial/Energy sector\u2026sneaky attacks like leveraging SNMP and SFTP to replace configuration files in all types of Iot/SCADA&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Well, obviously, every code has to run at some point on a CPU. But before hardware virtualization was there hypervisors did changed some instructions before executing them on the CPU (which can be seen as \u201cguest code never runs directly on the CPU\u201d). This is called Binary Translation and because ev&hellip;", "Note: Multiple edits for typos (the ghost of a learning disability mostly overcome) and additional image upload occurred between 21:10 EST, 9/30/18 &amp; 22:23 EST 9/30/18 Last year I released the essay Shared thoughts after 6+ years in pentesting: (Shared thoughts after 6+ years in Pentesting). I dec&hellip;", "The VMCS - Part #1EditAdded disclaimer and linksAdded navigation linksDisclaimer This article is based on extensive research and I am not an expert in this field. The only intention I\u2019ve got was \u201c to understand how virtualization is working and share it \u201d (a pretty naive target). Please tell me&hellip;", "Basics and lifecycle of a VM - Part #0EditAdded navigation linkssome restructuring in the link sectionDisclaimer This article is based on extensive research and I am not an expert in this field. The only intention I\u2019ve got was \u201cto understand how virtualization is working and share it\u201d (a pretty&hellip;", "Introduction: Hardware Virtualization - Part #4294967295Hey ho fellow 0x00ers, Over the last weeks I have researched and wrote some articles about hardware virtualization. Nearly half of the planned articles are done. I will finish the other ones when I have some more time. Anyway, the important &hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "HELL YEAH @Leeky, awesome man!", "HELL YEAH @Leeky, awesome man!", "Hello everyone, Following from Robot hacking: the Robot Security Framework (RSF) and seeing the good reception it had, I\u2019m sharing here another piece of our work that\u2019s been made publicly available: The Robot Vulnerability Scoring System (RVSS) is an open and free to access vulnerability scoring s&hellip;", "Wow Man! This is awesome. Good job @leeky!", "Wow Man! This is awesome. Good job @leeky!", "@Leeky CONGRATS!!! You TOTALLY earned it! I hope you do a write-up!", "@Leeky CONGRATS!!! You TOTALLY earned it! I hope you do a write-up!", "@Leeky, congrats man. Now @nugget and I would want to give you a special present.", "@Leeky, congrats man. Now @nugget and I would want to give you a special present.", "Everyone give a big hands up, thump up, sexual massage or big lovin to our resident matey boy @Leeky for REKIN flare-on check his scores!  [ef3090676d0c76993e98ca1c3504629b]Leeky&gt; 250 hours over 2 months! I have never been so sore but it was worth it in the end, even if it did end up so sticky L&hellip;", "Everyone give a big hands up, thump up, sexual massage or big lovin to our resident matey boy @Leeky for REKIN flare-on check his scores!  [ef3090676d0c76993e98ca1c3504629b]Leeky&gt; 250 hours over 2 months! I have never been so sore but it was worth it in the end, even if it did end up so sticky L&hellip;", "Hey all a small c# challenge RE I made for leeky and lkw on IRC, they appeared to like it! so I thought I would post it here. My first try at writing one of these so feedback welcome  https://1drv.ms/u/s!AkvwG6Qrk79x3Th-paeLebwfmC_y Good luck have fun  The archive type is 7zip availible here: ht&hellip;", "Since I haven\u2019t been so active in the past few months because of my lack of time, I\u2019m coming back with some new knowledge to spread around. The 0x00sec drone is on the way to be accomplished right? So why not understand how drones generally work and even build your own. Disclaimer: All the informat&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Hi A while ago I did a presentation on reverse engineering for a group at a local uni. I thought the slides and binaries I used could be useful, so I\u2019m posting it here. I\u2019d like to point out that many of the binaries I used are not mine, many came from skidophrenia which was hosted on ctfd.io by @&hellip;", "Hi A while ago I did a presentation on reverse engineering for a group at a local uni. I thought the slides and binaries I used could be useful, so I\u2019m posting it here. I\u2019d like to point out that many of the binaries I used are not mine, many came from skidophrenia which was hosted on ctfd.io by @&hellip;", "If you want to see young and talented check out the work of @exploit, he\u2019s 16, and has been doing this since he was 13.", "Clientside Exploitation - Tricks of the Trade 0x01 - Sharpshooter + SquibblyTwoHi! I hope you\u2019re well, today I am going to show you something that is common knowledge in the red teaming community, people use this kind of thing every day without thinking about it. However, if you\u2019re new to security,&hellip;", "Exactly 100 days ago from my writing this, my lab access for Penetration Testing With Kali (PWK) began. PWK is a course offered by Offensive Security intended to prepare you for the OSCP certification exam, a grueling 24 hour endeavor where you must hack roughly 4 out of 5 computers assigned to you &hellip;", "This weekend we participated in Whitehatvn Grandprix CTF and this is one of the 2 real challenges we managed to solve. Big thanks to @L0k1 for executing exploit while challenge was officially down, getting us flag quicker (and for being help in brainstorming). Description: manhndd is running a s&hellip;", "If you\u2019ve never done a CTF before, this is your chance! They are security challenges people create to up your skills. THIS is how you get better at security. THE GRIND!!! This appears to be a beginner CTF. Categories include: RE, pwnable, cryptography, forensics, websec, misc Pick one you want&hellip;", "The thesis I presented for my diploma was about physical security, with BadUSB devices taking the most amount of pages. I saw there\u2019s already a pretty good post on how to make your own BadUSB starting from a vulnerable stick (click) but I\u2019d like to make another contribution in the same subject by pr&hellip;", "Introduction to Quantum Computing :: Part #1Hello everyone, I hope you are having a wonderful week, day or month. My name is Thirsty-Robot a wannabe hacker that is not really into hacking. I enjoy it, but what I\u2019m really into is theoretical computer science, and also programming. For the past 2 mo&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "hahhaha\u2026god mode on", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "Greetings my fellow hackers, As we continue with our series, the AMUNET app becomes complicated with new functionalities and structures to understand. We\u2019ll sail right through. As stated earlier in previous tutorials, the app doesn\u2019t fully exists because I build them before I share so forgive me if&hellip;", "Was fun. Registering each time it starts was too annoying tho\u2019 so I fixed that. Also a registered user has no use for a register button so I removed that as well. [image] [image] Pretty dirty, just some string editing", "This post is part three of a multi-part series. If you haven\u2019t already, please read parts one and two. It\u2019s been a while\u2026Sorry for the extreme (four month!) delay on this series. I got busy with other things and it became hard to return to it, being unsure if anyone would still be interested. Anyw&hellip;", "Hey guys, back with just another casual article from me this time around since one of my projects failed miserably and I don\u2019t really have the time for another serious one. Also I\u2019ve getting into something new, as you may have already guessed, kernel-mode development! Yeah, pretty exciting stuff and&hellip;", "What concepts are you referring to? I can agree with this however, in my (limited) experience, many techniques that are present in Practical Malware Analysis are still used. Generally, evolving tools shouldn\u2019t be a problem. What one should focus on when reading outdated resources is the underlyin&hellip;", "Here\u2019s all the malware I\u2019ve been collecting from my honeypot. Enjoy the Park! [image]", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "IntroductionThis paper is how to setup your own Honeypot (dionaea). I would say most of us like Reverse Engineering binaries. Many of us have a fascination with malware. Why not combine them and RE some Malware that\u2019s actively being used for exploitation? My tutorial is how to setup a honeypot on &hellip;", "Welcome back to Knowing NullKnowing Null is a series of interviews randomly conducted on the 0x00sec IRC server and compiled here for your convenience. Today\u2019s guest is the ever present pry0cc! But, first, a poll! Who do you want to see next time?fraqdtmricksanchezzSecsprtn0x00pfPhoenix&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Greetings my fellow hackers, As we continue with our series, the AMUNET app becomes complicated with new functionalities and structures to understand. We\u2019ll sail right through. As stated earlier in previous tutorials, the app doesn\u2019t fully exists because I build them before I share so forgive me if&hellip;", "Hello folks, today I\u2019m going to continue The Red Triangle series. If you haven\u2019t seen the first one yet, you can check it here:  [ARG] The Red Triangle Solving \u2014 Part 1 Last time, we have deciphered the Monoalphabetic Substitution symbols from the images and got a link to google drive, that lead u&hellip;", "Exploitation in 2018 - How Pentesting Has ChangedHi 0x00sec! This is the next installment of my pentesting series. If you missed my last two articles, you can read the first one here and the second one here. They are heavily OSINT focussed, and naturally, the next article should be about active rec&hellip;", "Greetings my fellow hackers, As we continue with our series, the AMUNET app becomes complicated with new functionalities and structures to understand. We\u2019ll sail right through. As stated earlier in previous tutorials, the app doesn\u2019t fully exists because I build them before I share so forgive me if&hellip;", "I\u2019m a bit sad that I didn\u2019t found an alternative solution, but whatever. Was fun  echo -ne \u201c\\x01\u201d | dd of=babyelf_revenge seek=781 bs=1 count=1 conv=notrunc with the \u201cpassword\u201d of \u201ckek\u201d.", "I\u2019m a bit sad that I didn\u2019t found an alternative solution, but whatever. Was fun  echo -ne \u201c\\x01\u201d | dd of=babyelf_revenge seek=781 bs=1 count=1 conv=notrunc with the \u201cpassword\u201d of \u201ckek\u201d.", "Thanks for the challenge mate. Pretty cool. I believe it is actually a 2 bits patch . echo -ne \u201c\\x01\u201d | dd of=test1 seek=$((0x308 + 0x5)) bs=1 count=1 conv=notrunc I believe I just get home earlier than @Leeky", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "I\u2019m a bit sad that I didn\u2019t found an alternative solution, but whatever. Was fun  echo -ne \u201c\\x01\u201d | dd of=babyelf_revenge seek=781 bs=1 count=1 conv=notrunc with the \u201cpassword\u201d of \u201ckek\u201d.", "Thanks for the challenge mate. Pretty cool. I believe it is actually a 2 bits patch . echo -ne \u201c\\x01\u201d | dd of=test1 seek=$((0x308 + 0x5)) bs=1 count=1 conv=notrunc I believe I just get home earlier than @Leeky", "@Leeky and @0x00pf solved it in no time? hmmmm\u2026 I might just look into the first one aswell.", "BabyELF RevengeDescriptionA BabyELF sequel since @0x00pf and @Leeky  nailed it in no time (I hope this one cannot be solved the same way ). RulesMake the binary display Congrats!Patch more than 4 bits and you\u2019re disqualified. Don\u2019t patch any instruction!Binarybase64 -d dump | gunzip &gt; &hellip;", "Not bad at all  The intended patch required ELF mastery, but a patch is a patch. Feel free to look through the spoiler tags or try a lil\u2019 harder", "I\u2019m not sure if this was the intended way. Was fun though  echo -ne \u201c\\x65\u201d | dd of=babyelf seek=4152 bs=1 count=1 conv=notrunc", "I\u2019m not sure if this was the intended way. Was fun though  echo -ne \u201c\\x65\u201d | dd of=babyelf seek=4152 bs=1 count=1 conv=notrunc", "Hello fellow nerds, today I have decided to write a little article about my journey in resolving the Red Triangle ARG. So here we are ! Getting startedOnce you open the link you are prompted with a Red triangle on top, some hex encoded text below, a nice music played and 3 images: Two of them ha&hellip;", "PrefaceHi folks! For quite some time there was no article from my side. Life kept me busy with all sorts of things, but here is a little something until some cooler project emerges  . This article will focus on explaining the ELF file format. While this may seem like a really boring and very th&hellip;", "BabyELF                        _..--&quot;&quot;&quot;&quot;--...___                 .---,                      ,&#39; \\               `&#39;--.___        /   /                     /`\\  \\                      ``&#39;&#39;--:&#39;`--&#39;                    (  ,&#39;. &#39;.              _____..--&#39;&#39;`                    )__/`-&#39;._;__       .-&#39;`  &hellip;", "Who are these scrublings? I want to see @0x00pf.", "Welcome to the first Knowing Null interview, a serious randomly conducted on the 0x00sec IRC server and compiled here for your convenience. Today\u2019s guest is non other than 0x00sec\u2019s premier benefactor, l0k1! But! Before we jump in, who do you want to see next?suserfraqpry0ccricksanchez0&hellip;", "[+] THE COURSE OF THE EVIDENCE From the actual incident / crime to the probative presentation, digital evidence is subject to various phases, as defined in the context of digital forensics. To summarize: Course 1: the digital evidence is directly identified (by the system it\u2019s stored in, for exam&hellip;", "Greetings my fellow hackers, As we continue with our series, the AMUNET app becomes complicated with new functionalities and structures to understand. We\u2019ll sail right through. As stated earlier in previous tutorials, the app doesn\u2019t fully exists because I build them before I share so forgive me if&hellip;", "[+] METHODOLOGY AND PROCESS MODEL Today\u2019s digital world is perpetually evolving, becoming an intrinsic part of our lives, reaching almost every aspect of our society. Criminal Investigations are no exception. However, having technical knowledge and using tools alone is not enough to fully and prope&hellip;", "Hello again! The results of the poll from my last post are very clear, so I\u2019ve decided to go forward with the \u201cIntro to Digital Forensics\u201d topic Like I previously mentioned, this post will cover various topics regarding Digital Forensics, hopefully serving as a good introduction to the field. I\u2019m n&hellip;", "Leeky you crazy ass &lt;333", "Leeky you crazy ass &lt;333", "Was fun!  VM{LooP_tH3_l00p}", "Was fun!  VM{LooP_tH3_l00p}", "Was fun!  VM{LooP_tH3_l00p}", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "I don\u2019t really have much in terms of a fancy desktop, I spend most of my life in Vim anyway.  [screenFetch-2018-06-01_12-06-06]The screenshot there is from my laptop, a 2015 MacBook Pro - in my opinion still the best model. Anyway, onto the software I use! My config is not quite as consolidated a&hellip;", "Good day all, I have a fun project I would like to invest some time into and am interested if anyone would like to join me on the voyage. Quite simply it is an extension of a honeypot, though one with an odd response. When an inbound attack is sent it is caught and run through an engine I will de&hellip;", "Programming Turing Machines: High-level approachIf you\u2019ve got the hang of Turing machine procedures down, at this point you should be able to write your own with relative ease.  If you aren\u2019t comfortable with them yet, revisit the last section of the previous topic (feel free to use the comments se&hellip;", "Programming Turing Machines: ImplementationTo continue where we left off from the previous topic, I will begin discussing my Python implementation of a Turing machine.  The fun part about implementation is that you don\u2019t always have to be as explicit as you do when defining a model mathematically. &hellip;", "Programming Turing Machines: IntroductionBack again with another theory-heavy topic!  The project I\u2019ve been working on is quite extensive so it will be split into three parts: IntroductionImplementationHigh-level ApproachAs these topics are created, they will be linked together for easy navig&hellip;", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "Or your math homework. Or anything, really. Z3\u2019s rad.  What is Z3?Z3 is an open-source theorem prover by Microsoft (yes, seriously). In layman\u2019s terms, you can give it any mathematically expressable problem and it will tell you if there is a solution for it and what the solution is. It\u2019s not only &hellip;", "[image]           So, that\u2019s my A E S T H E T I C setup. The wallpaper changes it\u2019s color and brightness based on time. This is the evening/morning wallpaper, the night one is darker and purplish, the day one is brighter and overall more day-ish. I gave Gnome3 a try just &hellip;", "Similar to my previous crackme, another test application for a personal project that I am developing. DifficultyAuthor Assigned Level: \u00af\\_(\u30c4)_/\u00afCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters ObjectiveFind the correct key.Rules of EngagementNone.Binary&hellip;", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "LOL IT\u2019S ONLY MS DOS. Nice dude.", "LOL IT\u2019S ONLY MS DOS. Nice dude.", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "I personally prefer the classics of Microsoft. Me reading this post: [Lynx] On irc: [jrirc] Debugging things and stuff! [debug]", "You all lost\u2026 Desktop (pls ignore my waifu):  [desktop]Miscellaneous stuff that I do:  [olly]This isn\u2019t even a contest\u2026 try harder next time please.", "My Introduction First, I would like to thank 0x00sec for providing such a great community. I would also like to thank Arrogant Bastard, Sierra Nevada and Deathwish Coffee for providing the sustenance necessary for starting and completing the following series. Not only should you get drunk while com&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "ARM Crackme - Data Processing@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some challe&hellip;", "Was fun!  The flag is VM{M4TR1X}", "OSINT 0x02 - LinkedIn is not just for jobsSup 0x00\u2019ers, that\u2019s right, I am back with another banger of an article, ready? If you read my last article on OSINT, you\u2019ll know a little bit on how to find dirt on companies, their assets, and how to do all of that passively. Well now I am going to show &hellip;", "Finally managed to finish it too  $ ./crackme VM{M4TR1X} Congratulations! You did it!", "Great challenge. Flag: ARM{FL4G_PR0C33S1NG}Python 2.7 solver: from __future__ import print_functionimport binasciipart1 = 0x12345678 ^ 0x69790439part2 = 0xC2819E87 - part1part3 = (part2 + 0xE91E0419) &amp; 0xffffffffpart4 = (part3 - 0xDD1F1D1C) &amp; 0xffffffffpart5 = (0xD07A8174 - part4) &amp; 0&hellip;", "Was fun!  The flag is VM{M4TR1X}", "ARM Crackme - Data Processing@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some challe&hellip;", "Was fun!  The flag is VM{M4TR1X}", "Was fun!  The flag is VM{M4TR1X}", "This is a PoC-style test run for an application that I am currently developing as a personal project. Should anything weird happen, please report it to me and I\u2019ll try to fix it. This is just a simple crackme so it shouldn\u2019t be too hard once you start to figure out what\u2019s happening\u2026 maybe\u2026?  Diffic&hellip;", "OSINT - Passive Recon and Passive Discovery Of AssetsSup 0x00\u2019ers, to kick this badass series off, I am going to begin with the most important aspect of pentesting. Passive Recon and OSINT. Now, do not let the word \u2018passive\u2019 fool you. This is no light recon, you can uncover vast amounts of infomati&hellip;", "Hello folks! I hope you\u2019re all doing great. After a disgusting amount of trial and error, I present to you my solution for the console pwnable. Unfortunately, I did not solve the task on time but it was fun nevertheless. I decided to use this challenge as a way to introduce to you one of the ways yo&hellip;", "Thank you for the crackme ! It\u2019s really fun to learn ARM with these ! Here is the key  :  ARM{FL4G_PR0C33S1NG} my script : https://pastebin.com/6L59dLhL", "ARM Crackme - Data Processing@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some challe&hellip;", "ARM Crackme - Data Processing@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some challe&hellip;", "ARM Crackme - Data Processing@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some challe&hellip;", "Message to Mods: I don\u2019t know what category to put this inBDE is a project im working on to get all the data i can from the SQL tables each browser saves Author Assigned Level: WannabeCommunity Assigned Level:NewbieWannabeHackerWizardGuru0voters Show resultsRequired Skills&hellip;", "Ah, no wonder the json looked funny, I was wondering why it had the single quote and a \u2018u\u2019. Also, is my library messed up or am I not doing it right, I keep getting the loads error Traceback (most recent call last):  File &quot;example.py&quot;, line 13, in &lt;module&gt;    msgs = json.loads(TN.getMessages()) &hellip;", "Good challenge. A great way to learn foreign archs. A one-liner python solution.     &#39;&quot;&quot;.join(map(lambda x: chr(int(x, 16)^0x5c), \u201c1D 0E 11 27 0F 6D 11 0C 10 6F 03 6F 6C 0E 21\u201d.split()))", "A bit hacky but should work if you aren\u2019t actually using unicode characters: import jsonweird_json = &quot;{u&#39;status&#39;: {u&#39;user_timestamp&#39;: u&#39;2018-05-07T00:00:52Z&#39;, u&#39;num_devices&#39;: 2, u&#39;features_version&#39;: u&#39;*********&#39;, u&#39;latest_message_id&#39;: 22541205234, u&#39;settings_version&#39;: u&#39;1104&#39;}}&quot; #your json string &hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "IntroSecond write-up here; this is something I just happened upon today while (super) bored at work.  I\u2019m not a math/algorithm nerd by any means, but I did find this pretty fascinating.  This will walk you through what I found and how I moved forward with it. If anyone knows of an official name fo&hellip;", "Suser would like for me to say that he was here, but he never gets on the forum, so he wasn\u2019t.", "yes, please do more of these  binaries welcome too\u2026", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "PrefaceThis quick article will give a short introduction on what fuzzers are, how they work and how to properly setup the afl - american fuzzy lop fuzzer to find flaws in arbitrary projects. Well known alternatives to afl (for the same or other purposes): boofuzz: Network Protocol Fuzzing for Hu&hellip;", "A few months ago I wrote up a silly project to implement purely in memory SO (shared object) loading via the memfd_create syscall. I forgot to include y\u2019all in the fun and I am sorry . Sho\u2019 nuff\u2019 this is possible in just a few lines of python. I wrote it up as a class and it still is less than 20&hellip;", "I love the fact that this has to do with processor arch. Give us more", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "Thank you for the challenge, pretty cool ! I did it without the binary and get the password : ARM{S1MPL3_30R} with the following script : import sys encrypted_password = \u201c1D 0E 11 27 0F 6D 11 0C 10 6F 03 6F 6C 0E 21\u201d decrypted_password = [int(x,16)^0x5c for x in encrypted_password.split()[:&hellip;", "ARM Crackme - Starting with EOR@Wunkolo and I have decided that there aren\u2019t enough ARM crackmes on the forum and that we should add a few for people that are interested in learning how the architecture works and for those that just want to show their skills  We will start very easy with some chal&hellip;", "Ok, so I\u2019ve solved it but I\u2019m not too sure how much information you actually want so I guess I will just split it into two spoiler tags  What does the binary want from me?A quick look into the binary tells you that it reads in 33 characters  (32 actual characters and the last one as a terminato&hellip;", "Ok, so I\u2019ve solved it but I\u2019m not too sure how much information you actually want so I guess I will just split it into two spoiler tags  What does the binary want from me?A quick look into the binary tells you that it reads in 33 characters  (32 actual characters and the last one as a terminato&hellip;", "That was fast and impressive, Leeky. Many thanks! I found the password after reading your description. I will have to investigate disassembly more to understand better. But with your description I may understand the instructions!", "That was fast and impressive, Leeky. Many thanks! I found the password after reading your description. I will have to investigate disassembly more to understand better. But with your description I may understand the instructions!", "Ok, so I\u2019ve solved it but I\u2019m not too sure how much information you actually want so I guess I will just split it into two spoiler tags  What does the binary want from me?A quick look into the binary tells you that it reads in 33 characters  (32 actual characters and the last one as a terminato&hellip;", "Ok, so I\u2019ve solved it but I\u2019m not too sure how much information you actually want so I guess I will just split it into two spoiler tags  What does the binary want from me?A quick look into the binary tells you that it reads in 33 characters  (32 actual characters and the last one as a terminato&hellip;", "Welcome to 0x00sec!  Knowing how to create undetectable payloads naturally requires you to understand how anti-virus software works so if you do not understand this then it\u2019s pretty hard to know what to do. I\u2019d highly recommend you do some reading on not only this but also on how the Windows operat&hellip;", "Welcome to 0x00sec!  Knowing how to create undetectable payloads naturally requires you to understand how anti-virus software works so if you do not understand this then it\u2019s pretty hard to know what to do. I\u2019d highly recommend you do some reading on not only this but also on how the Windows operat&hellip;", "https://www.phishtank.com/phish_search.php?verified=u&amp;active=y (Active Phishing  Urls)http://www.virussign.com/ (Malware Packs) 3.http://vxvault.net/ViriList.php?s=40&amp;m=40 (Malware Sources) 4.http://siri-urz.blogspot.com/  (Malware Blog) 5.http://malc0de.com/database/  (Malware Sources) 6.6.h&hellip;", "I don\u2019t know the internals of ngrok enough to know if this is a good idea. But anyways, I tried a bit around with it and got it a working connection through torify ./ngrok http 80 I would assume connecting through tcp would work as well? I\u2019m a bit confused by that. Next I read a bit through the d&hellip;", "@_py   I\u2019m not that good with ARM actually. @Wunkolo seems to know a lot more than me. (I can also really recommend GPATEK and Tonc for learning ARM as the GBA kinda forces you to use normal ARM and THUMBS as the different memory regions have different IO sizes, I\u2019ve just experimented with it a li&hellip;", "Finally I reached something important and got it to work  First I don\u2019t know how it worked and thus I may have miss-understand for if really Tails flows all traffic through tor or not. The solution was in the previous quote, I put : ./ngrok tcp -config=./ngrok.yml 8920 8920 is example of port n&hellip;", "Finally I reached something important and got it to work  First I don\u2019t know how it worked and thus I may have miss-understand for if really Tails flows all traffic through tor or not. The solution was in the previous quote, I put : ./ngrok tcp -config=./ngrok.yml 8920 8920 is example of port n&hellip;", "Sounds like an idea. I haven\u2019t been able to join the irc at all lately though for some reason but I\u2019m up for making some little challenges based in ARM.", "@BlackSteelCannon oh I didn\u2019t try this on Tails, I just assumed that it would run there as well. I used a Whonix VirtualBox VM installation for my second try that routed all traffic through tor. The initial test that with torify and the ngrok configuration was done on a plain Ubuntu VM.", "Sounds like an idea. I haven\u2019t been able to join the irc at all lately though for some reason but I\u2019m up for making some little challenges based in ARM.", "@Leeky Good to here this  , Can you tell me the setting of your (Tails) you used (i.e : Vm or on live usb, ngrok was on persistent volume, \u2026 etc ) I tried what you tried in my VM and no success. This makes me think again that it is something related to permissions and VM or something like this.", "I don\u2019t know the internals of ngrok enough to know if this is a good idea. But anyways, I tried a bit around with it and got it a working connection through torify ./ngrok http 80 I would assume connecting through tcp would work as well? I\u2019m a bit confused by that. Next I read a bit through the d&hellip;", "I don\u2019t know the internals of ngrok enough to know if this is a good idea. But anyways, I tried a bit around with it and got it a working connection through torify ./ngrok http 80 I would assume connecting through tcp would work as well? I\u2019m a bit confused by that. Next I read a bit through the d&hellip;", "There\u2019s an ARM legend staying quiet in between us. I summon you, @Leeky.", "@_py   I\u2019m not that good with ARM actually. @Wunkolo seems to know a lot more than me. (I can also really recommend GPATEK and Tonc for learning ARM as the GBA kinda forces you to use normal ARM and THUMBS as the different memory regions have different IO sizes, I\u2019ve just experimented with it a li&hellip;", "There\u2019s an ARM legend staying quiet in between us. I summon you, @Leeky.", "I don\u2019t know the internals of ngrok enough to know if this is a good idea. But anyways, I tried a bit around with it and got it a working connection through torify ./ngrok http 80 I would assume connecting through tcp would work as well? I\u2019m a bit confused by that. Next I read a bit through the d&hellip;", "Thumb code is just one of the facets of the ARM arch so it might be hard to find a book or discipline around just Thumb code in particular. Thumb is just a subset of sorts for an ARM processor so once you learn the ARM side of things, you\u2019ll find that Thumb code is just one particular feature of mos&hellip;", "Thanks! That was definitely helpful! Do you know some good books (or other resources) on ARM, more particularly, Thumb? I have messed a bit with x86 binaries and those are easy to understand because you have an entry point. I am interested in reverse engineering more physical devices like this but I&hellip;", "Hello all, Nestor10 here to share a couple things I\u2019ve learned in my day job as an infosec samurai. If you want to know some vague things about me, you can check out my introduction. So a few months ago, I noticed some emails coming in with really sketchy attachments - a few dozen had been delivere&hellip;", "I managed to open the 1.33 firmware file just fine in IDA Pro after reading the data-sheet and knowing where certain addresses should be mapped to. Here\u2019s the datasheet for the STM32F103 Check out the memory map of Section 4 to give you some insight on the address space so you\u2019ll know where to map&hellip;", "Here is what I use most often these days: STM32 Nucleo F411RE development board http://www.st.com/en/evaluation-tools/nucleo-f411re.htmlIceStorm + BlackIce II, ICE40 FPGA development board https://www.tindie.com/products/Folknology/blackice-ii/BusPirate v4 https://www.seeedstudio.com/Bus-Pirat&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Userland API Monitoring and Code Injection DetectionAbout This PaperThe following document is a result of self-research of malicious software (malware) and its interaction with the Windows Application Programming Interface (WinAPI). It details the fundamental concepts behind how malware is able to&hellip;", "Firstly, due to my insane schedule, I do not get to interact with all of you as I would like. Let me take this opportunity to state that many of you are doing incredible work with the content of your posts; I do read just about everything released here on the Big 0; I am proud to be here among such&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "New ASLR bypass presented in March 2018 Do you come from the future?! O.o", "I need to take a long shower after this.   [image]Find __vbaFileOpenIdentify single-key XOR-decoded keyfile.dat stringNo more luck trying with debuggingThrow into API monitorIdentify required key string length of 14Set random key with 14 charactersIdentify secondary string I`sldqmdk(&lt;=2T&hellip;", "PrefaceHey there! I\u2019m finally ready to present you the third installment of the series exploit mitigation techniques. The last two times we talked about Data Execution Prevention and Stack Canaries Today I want to talk about Address Space Layout Randomization or ASLR in short. Format wise the a&hellip;", "Tutorial: Creating Yara Signatures for Malware DetectionIntroductionWe all know it\u2019s way more fun to hack shit than to patch shit. That said, not all employers will be satisfied with a hacker who can only compromise systems. Some companies want security researchers that are able to apply patches b&hellip;", "For context, @Leeky was the highest scoring member on our CTF. He is probably the best pwner on this forum (excluding @exploit, @_py, @dtm  + @0x00pf) since they all were involved in CTF development.", "Was an interesting challenge, looked way easier at first sight turned out it took me way longer than expected. Had lots of fun though!  [image] My solution was to hook the entiere msvbvm60.dll to see what the obfuscated code calls, which then lead me to VarTstNe  where I then simply dumped the c&hellip;", "Hmm I think I worked 3 hours on it, rating the difficulty and fun in numbers though is pretty hard for me as I\u2019m not really good at this.", "Was an interesting challenge, looked way easier at first sight turned out it took me way longer than expected. Had lots of fun though!  [image] My solution was to hook the entiere msvbvm60.dll to see what the obfuscated code calls, which then lead me to VarTstNe  where I then simply dumped the c&hellip;", "Hmm I think I worked 3 hours on it, rating the difficulty and fun in numbers though is pretty hard for me as I\u2019m not really good at this.", "Awesome man, congratulations  May I ask you some questions? How time did you spend on this crackme?From 1 to 10, how is the difficult of this crackme?From 1 to 10, how fun was to solve this crackme?Thanks!", "Was an interesting challenge, looked way easier at first sight turned out it took me way longer than expected. Had lots of fun though!  [image] My solution was to hook the entiere msvbvm60.dll to see what the obfuscated code calls, which then lead me to VarTstNe  where I then simply dumped the c&hellip;", "Hi all! My first contribution in this community  I coded a small crackme for you, don\u2019t know if this crackme is for advanced users or not, depending on the results I will change the difficult for future crackmes GOALGuess and post here the correct serial/key for this crackmeYou can crack or pat&hellip;", "In the name of Allah, the most beneficent, the most merciful. Hello everyone, i\u2019ll be writing how it was expected for the tasks I made to be solved.  I finally found some free time, sorry for the late post. So, this article will be splitted to two main parts: I. babyheap II. left I. babyheap&hellip;", "This is the moment I\u2019ve been waiting for my entire life. Ima write an bomb ass article and get that license. I should also make a point to write on, once a month at least. If we get a good amount of people doing that, we\u2019ll have much content.", "PrefaceA file inclusion vulnerability is a type of vulnerability that is most commonly found to affect web applications that rely on a scripting run time. This issue is caused when an application builds a path to executable code using an attacker-controlled variable in a way that allows the attac&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Freestyle February: A 0x00sec Article ContestHello 0x00ers! The 0x00sec Staff is happy to announce our first annual Freestyle February! Here\u2019s how it works: Take up until the last day of February to research something technical, something from which the 0x00sec community might benefit. Then, po&hellip;", "This is amazing. This is what an awesome hacking community like this does. Good job everybody involved!", "IIRC, the command was Get-Variable | format-list Name, Value &gt;dump.txtwhich does, unfortunately, truncate the variables. If you want the full values, you can use this (generates ugly unformated output): Get-Variable | Select -Expand Value &gt;dump.txt", "DISCLAIMER: The following post contains a virus sample. If you decide to mess with it you do so at your own risk. Do not go running it on your computer, at least use a VM. Some random new \u201cuser\u201d called @the_heat_man posted some files on the forums multiple times (after being deleted by mods) calimi&hellip;", "DISCLAIMER: The following post contains a virus sample. If you decide to mess with it you do so at your own risk. Do not go running it on your computer, at least use a VM. Some random new \u201cuser\u201d called @the_heat_man posted some files on the forums multiple times (after being deleted by mods) calimi&hellip;", "Note: This is a repost from my personal blog GIF/Javascript Polyglots: Abusing GIFs, tags, and MIME types for evil6 minute read The backstoryRecently I saw a feature on a product I work on where we allowed hotlinking to arbitrary gifs without pulling them in, mangling, and then saving for our ow&hellip;", "PrefaceHey there! After quite some time the second part will be finally published  ! Sorry for the delay, real life can be overwhelming ;)\u2026 Last time I have introduced this series by covering Data Execution Prevention (DEP). Today we\u2019re dealing with the next big technique. As the title already&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "very awesome series , thank you very much @Leeky", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "very awesome series , thank you very much @Leeky", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Write an OS just for playing games, can\u2019t get any more optimized than that", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "But first we have to beat secure boot Which happens to made to stop exactly that by using a computed hash at runtime", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "Realmode Assembly - Writing bootable stuffPart 6: Let\u2019s write a small game (1/2)What is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal pr&hellip;", "READMEIf your antivirus detects this page as malicious, it is most probably because I have pasted some scripts into the article. Do not be alarmed! IntroductionVery recently I\u2019ve (finally) set up a proper malware analysis VM and so I thought that it would be super fun to download some samples fro&hellip;", "Thanks for the writeup @0x00pf! I spent quite a bit of time with that challenge but in the end I was stuck because I didn\u2019t know how to patch the ELF header and wasn\u2019t able to run it in gdb as a consequence (I found the environment variable checking code but failed at actually executing it with the&hellip;", "Thanks for the writeup @0x00pf! I spent quite a bit of time with that challenge but in the end I was stuck because I didn\u2019t know how to patch the ELF header and wasn\u2019t able to run it in gdb as a consequence (I found the environment variable checking code but failed at actually executing it with the&hellip;", "The hardest GNU/Linux reverse engineering in the 0x00sec CTF 2017 event was OBFTEANATION. Only 2 person solved this challenge during the competition, so I guess some of you have been waiting for this write up. I just wrote it to be hard but I didn\u2019t try to solve it myself until now. Of course it is&hellip;", "Thanks for the writeup @0x00pf! The challenge was quite fun and easy to solve after spotting the ninja way  Can\u2019t wait for the next writeups!", "Thanks for the writeup @0x00pf! The challenge was quite fun and easy to solve after spotting the ninja way  Can\u2019t wait for the next writeups!", "Thanks for the writeup @0x00pf! The challenge was quite fun and easy to solve after spotting the ninja way  Can\u2019t wait for the next writeups!", "Very neat and detailed writeup @0x00pf . Good job on this. I love it for a beginner/entry challenge, since it\u2019s not just plain reversing on easy mode, but essentially teaches you to understand and especially read the code carefully. If you can do this you can easily spot the ninja way  . If not y&hellip;", "Shuffled Love (you need to register) was one of the Linux 64bits reverse challenges available to be solved during the recent 0x00Sec CTF Winter 2017 edition. This challenge was intended to be easy and at the end 42 persons were able to solve it. Before continuing, I\u2019d like to say that there are man&hellip;", "You can expect these in the weeks to come  stay tuned!", "I want to see some write-ups, i am still learning in the area of reversing and love reading write-ups about ctf\u2019s", "Hi 0x00\u2019ers, and all those that took part in 0x00ctf 2017! First off, we want to thank all of our challenge creators, admins, and participants. CTFs are a great opportunity for us as a community to sharpen our skills, challenge ourselves and each other with new problems, and meet new people who sha&hellip;", "Hi 0x00\u2019ers, and all those that took part in 0x00ctf 2017! First off, we want to thank all of our challenge creators, admins, and participants. CTFs are a great opportunity for us as a community to sharpen our skills, challenge ourselves and each other with new problems, and meet new people who sha&hellip;", "PrefaceWelcome to a new series about GNU/Linux exploit mitigation techniques. We always had these awesome pwn and how2exploit articles. I wanna shift the focus to the bypassed techniques to create a series about  currently deployed approaches. Afterwards I\u2019d like to focus on their limitations wi&hellip;", "Only 5 days guys! Get ready!", "thank you @Leeky I hope the article helps you a lot", "Using LEDs as inputs is pretty interesting! Didn\u2019t know that was possible (and it\u2019s actually useful for me), thanks for the article.", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "IntroI\u2019m new to everything demonstrated below, so be forewarned of potential errors.  This technique of drawing the stack was something a professor hammered into the class this year.  Let\u2019s dive in! Author Assigned Level: NewbieCommunity Assigned Level:NewbieWannabeHackerWizardGuru0&hellip;", "That is not always the case, but it is true that is the most common case. This is actually platform/processor dependant.", "Using LEDs as inputs is pretty interesting! Didn\u2019t know that was possible (and it\u2019s actually useful for me), thanks for the article.", "Aren\u2019t all sub-categories already available as tags? Removing sub-categories sounds pretty reasonable considering you can still categorize it the same way by just using  tags (but in a less confusing way as you wouldn\u2019t have tags that may or may not include the sub-category in addition to the sub-ca&hellip;", "Pretty exited about the CTF since the first time I heard about it on irc! Can\u2019t wait!", "Aren\u2019t all sub-categories already available as tags? Removing sub-categories sounds pretty reasonable considering you can still categorize it the same way by just using  tags (but in a less confusing way as you wouldn\u2019t have tags that may or may not include the sub-category in addition to the sub-ca&hellip;", "Aren\u2019t all sub-categories already available as tags? Removing sub-categories sounds pretty reasonable considering you can still categorize it the same way by just using  tags (but in a less confusing way as you wouldn\u2019t have tags that may or may not include the sub-category in addition to the sub-ca&hellip;", "Pretty exited about the CTF since the first time I heard about it on irc! Can\u2019t wait!", "Pretty exited about the CTF since the first time I heard about it on irc! Can\u2019t wait!", "Pretty exited about the CTF since the first time I heard about it on irc! Can\u2019t wait!", "#0x00ctf 2017Hello fellow nullers and lurkers alike, today we are very pleased to announce the biggest 0x00sec CTF of 2017! 0x00ctf will have challenges focussed mainly on Pwning and Reverse Engineering. timedatectl&gt;&gt; 12:30pm December 15th 2017 UTC-50x00ctf will begin at 12:30 pm US Eastern tim&hellip;", "@0x00_Jinx Yeah I did this as well. I got pretty far but I got stuck on vm_run. I saw the hint about signals but I never even bothered about it, pretty ignorant of me . This challenge was exceptionally well designed and had a lot of depth to it, please continue creating these wonderful programs like&hellip;", "Excellent write-up @Leeky. Extra Kudos for the 2 bytes patch", "Thanks for this Leeky! I had given up on this challenge a while ago. I didn\u2019t realize that the lcb.boot file was also in the image and made my own file with the \u201cLCB\u201d string in it  I\u2019ll be extra careful for the next challenge tho.", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "@0x00_Jinx Yeah I did this as well. I got pretty far but I got stuck on vm_run. I saw the hint about signals but I never even bothered about it, pretty ignorant of me . This challenge was exceptionally well designed and had a lot of depth to it, please continue creating these wonderful programs like&hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "Excellent write-up @Leeky. Extra Kudos for the 2 bytes patch", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "How to Anonymize your CryptoCurrencies and CryptoAssetsRequired SkillsList of previous knowledge required to understand the paper. Contents that will not be explained and without knowing them it will be very difficult to follow the paper content. Familiarity with VMs, Tor, and VPNsOwn cryptocur&hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "#Writeup - Look InsideSo yeah, a writeup for @0x00pf\u2019s challenge Look Inside (and also for the sub-challenge Look Deeper Inside). Considering you are interested in this article I guess you spent some time with the challenges (if not I recommend doing so before reading this as it becomes way more &hellip;", "Just got the time to fix the bug: With the binary named LookInside echo -ne \u201c\\x90\\x90\u201d | dd of=LookInside seek=643   bs=1 count=2 conv=notrunc echo -ne \u201c\\xd7\\xd2\u201d | dd of=LookInside seek=13179 bs=1 count=2 conv=notrunc going to include an explanation for this in my writeup", "#What\u2019s this about? Hello everyone, I\u2019m Noswis. You might have already met me on IRC but this my first real post here! In this post I want to show you how I made a key-generator for a puzzle that @0x00pf created. I learned a lot from the puzzle that I\u2019d like to share with you and I hope you will le&hellip;", "Congrats!  You made it again Looking forward to your write up! I believe it is possible a 2 bytes patch (haven\u2019t checked it yet)\u2026 Anybody?", "Just got the time to fix the bug: With the binary named LookInside echo -ne \u201c\\x90\\x90\u201d | dd of=LookInside seek=643   bs=1 count=2 conv=notrunc echo -ne \u201c\\xd7\\xd2\u201d | dd of=LookInside seek=13179 bs=1 count=2 conv=notrunc going to include an explanation for this in my writeup", "Just got the time to fix the bug: With the binary named LookInside echo -ne \u201c\\x90\\x90\u201d | dd of=LookInside seek=643   bs=1 count=2 conv=notrunc echo -ne \u201c\\xd7\\xd2\u201d | dd of=LookInside seek=13179 bs=1 count=2 conv=notrunc going to include an explanation for this in my writeup", "IntroductionIt has been more than a year since I published the concept of infecting an executable with shellcode here and recently I have been motivated to develop another PoC which follows the same path but at a more advanced level combining knowledge and techniques that I have learned since then.&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Continuing the discussion from [KEYGEN] Look Inside: Please be aware that, in case you are trying to solve the KEYGEN Look Inside, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading. You have been warned PATCHME[spoiler] T&hellip;", "Continuing the discussion from [KEYGEN] Look Inside: Please be aware that, in case you are trying to solve the KEYGEN Look Inside, the content on this new challenge may disclose extra details about the keygen. Of course it is up to you to keep on reading. You have been warned PATCHME[spoiler] T&hellip;", "Congrats @Leeky  You\u2019ve got the first badge! Looking at your first key I assume you haven\u2019t reversed the whole thing\u2026", "Congrats @Leeky  You\u2019ve got the first badge! Looking at your first key I assume you haven\u2019t reversed the whole thing\u2026", "Thank you, had lots of fun!  2-VM-4-ME$ :  EV-$.ZGJ4$ ydoIdodis$    :  so-$eZG}o$ keygen-fun   :  uy-$fZGdn$", "Thank you, had lots of fun!  2-VM-4-ME$ :  EV-$.ZGJ4$ ydoIdodis$    :  so-$eZG}o$ keygen-fun   :  uy-$fZGdn$", "@0n3D3y on Linux you can use imageMagick  or GIMP. convert is actually one of the programs that comes with ImageMagick\u2026", "The binary does indeed extract just fine  [image]", "You already know how it goes. Post 3 unique keys on the comments  and get you Challenge Solver Badge. Badges will be available until the first keygen/writeup is released. Please use the spoiler tag for keygens and writeups (unless you post them in a new topic). This is an experiment so I hope it wo&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "I don\u2019t like double posting, but whatever. Thanks dtm!  Jumped over mean anti-debugger code in a trial and error approach. I then NOPed the ExitProcess code that CRCed the StringTable to be able to modify it. Now I applied the patch from my previous comment. The program crashed for some reason,&hellip;", "Signed up just to say that I accomplished this; By jumping the loop setup after incorrectly inputting a key Found the initial point of the loop, set to jnz return_equal therefore allowed access. This in turn created the Licence.lic with the key for me with the &#39;accepted key &#39;inside. Not a very ma&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Hello folks! I hope you\u2019re all doing great! Today\u2019s topic is by far my most favorite heap exploitation technique I\u2019ve ever dealt with until now (as far as Linux is concerned). I can\u2019t stress enough how much I love this technique. It\u2019s super smart, technical, and even though malloc has been hardened &hellip;", "NULL Pointer dereferenceIn the name of Allah, the most beneficent, the most merciful. Hello everyone to a boring article once again. I\u2019ve found a bit of freetime, so i decided to write this article, it isn\u2019t really well done, but i hope you guys like it and learn much !Kernel Exploitation ?&hellip;", "Hi 0x00ers. This is my first post and my goal in it is to share and detail how you can exploit a buffer overflow by doing a detailed analysis of the executable and for that I will solve a challenge proposed by ricnar in its reversing course, it is clear that i just started on the subject of reversi&hellip;", "Let\u2019s step up the game. ###Description Note down your dreams in your diary. Who knows, dreams come true and you might get a shell! ###Rules ASLR on.Make sure your malloc\u2019s version is the latest. I know its mitigations so don\u2019t try to fool me.If you\u2019re getting crashes, consult this.Only a d&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Hey, I\u2019m a bit late to the party but I finally got some working serials here!  The next thing I\u2019m working on is getting a serial for any arbitrary string automatically using a keygen.  Perhaps I\u2019ll even do a little writup of the process if people are interested in how I got the serials. Anyways, tha&hellip;", "So recently I\u2019ve been re-motivated to do some more game hacking and I thought that I\u2019d do another article to introduce more aspects on top of what I\u2019ve already shown from my previous ones. In the following document, I\u2019ll be detailing the usage of DLL injection and its advantages, a fundamental conce&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Hello 0x00\u2019ers! As many of you are aware, we are very fortunate to be able to offer 0x00sec as an ad-free service, hopefully forever. As this community grows, it will eventually require more and more just to keep it running. At the present, we receive a minimal amount from Amazon affiliates, anyti&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "I\u2019m not gunna lie, this might be the best quality post we\u2019ve had on 0x00sec to date. Very well done @Leeky", "I\u2019m not gunna lie, this might be the best quality post we\u2019ve had on 0x00sec to date. Very well done @Leeky", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "Realmode Assembly - Writing bootable stuffPart 5: Graphic ModeWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to graphical&hellip;", "There are a variety of different types of electric motors; However, in this article we\u2019re only going to discuss the two simple rotary types of motors. Those being the AC electric motor and the DC electric motor. The difference between the two being the type of magnet in the outer shell of the motor.&hellip;", "This is by all means the best price/quality SDR for beginners at the moment. If you always wanted to get started with SDR now is the best time to do it. UPD: If you never heard of Software Defined Radio I would recommend to watch Software Defined Radio with HackRF course by Michael Ossmann. I fin&hellip;", "&gt; PrefaceNote: As always the following is just a digest of all the things I could observe by working on printers myself or facts from stuff I read about recently. Since this thread about the HP printer promo videos caught some attention I will try to shed some light onto the field which was displa&hellip;", "I\u2019ll do the cryptocurrency article", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "Greetings, 0x00sec! After much discussion, the 0x00sec mods and admins have put together a new program, a Bounty Program. How it WorksThis very post will be a Wiki. Members will be able to add any topic they\u2019d like to see written about on this site. Other members will see the wiki, scroll through,&hellip;", "Definetly. It could cover a huge ranche of skills, from firmware extraction and analysis to even modifying it and copy it on the fly via a update(seems overkill, but would definetly be a nice thing) Things like analysing exposed services and versions from the most common printers should also be on t&hellip;", "@fraq has dropped a bunch of concepts here that may be confusing for people not familiar with communications systems. So I will try, with @fraq\u2019s permission, to expand a bit further. Sure. I like these topics  As @fraq said, that elephant thingy is related to mechanical waves, like sound, not elect&hellip;", "The legend himself gave another mind-blowing talk at BH this year. Even if you are not into very technical low level exploitation, it\u2019s a must-watch talk in my opinion.", "Few days ago I started to debug programm for Xtensa processors. Today i find out, that there is possible for user to create additional commands fot processor with TIE Language. There is not very much documentation in the network and the software for creating commands with TIE, Xtensa Xplorer, availa&hellip;", "WTF is RFC5114?We all know the importance of large prime numbers in cryptography, given that n = pq form large numbers\u2019 prime factorization requires an unreachable amount of computational resources. But why is this RFC enforces a secure DH group (used not just in crypto, but zeroknowledge systems &hellip;", "Continuing the discussion from [Malware Analysis] Case GBC-17_124: The dropper Part I: The get_msg FunctionOur analysis is going pretty well. By now, we know that the get_msg function is the one that gets the data from the network, data that is later dumped into a file. Time to rip it off:       &hellip;", "If you are reading this is because you have miserably failed to solve the Case GBC-17/124. LoL, just kidding. The GBC-17_124 challenge was intended to show you something that you can easily find in the real world, but still easy to solve. Yes, real world stuff is not as fun as the challenge you usua&hellip;", "Hello all again!It\u2019s been a while since the  Python Package for creating backdoors thingie and all that time I have been researching a way to properly create a stager for a Python backdoor script that has dependencies. *You know stagers! The lil\u2019 things that set the stage for the real thing to run&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "For a few weeks now we have been watching the production of https://wacksec.com get better and better. We have seen multiple community members work hard into making this show great as well as informing the community and ordinary people of news and topics in infosec. Over the past few weeks, we have&hellip;", "Social Engineering is basically what I believe is the future of hacking. The biggest weakness is people themselves. Why? Imagine that you\u2019ve put in the best security possible cyber wise, but haven\u2019t trained your employees to well, not give out sensitive information even when the request is genuine. &hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "I can\u2019t get over how super awesome this series is. This is truly the best bridge from learning what goes to together to actually making that in code. I find having code to see and touch helps me learn so much more than just reading how it goes together. This seriously uncovers a lot of mystery. Pe&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "The Rensselaer Polytechnic Institute has its complete binary exploitation course online - publicly available. It contains everything from reversing basics up to kernel exploitation The course can be found here http://security.cs.rpi.edu/courses/binexp-spring2015/ And the course material can be fo&hellip;", "Writing in C would kinda defy the assembly part this series is about but I also think that it would be quite interesting. Problem with doing it in real mode is that most compilers don\u2019t support 16bit freestanding output but I have a few compilers to experiment with. So depending on my results with t&hellip;", "I hope the nexter part will be a C compiler for our OS", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Realmode Assembly - Writing bootable stuff - Part 4Part 4: Basic Math OSWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs t&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Hi fellas, I found an interesting docker image on Docker Hub, dedicated to TOR hidden service deployement. The README is self explainatory and worth a try.  https://hub.docker.com/r/goldy/tor-hidden-service/ Take your chance to create the new silk road  Best, Nitrax", "Hi fellas, Let me introduce you my last tool, ORFinder ORFinder claims to be able to find any smtp services, exposed over the internet, vulnerable to open relay attack. Such attack relies on the fact that the sender / receiver addresses are not checked by the underlying mail server, allowing to p&hellip;", "Running Nmap from Chat with LegobotChatops for hackers! For those of you who saw my shenanigans in IRC earlier, this is the promised post on what I was doing. For those who missed it or don\u2019t hang out in IRC, shame! This is an announcement of a new package I released today, description of how to u&hellip;", "#Intro Hello fellow nybbles Null Bytes and Nullers! Today we are going to be discussing a fairly trivial exploit (FUSION level0) written in a language with very few pre-written hacking toolsets and libraries. We are a bit spoiled by pwntools and all of the SO questions on \u201chow to implement a buffe&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Hello! Welcome to my first tutorial about the ELF format, the ARM processor, and how to code a debugger for it. Ever wondered how a debugger works? Ever wondered how a debugger works on an ARM processor? In this series of articles, I am going to go from start to finish on how to code a simple debu&hellip;", "Intro to the Hackers labAs asked in the The Hackers lab - Rpi Edition  by @VVid0w, he and I will now collaborate when writing this series about hardware and essentials a hacker should have to solve the task efficiently Today with a 100% fresh portion about debugging/reversing What is a Bus Pirat&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "And most of all, Sammy is my hero &lt;div id=mycode style=&quot;BACKGROUND: url(&#39;javascript:eval(document.all.mycode.expr)&#39;)&quot; expr=&quot;var B=String.fromCharCode(34);var A=String.fromCharCode(39);function g(){var C;try{var D=document.body.createTextRange();C=D.htmlText}catch(e){}if(C){return C}else{retu&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 3Part 3: Building &amp; RunningWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal progr&hellip;", "Check out this awesome repo of material, it\u2019s got something for everyone! http://index-of.es/ ~ IoTh1nkn0t", "Great writeup, @Leeky! I haven\u2019t seen any examples of scripting inside GDB before, let along with python. This makes debugging and reversing so much more sane now", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "Great writeup, @Leeky! I haven\u2019t seen any examples of scripting inside GDB before, let along with python. This makes debugging and reversing so much more sane now", "#Continued Fraction Data Encoding I\u2019m learning to program and some time ago while thinking about a new project I came up with an idea to use continued fraction as an method to encode data that would produce unique result each time even if the input was always the same. I would like to hear your th&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Thank you for the sources you linked, they are quite good describing how booting up and the BIOS in general work. The third source explains quite good why the BIOS is able to provide interrupts that work on all kinds of hardware! The first and second source also mention the Shadowing RAM  and that&hellip;", "Dynamic Loading of Shared Objects at RuntimeI\u2019ve been doing a lot of tutorials about dynamic stuff. It\u2019s because we trees rustle whenever the wind blows. Anyway, this post comes as an addition to @_py\u2019s Linux Internals - The Art Of Symbol Resolution. This whole thing started when I decided that t&hellip;", "nice write-up @Leeky  ! Logical way to solve it after your made observations, which made it easy to follow. Also nice additions from you @mkhdznfq I didn\u2019t know about that and will definitely try that on my own!", "Thank you for the sources you linked, they are quite good describing how booting up and the BIOS in general work. The third source explains quite good why the BIOS is able to provide interrupts that work on all kinds of hardware! The first and second source also mention the Shadowing RAM  and that&hellip;", "Fret not! Part 3 is being worked on.", "nice write-up @Leeky  ! Logical way to solve it after your made observations, which made it easy to follow. Also nice additions from you @mkhdznfq I didn\u2019t know about that and will definitely try that on my own!", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "glad that i can help", "glad that i can help", "Wow this is much simpler than my approach. I knew that there were tools for this but I had no clue how they are called so my approach for this was stepping through with gdb and counting (although I didn\u2019t think about using it here). Thank you very much for posting this!", "as an alternative to the method above, we also can bruteforce the password by counting the instructions executed which can be done using intel\u2019s pin tool or Linux\u2019s performance analysis tool (perf). this method exploit the fact that the program exits when incorrect character is guessed and executes &hellip;", "@Leeky Could you please take a look at those three resources and consider adding them to the \u201cSources and References\u201d section? http://flint.cs.yale.edu/feng/cos/resources/BIOS/ http://gec.di.uminho.pt/discip/MaisAC/HCW/09R03.pdf https://superuser.com/questions/660143/does-the-bios-have-some-sort&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "@Leeky Could you please take a look at those three resources and consider adding them to the \u201cSources and References\u201d section? http://flint.cs.yale.edu/feng/cos/resources/BIOS/ http://gec.di.uminho.pt/discip/MaisAC/HCW/09R03.pdf https://superuser.com/questions/660143/does-the-bios-have-some-sort&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "great writeup  any chance you can upload the binary?", "sure! Here", "Thanks for this Part ! It\u2019s well explained  I hope that there are other part =)", "It\u2019s been a while since I wrote something related to my development projects, not to mention something that\u2019s malware-related. This was a concept that I devised (even though it already exists) while I was helping @fraq come up with ideas on stealth techniques on Windows machines. I\u2019ve now completed &hellip;", "Hello, I am not a low-level guy but I thought this will be a good link to share and a lot of you may get interested in this. I will keep sharing such link if you all want.", "If you start asking like that, 1 byte patch : End of serial checking routine, replace pop ebx or pop esi with pop eax (0x58). The program will start in demo mode, you then have to register. After registering the program exits. Now restarting and you have the full version. CPU DisasmAddress   H&hellip;", "Thanks dtm! My first approaches half way failed with cracked binaries that crashed 50% of the time and worked the other 50%. At the end I did something similar to @rokups and also patched the CRC on the StringTable to mess it that as well. (To allow debugging I just patched a few jumps, I didn\u2019t&hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "If you start asking like that, 1 byte patch : End of serial checking routine, replace pop ebx or pop esi with pop eax (0x58). The program will start in demo mode, you then have to register. After registering the program exits. Now restarting and you have the full version. CPU DisasmAddress   H&hellip;", "Thanks dtm! My first approaches half way failed with cracked binaries that crashed 50% of the time and worked the other 50%. At the end I did something similar to @rokups and also patched the CRC on the StringTable to mess it that as well. (To allow debugging I just patched a few jumps, I didn\u2019t&hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "If you start asking like that, 1 byte patch : End of serial checking routine, replace pop ebx or pop esi with pop eax (0x58). The program will start in demo mode, you then have to register. After registering the program exits. Now restarting and you have the full version. CPU DisasmAddress   H&hellip;", "Oh wow that is a nice observation right there! Only way to beat that must be making a working serial", "If you start asking like that, 1 byte patch : End of serial checking routine, replace pop ebx or pop esi with pop eax (0x58). The program will start in demo mode, you then have to register. After registering the program exits. Now restarting and you have the full version. CPU DisasmAddress   H&hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "Thanks dtm! My first approaches half way failed with cracked binaries that crashed 50% of the time and worked the other 50%. At the end I did something similar to @rokups and also patched the CRC on the StringTable to mess it that as well. (To allow debugging I just patched a few jumps, I didn\u2019t&hellip;", "Thanks dtm! My first approaches half way failed with cracked binaries that crashed 50% of the time and worked the other 50%. At the end I did something similar to @rokups and also patched the CRC on the StringTable to mess it that as well. (To allow debugging I just patched a few jumps, I didn\u2019t&hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "Learned so many things from this writeup. Thanks @Leeky I\u2019m still very new to RE, but I understood almost everything from this writeup", "Learned so many things from this writeup. Thanks @Leeky I\u2019m still very new to RE, but I understood almost everything from this writeup", "Pretty cool anti-debug this time\u2026 Here\u2019s my approach. We use the same strategy as always for finding the anti-debug: Step your way through the code. You\u2019ll see the structure is known from the last two parts; nearly the same. When you come to the loop you\u2019ll know what I mean by nearly . [image] A&hellip;", "Thanks dtm! My first approaches half way failed with cracked binaries that crashed 50% of the time and worked the other 50%. At the end I did something similar to @rokups and also patched the CRC on the StringTable to mess it that as well. (To allow debugging I just patched a few jumps, I didn\u2019t&hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "#0x00sec CTF Writeup - Forward then ReverseSo yeah, I finally got time to write a writeup for @Deshi\u2019s CTF but I sadly only have stuff written down for the RE challenge (mainly because the other stuff I solved was pretty easy and didn\u2019t require more than a quick google search or simple stuff like &hellip;", "Morning folks. I know its been a while since ive posted here, life has been crazy,  and my company just agreed on a takeover of another blue team company,  so I\u2019ve been dealing with all that fun legal stuff. Id like the communities input on something.  I\u2019ve been speaking to my Microsoft rep for th&hellip;", "[image]", "yeay !  Is there part 3 ?", "BackstoryAfter reading the cracking attempts from the previous thread, edgyReggie asked DownerDanny to take some time into researching further possible solutions to deter crackers. That some time has now passed and edgeS0ft are ready to release their updated software hoping that it will at least ho&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Interesting stuff there! I never messed with protected mode before but I see lots of familiar code.   I also see that you are working with both C and Assembly which is apparently quite common but I\u2019ve never messed with that either (as I mainly did real mode assembly to get into x86 assembly). Is th&hellip;", "HI all, you can find a basic OS made by me. See here https://github.com/ashishhacker/TinuOS", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Nice series @Leeky . Looking forward to the next parts to extend my knowledge on more low level stuff other than asm for reversing", "I want to extend it further. But it\u2019s just difficult and time consuming for me to do it alone", "Nice series @Leeky . Looking forward to the next parts to extend my knowledge on more low level stuff other than asm for reversing", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "I want to extend it further. But it\u2019s just difficult and time consuming for me to do it alone", "Interesting stuff there! I never messed with protected mode before but I see lots of familiar code.   I also see that you are working with both C and Assembly which is apparently quite common but I\u2019ve never messed with that either (as I mainly did real mode assembly to get into x86 assembly). Is th&hellip;", "Interesting stuff there! I never messed with protected mode before but I see lots of familiar code.   I also see that you are working with both C and Assembly which is apparently quite common but I\u2019ve never messed with that either (as I mainly did real mode assembly to get into x86 assembly). Is th&hellip;", "I\u2019m happy to share my code and open to any improvements. miniOS Feel free to contribute", "I\u2019m happy to share my code and open to any improvements. miniOS Feel free to contribute", "Yeah, I will but it might be a while until we hit that end game stage.", "Yeah, I will but it might be a while until we hit that end game stage.", "Reverse Engineering and Crackme challengesThis topic is an aggregation of Crackme and reverse engineering challenges developed for 0x00sec. Please discuss the challenges in the thread they were originally posted or on IRC in #challenges This curation is based entirely on my own whim and not a comp&hellip;", "I don\u2019t like double posting, but whatever. Thanks dtm!  Jumped over mean anti-debugger code in a trial and error approach. I then NOPed the ExitProcess code that CRCed the StringTable to be able to modify it. Now I applied the patch from my previous comment. The program crashed for some reason,&hellip;", "Hm only have little time at the moment, got it working but it isn\u2019t looking correct. I guess I have to search for all the anti debugging and anti modification code later!  [image] CPU DisasmAddress   Hex dump          Command                                 Comments013818D9  |&gt; \\8B35 98603901 &hellip;", "Hm only have little time at the moment, got it working but it isn\u2019t looking correct. I guess I have to search for all the anti debugging and anti modification code later!  [image] CPU DisasmAddress   Hex dump          Command                                 Comments013818D9  |&gt; \\8B35 98603901 &hellip;", "Hm only have little time at the moment, got it working but it isn\u2019t looking correct. I guess I have to search for all the anti debugging and anti modification code later!  [image] CPU DisasmAddress   Hex dump          Command                                 Comments013818D9  |&gt; \\8B35 98603901 &hellip;", "Try the next one.", "No debugger allowed can\u2019t stop me when I already now what to patch  (same as last time) [image]", "No debugger allowed can\u2019t stop me when I already now what to patch  (same as last time) [image]", "I\u2019m happy that you enjoyed it! The next parts that I\u2019ve planned will be about How to Run/Build it and Writing a small input/output console kernel. I haven\u2019t messed with the Interrupt Service Routines that much yet, only ever written a custom keyboard handler with it, I\u2019m very interested in your co&hellip;", "Great tutorial. I\u2019ve completed this part.  Also I\u2019ve implemented ISR and IRQ. I would like to know what\u2019s next!", "Yeah, thanks for the CTF @Deshi, was fun!", "I played this one as TheLoneWolf bc I was without a team. It was fun, thank you @Deshi !", "The CTF is now over. There would of been 4 hours remaining but somehow the platform took a crap and i can\u2019t even export the team scores so i will post the teams that actually scored anything and following that the specifics of who captured a challenge first. Thanks to all the teams that participated&hellip;", "BackstoryedgyReggie is a busy guy\u2026 He has a massive workload plus a part time job at the local supermarket on the weekends, and on top of that, he has to develop his software for extra pocket money! Because of this, he does not have the time to spare to learn how to really defeat those dirty cracke&hellip;", "ok, thank you for explaining  Would have been too easy and powerful", "ok, thank you for explaining  Would have been too easy and powerful", "[image]", "[image]", "BackstoryedgyReggie is very thankful for those very, very, very few people (probably his parents ) who bought him some coffee to get him through his days in university. As a means of saying Thanks!, he has implemented something that shows the customer\u2019s name on the software after it has been regist&hellip;", "[image]", "Let\u2019s start with the interrupts. As they are only available in realmode you need to switch from your current mode (Long Mode / Protected Mode) to it and that\u2019s nothing normal user programs can do (nor do I recommend that, didn\u2019t try it myself though). But if you are running DOS you can use them fre&hellip;", "Let\u2019s start with the interrupts. As they are only available in realmode you need to switch from your current mode (Long Mode / Protected Mode) to it and that\u2019s nothing normal user programs can do (nor do I recommend that, didn\u2019t try it myself though). But if you are running DOS you can use them fre&hellip;", "I really like this series. Extremely interesting.  I hope you can keep the requirements low, so that I can follow. Can you use those assembler  interrupts and commands in your normal OS? Maybe to halt the system or reset the disk like you did before booting?", "Great post @Leeky! As discussed yesterday on IRC\u2026 this is slight modification poking the video memory instead of using the slow BIOS  org 0x8000bits 16push  0xb800pop   es     ; Set ES to the Video Memory;; Clear screenmov ax, 0x1000    ; Clean screen blue backgroundcall  cls;; Pri&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Great post @Leeky! As discussed yesterday on IRC\u2026 this is slight modification poking the video memory instead of using the slow BIOS  org 0x8000bits 16push  0xb800pop   es     ; Set ES to the Video Memory;; Clear screenmov ax, 0x1000    ; Clean screen blue backgroundcall  cls;; Pri&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "I really like this series. Extremely interesting.  I hope you can keep the requirements low, so that I can follow. Can you use those assembler  interrupts and commands in your normal OS? Maybe to halt the system or reset the disk like you did before booting?", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "Love this regular content! [image] Like always, some string editing. Also small patch to change the \u201cJNE\u201d to \u201cJMP\u201d. (That\u2019s the point where the program does stuff depending on licence file existence and correctness, so this modification basically makes existing and non-existing and correct and n&hellip;", "Realmode Assembly - Writing bootable stuff - Part 2Part 2: Hello World BootloaderWhat is this?This is going to be a walk-through in writing an Operation System in assembly which operates purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal p&hellip;", "The Greedy Brothers Corp. has approached you, young wannabe, to solve a pretty nasty issue. Many machines have been infected by a mysterious ransomware. The IT department from the Greedy Brothers Corp. have found a dropper in some of the machines but no track of the actual malware\u2026 except, of course&hellip;", "Congrats! @Leeky we have got the first flag!!!", "took some time but I found 1 flag CTF{Sl33py H0loW}", "took some time but I found 1 flag CTF{Sl33py H0loW}", "BackstoryedgyReggie has looked over the previous thread once again and has thought that using such an easy encoding method just isn\u2019t going to cut it. He has created a new serial number and obfuscated it yet again, and is confident that nobody can find it. He has also noticed that people have been &hellip;", "Love this regular content! [image] Like always, some string editing. Also small patch to change the \u201cJNE\u201d to \u201cJMP\u201d. (That\u2019s the point where the program does stuff depending on licence file existence and correctness, so this modification basically makes existing and non-existing and correct and n&hellip;", "Huh, I thought I fixed that\u2026", "Was fun again! I love how freestyle this is. Keep this going! [image] [image] (I also removed the register option but I don\u2019t think I need to show that again  ) Like @lacike already mentioned changing the jump (although I prefer NOPing). Also some small string modifications. (Also you probably&hellip;", "Was fun again! I love how freestyle this is. Keep this going! [image] [image] (I also removed the register option but I don\u2019t think I need to show that again  ) Like @lacike already mentioned changing the jump (although I prefer NOPing). Also some small string modifications. (Also you probably&hellip;", "That was fun, thanks @dtm. Spent the most time just dicking around with what I could get it to say. Intrigued by how to do this persistently like @Leeky  [image]", "That was fun, thanks @dtm. Spent the most time just dicking around with what I could get it to say. Intrigued by how to do this persistently like @Leeky  [image]", "BackstoryAfter reviewing some of the analysis of his software from the previous thread, edgyReggie thinks he knows where he went wrong. This time, he has made sure that no one will be able to find the new serial number after invalidating the previous one. Can you prove him wrong? DifficultyAuthor&hellip;", "Was fun again! I love how freestyle this is. Keep this going! [image] [image] (I also removed the register option but I don\u2019t think I need to show that again  ) Like @lacike already mentioned changing the jump (although I prefer NOPing). Also some small string modifications. (Also you probably&hellip;", "Was fun again! I love how freestyle this is. Keep this going! [image] [image] (I also removed the register option but I don\u2019t think I need to show that again  ) Like @lacike already mentioned changing the jump (although I prefer NOPing). Also some small string modifications. (Also you probably&hellip;", "Was fun. Registering each time it starts was too annoying tho\u2019 so I fixed that. Also a registered user has no use for a register button so I removed that as well. [image] [image] Pretty dirty, just some string editing", "Nice! Extra points for persistence!  Disabling the Register menu will be integrated in the next release - I just figured out how to do it, heh.", "Was fun. Registering each time it starts was too annoying tho\u2019 so I fixed that. Also a registered user has no use for a register button so I removed that as well. [image] [image] Pretty dirty, just some string editing", "Was fun. Registering each time it starts was too annoying tho\u2019 so I fixed that. Also a registered user has no use for a register button so I removed that as well. [image] [image] Pretty dirty, just some string editing", "Was fun. Registering each time it starts was too annoying tho\u2019 so I fixed that. Also a registered user has no use for a register button so I removed that as well. [image] [image] Pretty dirty, just some string editing", "Was fun. Registering each time it starts was too annoying tho\u2019 so I fixed that. Also a registered user has no use for a register button so I removed that as well. [image] [image] Pretty dirty, just some string editing", "Suhdudes. I\u2019m back with another challenge but it will be different because this will be designed for Windows! Another thing I will be doing is a kind of \u201cseries\u201d with these crackmes where each successive one will get incrementally more difficult. I will also supply research material (to replace hint&hellip;", "@Leeky pointed out some of the issues. After looking a bit into ftrace, you will really have to change quite some code. Most of the ELF related stuff should be fine, but in addition to the jump opcodes you may also have to rework the break points (that uses a different instruction on ARM) and specia&hellip;", "Well yeah but you would need to change alot more things (I\u2019ve only looked at the ftrace). for example the branch_table would need ARM opcodes instread of x86 opcodes. Also like you noticed the user_regs_struct needs adjustments to be ARM compatible (usage of ARM registers instead of x86).You also &hellip;", "Actually all of this can be read from the ELF File header.", "Well yeah but you would need to change alot more things (I\u2019ve only looked at the ftrace). for example the branch_table would need ARM opcodes instread of x86 opcodes. Also like you noticed the user_regs_struct needs adjustments to be ARM compatible (usage of ARM registers instead of x86).You also &hellip;", "Well yeah but you would need to change alot more things (I\u2019ve only looked at the ftrace). for example the branch_table would need ARM opcodes instread of x86 opcodes. Also like you noticed the user_regs_struct needs adjustments to be ARM compatible (usage of ARM registers instead of x86).You also &hellip;", "need more", "Great post! Keep &#39;em coming", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Sigreturn Oriented ProgrammingIn the name of Allah, the most beneficent, the most merciful. Hello everyone to a new boring article, after we took a small look on normal ROP stuff, I decided to write something more fun !@_py is the one that started that idea! for learning purposes \u2026I hope yo&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Great write up.  Very informative, could also be a standalone post on how PC\u2019s start. I hope I am able to follow in part 2 as well", "nice stuff, can\u2019t wait for part 2", "Isn\u2019t the BIOS always on (via a little coin battery)?", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Not the actuall BIOS is always on. Only the CMOS RAM,the memory BIOS settings (for example the boot sequence) are saved on, and the system clock are always powered by a small battery. They are getting powered so the system clock can run while the PC has no power and to keep the data in the CMOS RAM&hellip;", "Not the actuall BIOS is always on. Only the CMOS RAM,the memory BIOS settings (for example the boot sequence) are saved on, and the system clock are always powered by a small battery. They are getting powered so the system clock can run while the PC has no power and to keep the data in the CMOS RAM&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Realmode Assembly - Writing bootable stuffPart 1: Theory and ConceptsWhat is this?This is going to be a walk-through in writing  Operation Systems in assembly which operate purely in Realmode. Goal will be writing different kernels from a simple \u201cHello World\u201d over small terminal programs to gr&hellip;", "Hey, everybody! @Leeky has already got a Tier-0 Challenge Solver badge. What are you waiting for to get yours?  Solve this challenge, earn your own and get one step closer for a Tier-1 Challenge Solver badge! Note: You have to provide unique username/keys pairs to get your badge. Hurry up while &hellip;", "Hey, everybody! @Leeky has already got a Tier-0 Challenge Solver badge. What are you waiting for to get yours?  Solve this challenge, earn your own and get one step closer for a Tier-1 Challenge Solver badge! Note: You have to provide unique username/keys pairs to get your badge. Hurry up while &hellip;", "Congrat @Leeky!!  Well Done I\u2019ll PM you with your request;)", "was fun!  ilovecatz&lt;3 : 676a6d7463676d787e3a31 thecakeisalie : 746669635f6f696d7f61686d63 thiswasfun : 746665737b6171647362 471e61656a23702c6861766120612460636b692c5f7224786865247363757263632a24635f62244d?", "was fun!  ilovecatz&lt;3 : 676a6d7463676d787e3a31 thecakeisalie : 746669635f6f696d7f61686d63 thiswasfun : 746665737b6171647362 471e61656a23702c6861766120612460636b692c5f7224786865247363757263632a24635f62244d?", "Was fun!   5317 5327 5397 5417 5427 5497"]}