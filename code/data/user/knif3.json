{"user": "knif3", "history": ["That is true, I meant more for like Nikto, nmap and such. Enumeration tools. I now see that Nessus was in your list  Nessus, Nexpose, OpenVAS and all the big \u201cvuln. management software\u201d platforms are never really used for Pen. testing enumeration (Not with companies I have worked with at least). I&hellip;", "That is true, I meant more for like Nikto, nmap and such. Enumeration tools. I now see that Nessus was in your list  Nessus, Nexpose, OpenVAS and all the big \u201cvuln. management software\u201d platforms are never really used for Pen. testing enumeration (Not with companies I have worked with at least). I&hellip;", "@knif3 oh, man, if you think Nessus is stealthy, I\u2019d love to know what you call loud  The paid version, at least, will scale to a pretty large network if you don\u2019t mind waiting for it to finish.", "That is true. There have been some attempts to compile the Go into C and then compile the C into a DLL for injection but that is janky at best. C# Is nice for basic things. If you are getting into Windows Services then try out C++ instead though as C# does some auto-logging and takes away a little b&hellip;", "Go is quite nice for writing cross-platform rats and avoiding signature-detecting security tools, but the binaries get big and you can\u2019t shove it into memory on Windows like a DLL or EXE written in C. Powershell and C# tend to be the languages of choice for windows malware these days.", "@knif3 oh, man, if you think Nessus is stealthy, I\u2019d love to know what you call loud  The paid version, at least, will scale to a pretty large network if you don\u2019t mind waiting for it to finish.", "@MagisterQuis Listed some pretty solid enumeration tools that are the goto\u2019s for pentesters. If you are just working with small amounts of boxes these tools are the stealthiest, most targeted tools for the job. If you are trying to do more vulnerability analysis and keeping track of how secure your&hellip;", "They didn\u2019t package Python as an exe. I suggest reading through some documentation to learn more about how some of these deployment systems work to get an understanding before asking questions. Meterpreter installs an interpreter onto the system and then you run your .py files through the interprete&hellip;", "They didn\u2019t package Python as an exe. I suggest reading through some documentation to learn more about how some of these deployment systems work to get an understanding before asking questions. Meterpreter installs an interpreter onto the system and then you run your .py files through the interprete&hellip;", "Then, how Meterpreter deal with the python script and make it an exe to the victim ? they should have done something", "Honestly, I don\u2019t think any legit, serious hacker uses Python RATs and not to offend you or anything but just because you can build something in language X does not mean you should use it. Hell, I can build malware in Brainfuck but it doesn\u2019t mean that I should. \u201cUse the right tool for the right jo&hellip;", "@MagisterQuis Listed some pretty solid enumeration tools that are the goto\u2019s for pentesters. If you are just working with small amounts of boxes these tools are the stealthiest, most targeted tools for the job. If you are trying to do more vulnerability analysis and keeping track of how secure your&hellip;", "Honestly, I don\u2019t think any legit, serious hacker uses Python RATs and not to offend you or anything but just because you can build something in language X does not mean you should use it. Hell, I can build malware in Brainfuck but it doesn\u2019t mean that I should. \u201cUse the right tool for the right jo&hellip;", "Some people say that there are three things you have to do before you die: Write a book, have a child and plant a tree. Actually, the three things you have to do before you die are: write your own IRC bot, create a massive framework that only you will ever use and code an awesome  Linux kernel modul&hellip;", "Those of you that are following me on twitter may have heard about STAN. This is my pet project to learn about reverse engineering. It was born as an experiment with the capstone disassembly framework (http://www.capstone-engine.org/), and it evolved in something usable for simple projects. If you &hellip;"]}